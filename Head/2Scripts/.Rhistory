'Colon - Transverse', 'Colon',
'Adrenal Gland', 'Adrenal Gland',
'Vagina', 'Vagina',
'Stomach', 'Stomach',
'Pancreas', 'Pancreas',
'Nerve - Tibial', 'Nerve',
'Uterus', 'Uterus',
'Adipose - Subcutaneous', 'Adipose Tissue',
'Adipose - Visceral (Omentum)', 'Adipose Tissue', # my decision
'Skin - Not Sun Exposed (Suprapubic)', 'Skin',
'Skin - Sun Exposed (Lower leg)', 'Skin',
'Artery - Coronary', 'Blood Vessel',
'Artery - Tibial', 'Blood Vessel',
'Prostate', 'Prostate',
'Spleen', 'Spleen',
'Esophagus - Muscularis', 'Esophagus',
'Testis', 'Testis',
'Kidney - Cortex', 'Kidney',
'Lung', 'Lung',
'Ovary', 'Ovary',
'Small Intestine - Terminal Ileum', 'Small Intestine',
'Esophagus - Gastroesophageal Junction','Esophagus',
'Minor Salivary Gland', 'Salivary Gland',
'Thyroid', 'Thyroid',
'Pituitary', 'Pituitary',
'Brain - Putamen (basal ganglia)','Brain',
'Brain - Spinal cord (cervical c-1)','Brain',
'Brain - Caudate (basal ganglia)','Brain',
'Brain - Cerebellar Hemisphere','Brain',
'Brain - Substantia nigra','Brain',
'Brain - Anterior cingulate cortex (BA24)','Brain',
'Brain - Amygdala','Brain',
'Brain - Hypothalamus','Brain',
'Brain - Hippocampus','Brain',
'Brain - Cortex','Brain',
'Brain - Nucleus accumbens (basal ganglia)','Brain',
'Brain - Cerebellum','Brain',
'Brain - Frontal Cortex (BA9)','Brain'
)
TISS = data.frame(TissuesVocab[c(TRUE, FALSE)],TissuesVocab[c(FALSE, TRUE)]); names(TISS)=c('tissue','TissueShortName')
setdiff(as.character(unique(Som$tissue)),as.character(TISS$TissueLongName))
Som = merge(Som, TISS) # add TissueShortName to each 'tissue'
########### E: Cell lifespans from the table here: https://docs.google.com/document/d/1UECub1DIdmuXwPqDLK8WRcZ6uIjEQiVmHXN1_XNVvUU/edit?usp=sharing
VecOfTissues = c('Adipose Tissue','Adrenal Gland','Bladder','Blood','Blood Vessel','Bone Marrow','Brain','Breast','Cervix Uteri','Colon','Esophagus','Heart','Kidney','Liver','Lung','Muscle','Nerve','Ovary','Pancreas','Prostate','Salivary Gland','Skin','Small Intestine','Spleen','Stomach','Testis','Thyroid','Uterus','Vagina','Pituitary')
VecOfTurnOvers = c(  2448,  455,  49,  30,  67.5,  3.2,  24637.5,  65.75,  5.7,  4.25,  10.5,  25300,  270,  363.5,  126,  5510,  24637.5,  30000,  315,  120,  60,  64,  7.05,  7.8,  1.4,  63.5,  3679.5,  13,  3.9, 25000)
All = data.frame(VecOfTissues,VecOfTurnOvers); names(All) = c('TissueShortName','TurnOverRate')
Som = merge(Som,All, by = 'TissueShortName')
write.table(Som,"../../Body/2Derived/HealthySomaticHumanMutations.GTEx.PatientSpecificDerive.txt", row.names = FALSE, quote = FALSE)
rm(list=ls(all=TRUE))
Som = read.table(Som,"../../Body/2Derived/HealthySomaticHumanMutations.GTEx.PatientSpecificDerive.txt", row.names = FALSE, quote = FALSE)
rm(list=ls(all=TRUE))
Som = read.table("../../Body/2Derived/HealthySomaticHumanMutations.GTEx.PatientSpecificDerive.txt", header = TRUE)
Som = read.table("../../Body/2Derived/HealthySomaticHumanMutations.GTEx.PatientSpecificDerive.txt", header = TRUE, sep = '\t')
Som = read.table("../../Body/2Derived/HealthySomaticHumanMutations.GTEx.PatientSpecificDerive.txt", header = TRUE, sep = ' ')
Som = read.table("../../Body/2Derived/HealthySomaticHumanMutations.GTEx.PatientSpecificDerive.txt", header = TRUE)
Som = read.table("../../Body/2Derived/HealthySomaticHumanMutations.GTEx.PatientSpecificDerive.txt", header = TRUE, sep = '\t')
View(Som)
Som = read.table("../../Body/2Derived/HealthySomaticHumanMutations.GTEx.PatientSpecificDerive.txt", header = TRUE, sep = ',')
Som = read.table("../../Body/2Derived/HealthySomaticHumanMutations.GTEx.PatientSpecificDerive.txt", header = TRUE, sep = '.')
### derive a table for patient-specific analysis
rm(list=ls(all=TRUE))
########################################
######### 1: DERIVE TABLE Som
########################################
############ A: read human ref seq (note that it is hg19 - not cambridge reference!):
RefSeq = read.table("../../Body/1Raw/chrM_refAllele.txt", header = FALSE, sep = '')
names(RefSeq)=c('Position','AncestralAllele')
############ B: read GTEx mutations and merge them with Ref Seq:
SomMut = read.table("../../Body/1Raw/TissueSpecificMtDNAMutationsGTEx.txt", header = TRUE, sep = '\t')
SomMut$Position = gsub('_(.*)','',SomMut$Mutation)  # gsub("_(.*)",'',READS$patient)
SomMut$DerivedAllele = gsub('(.*)_','',SomMut$Mutation)  # gsub("_(.*)",'',READS$patient)
nrow(SomMut) # 2565
Som = merge(SomMut,RefSeq, by = 'Position')
nrow(SomMut) # 2565
Som = Som[Som$DerivedAllele != Som$AncestralAllele,] # correct - in all lines Derived != Ancestral
nrow(SomMut) # 2565
Som$Substitution = paste(Som$AncestralAllele,Som$DerivedAllele, sep = '_')
table(Som$Substitution)
# A_C A_G A_T C_A C_G C_T G_A G_C G_T T_A T_C T_G
# 43 473  49  49   6 336 728  63  57  42 693  26
########## C: read subjectID and merge patient info:
SubjId = read.table("../../Body/1Raw/GtexTaiEvgenii/pheno.csv", header = TRUE, sep = ',')
SubjId = SubjId[,c(1,6,7,8)] # keep only SRR and patient specific important info (sex, age, Sibjid)
names(SubjId)[names(SubjId) == "run"] <- "SRR" # rename run into SRR
Som = merge(Som,SubjId, by = 'SRR')
########## D: read GTEx expression data:
Expr = read.table("../../Body/1Raw/TissueSpecificMtDNACoverageGTEx.txt", header = TRUE, sep = '\t')
ExprTissues = data.frame(table(Expr$Tissue))
ExprTissues = ExprTissues[order(ExprTissues$Var1),]
# merge by SRRID (lost 2565 - 2523 observations, but got expression level (percentMito) for each sample and alternative name of the Tissue (more simple))
nrow(Som) # 2565
Som = merge(Som,Expr, by.x = 'SRR', by.y = 'SRRID', all.x = TRUE)
nrow(Som) # 2565  - but not all of them have expression level defined  (2523 out of 2565)
TissueLongToTissueShort = unique(data.frame(Som$tissue,Som$Tissue))
# now, based on TissueLongToTissueShort and common sence I  manually create tissue vocabular:
TissuesVocab = c(
'Heart - Left Ventricle','Heart',
'Heart - Atrial Appendage','Heart',
'Cells - Transformed fibroblasts','Skin',
'Esophagus - Mucosa', 'Esophagus',
'Colon - Sigmoid', 'Colon',
'Artery - Aorta', 'Blood Vessel',
'Breast - Mammary Tissue', 'Breast',
'Cells - EBV-transformed lymphocytes', 'Blood',
'Liver', 'Liver',
'Whole Blood', 'Blood',
'Muscle - Skeletal', 'Muscle',
'Colon - Transverse', 'Colon',
'Adrenal Gland', 'Adrenal Gland',
'Vagina', 'Vagina',
'Stomach', 'Stomach',
'Pancreas', 'Pancreas',
'Nerve - Tibial', 'Nerve',
'Uterus', 'Uterus',
'Adipose - Subcutaneous', 'Adipose Tissue',
'Adipose - Visceral (Omentum)', 'Adipose Tissue', # my decision
'Skin - Not Sun Exposed (Suprapubic)', 'Skin',
'Skin - Sun Exposed (Lower leg)', 'Skin',
'Artery - Coronary', 'Blood Vessel',
'Artery - Tibial', 'Blood Vessel',
'Prostate', 'Prostate',
'Spleen', 'Spleen',
'Esophagus - Muscularis', 'Esophagus',
'Testis', 'Testis',
'Kidney - Cortex', 'Kidney',
'Lung', 'Lung',
'Ovary', 'Ovary',
'Small Intestine - Terminal Ileum', 'Small Intestine',
'Esophagus - Gastroesophageal Junction','Esophagus',
'Minor Salivary Gland', 'Salivary Gland',
'Thyroid', 'Thyroid',
'Pituitary', 'Pituitary',
'Brain - Putamen (basal ganglia)','Brain',
'Brain - Spinal cord (cervical c-1)','Brain',
'Brain - Caudate (basal ganglia)','Brain',
'Brain - Cerebellar Hemisphere','Brain',
'Brain - Substantia nigra','Brain',
'Brain - Anterior cingulate cortex (BA24)','Brain',
'Brain - Amygdala','Brain',
'Brain - Hypothalamus','Brain',
'Brain - Hippocampus','Brain',
'Brain - Cortex','Brain',
'Brain - Nucleus accumbens (basal ganglia)','Brain',
'Brain - Cerebellum','Brain',
'Brain - Frontal Cortex (BA9)','Brain'
)
TISS = data.frame(TissuesVocab[c(TRUE, FALSE)],TissuesVocab[c(FALSE, TRUE)]); names(TISS)=c('tissue','TissueShortName')
setdiff(as.character(unique(Som$tissue)),as.character(TISS$TissueLongName))
Som = merge(Som, TISS) # add TissueShortName to each 'tissue'
########### E: Cell lifespans from the table here: https://docs.google.com/document/d/1UECub1DIdmuXwPqDLK8WRcZ6uIjEQiVmHXN1_XNVvUU/edit?usp=sharing
VecOfTissues = c('Adipose Tissue','Adrenal Gland','Bladder','Blood','Blood Vessel','Bone Marrow','Brain','Breast','Cervix Uteri','Colon','Esophagus','Heart','Kidney','Liver','Lung','Muscle','Nerve','Ovary','Pancreas','Prostate','Salivary Gland','Skin','Small Intestine','Spleen','Stomach','Testis','Thyroid','Uterus','Vagina','Pituitary')
VecOfTurnOvers = c(  2448,  455,  49,  30,  67.5,  3.2,  24637.5,  65.75,  5.7,  4.25,  10.5,  25300,  270,  363.5,  126,  5510,  24637.5,  30000,  315,  120,  60,  64,  7.05,  7.8,  1.4,  63.5,  3679.5,  13,  3.9, 25000)
All = data.frame(VecOfTissues,VecOfTurnOvers); names(All) = c('TissueShortName','TurnOverRate')
Som = merge(Som,All, by = 'TissueShortName')
########### F: write derive for future analyses:
write.table(Som,"../../Body/2Derived/HealthySomaticHumanMutations.GTEx.PatientSpecificDerive.txt", row.names = FALSE, quote = FALSE, sep = '\t')
rm(list=ls(all=TRUE))
Som = read.table("../../Body/2Derived/HealthySomaticHumanMutations.GTEx.PatientSpecificDerive.txt", header = TRUE, sep = '\t')
View(Som)
rm(list=ls(all=TRUE))
Som = read.table("../../Body/2Derived/HealthySomaticHumanMutations.GTEx.PatientSpecificDerive.txt", header = TRUE, sep = '\t')
### derive a table for patient-specific analysis
rm(list=ls(all=TRUE))
########################################
######### 1: DERIVE TABLE Som
########################################
############ A: read human ref seq (note that it is hg19 - not cambridge reference!):
RefSeq = read.table("../../Body/1Raw/chrM_refAllele.txt", header = FALSE, sep = '')
names(RefSeq)=c('Position','AncestralAllele')
############ B: read GTEx mutations and merge them with Ref Seq:
SomMut = read.table("../../Body/1Raw/TissueSpecificMtDNAMutationsGTEx.txt", header = TRUE, sep = '\t')
SomMut$Position = gsub('_(.*)','',SomMut$Mutation)  # gsub("_(.*)",'',READS$patient)
SomMut$DerivedAllele = gsub('(.*)_','',SomMut$Mutation)  # gsub("_(.*)",'',READS$patient)
nrow(SomMut) # 2565
Som = merge(SomMut,RefSeq, by = 'Position')
nrow(SomMut) # 2565
Som = Som[Som$DerivedAllele != Som$AncestralAllele,] # correct - in all lines Derived != Ancestral
nrow(SomMut) # 2565
Som$Substitution = paste(Som$AncestralAllele,Som$DerivedAllele, sep = '_')
table(Som$Substitution)
# A_C A_G A_T C_A C_G C_T G_A G_C G_T T_A T_C T_G
# 43 473  49  49   6 336 728  63  57  42 693  26
########## C: read subjectID and merge patient info:
SubjId = read.table("../../Body/1Raw/GtexTaiEvgenii/pheno.csv", header = TRUE, sep = ',')
SubjId = SubjId[,c(1,6,7,8)] # keep only SRR and patient specific important info (sex, age, Sibjid)
names(SubjId)[names(SubjId) == "run"] <- "SRR" # rename run into SRR
Som = merge(Som,SubjId, by = 'SRR')
########## D: read GTEx expression data:
Expr = read.table("../../Body/1Raw/TissueSpecificMtDNACoverageGTEx.txt", header = TRUE, sep = '\t')
ExprTissues = data.frame(table(Expr$Tissue))
ExprTissues = ExprTissues[order(ExprTissues$Var1),]
# merge by SRRID (lost 2565 - 2523 observations, but got expression level (percentMito) for each sample and alternative name of the Tissue (more simple))
nrow(Som) # 2565
Som = merge(Som,Expr, by.x = 'SRR', by.y = 'SRRID', all.x = TRUE)
nrow(Som) # 2565  - but not all of them have expression level defined  (2523 out of 2565)
TissueLongToTissueShort = unique(data.frame(Som$tissue,Som$Tissue))
# now, based on TissueLongToTissueShort and common sence I  manually create tissue vocabular:
TissuesVocab = c(
'Heart - Left Ventricle','Heart',
'Heart - Atrial Appendage','Heart',
'Cells - Transformed fibroblasts','Skin',
'Esophagus - Mucosa', 'Esophagus',
'Colon - Sigmoid', 'Colon',
'Artery - Aorta', 'Blood Vessel',
'Breast - Mammary Tissue', 'Breast',
'Cells - EBV-transformed lymphocytes', 'Blood',
'Liver', 'Liver',
'Whole Blood', 'Blood',
'Muscle - Skeletal', 'Muscle',
'Colon - Transverse', 'Colon',
'Adrenal Gland', 'Adrenal Gland',
'Vagina', 'Vagina',
'Stomach', 'Stomach',
'Pancreas', 'Pancreas',
'Nerve - Tibial', 'Nerve',
'Uterus', 'Uterus',
'Adipose - Subcutaneous', 'Adipose Tissue',
'Adipose - Visceral (Omentum)', 'Adipose Tissue', # my decision
'Skin - Not Sun Exposed (Suprapubic)', 'Skin',
'Skin - Sun Exposed (Lower leg)', 'Skin',
'Artery - Coronary', 'Blood Vessel',
'Artery - Tibial', 'Blood Vessel',
'Prostate', 'Prostate',
'Spleen', 'Spleen',
'Esophagus - Muscularis', 'Esophagus',
'Testis', 'Testis',
'Kidney - Cortex', 'Kidney',
'Lung', 'Lung',
'Ovary', 'Ovary',
'Small Intestine - Terminal Ileum', 'Small Intestine',
'Esophagus - Gastroesophageal Junction','Esophagus',
'Minor Salivary Gland', 'Salivary Gland',
'Thyroid', 'Thyroid',
'Pituitary', 'Pituitary',
'Brain - Putamen (basal ganglia)','Brain',
'Brain - Spinal cord (cervical c-1)','Brain',
'Brain - Caudate (basal ganglia)','Brain',
'Brain - Cerebellar Hemisphere','Brain',
'Brain - Substantia nigra','Brain',
'Brain - Anterior cingulate cortex (BA24)','Brain',
'Brain - Amygdala','Brain',
'Brain - Hypothalamus','Brain',
'Brain - Hippocampus','Brain',
'Brain - Cortex','Brain',
'Brain - Nucleus accumbens (basal ganglia)','Brain',
'Brain - Cerebellum','Brain',
'Brain - Frontal Cortex (BA9)','Brain'
)
TISS = data.frame(TissuesVocab[c(TRUE, FALSE)],TissuesVocab[c(FALSE, TRUE)]); names(TISS)=c('tissue','TissueShortName')
setdiff(as.character(unique(Som$tissue)),as.character(TISS$TissueLongName))
Som = merge(Som, TISS) # add TissueShortName to each 'tissue'
########### E: Cell lifespans from the table here: https://docs.google.com/document/d/1UECub1DIdmuXwPqDLK8WRcZ6uIjEQiVmHXN1_XNVvUU/edit?usp=sharing
VecOfTissues = c('Adipose Tissue','Adrenal Gland','Bladder','Blood','Blood Vessel','Bone Marrow','Brain','Breast','Cervix Uteri','Colon','Esophagus','Heart','Kidney','Liver','Lung','Muscle','Nerve','Ovary','Pancreas','Prostate','Salivary Gland','Skin','Small Intestine','Spleen','Stomach','Testis','Thyroid','Uterus','Vagina','Pituitary')
VecOfTurnOvers = c(  2448,  455,  49,  30,  67.5,  3.2,  24637.5,  65.75,  5.7,  4.25,  10.5,  25300,  270,  363.5,  126,  5510,  24637.5,  30000,  315,  120,  60,  64,  7.05,  7.8,  1.4,  63.5,  3679.5,  13,  3.9, 25000)
All = data.frame(VecOfTissues,VecOfTurnOvers); names(All) = c('TissueShortName','TurnOverRate')
Som = merge(Som,All, by = 'TissueShortName')
########### F: write derive for future analyses:
write.table(Som,"../../Body/2Derived/HealthySomaticHumanMutations.GTEx.PatientSpecificDerive.txt", row.names = FALSE, quote = FALSE, sep = '\t')
rm(list=ls(all=TRUE))
Som = read.table("../../Body/2Derived/HealthySomaticHumanMutations.GTEx.PatientSpecificDerive.txt", header = TRUE, sep = '\t')
Som$G_A = 0; Som[Som$Substitution == 'G_A',]$G_A = 1;
Som$T_C = 0; Som[Som$Substitution == 'T_C',]$T_C = 1;
Som$A_G = 0; Som[Som$Substitution == 'A_G',]$A_G = 1;
Som$C_T = 0; Som[Som$Substitution == 'C_T',]$C_T = 1;
Som$G_T = 0; Som[Som$Substitution == 'G_T',]$G_T = 1;
Som$G_C = 0; Som[Som$Substitution == 'G_C',]$G_C = 1;
Som$T_G = 0; Som[Som$Substitution == 'T_G',]$T_G = 1;
Som$T_A = 0; Som[Som$Substitution == 'T_A',]$T_A = 1;
Som$A_T = 0; Som[Som$Substitution == 'A_T',]$A_T = 1;
Som$A_C = 0; Som[Som$Substitution == 'A_C',]$A_C = 1;
Som$C_A = 0; Som[Som$Substitution == 'C_A',]$C_A = 1;
Som$C_G = 0; Som[Som$Substitution == 'C_G',]$C_G = 1;
Agg = aggregate(list(Som$G_A,Som$G_T,Som$G_C,Som$C_A,Som$C_T,Som$C_G,Som$T_A,Som$T_G,Som$T_C,Som$A_T,Som$A_G,Som$A_C), by = list(Som$TissueShortName,Som$TurnOverRate), FUN = mean)
names(Agg) = c('TissueShortName','TurnOverRate','G_A','G_T','G_C','C_A','C_T','C_G','T_A','T_G','T_C','A_T','A_G','A_C')
cor.test(Agg$TurnOverRate,Agg$G_A, method = 'spearman') # negative:rho -0.4989313; p = 0.008068
ObservedPval = as.numeric(cor.test(Agg$TurnOverRate,Agg$G_A, method = 'spearman')[3])
plot(log2(Agg$TurnOverRate),Agg$G_A)
cor.test(Agg$TurnOverRate,Agg$C_T, method = 'spearman') # positive
cor.test(Agg$TurnOverRate,Agg$T_C, method = 'spearman') # zero
cor.test(Agg$TurnOverRate,Agg$A_G, method = 'spearman') # zero
a<-lm(log2(Agg$TurnOverRate) ~ Agg$G_A + Agg$C_T + Agg$T_C + Agg$A_G); summary(a)
a<-lm(log2(Agg$TurnOverRate) ~ Agg$G_A + Agg$C_T + Agg$T_C); summary(a)
a<-lm(log2(Agg$TurnOverRate) ~ Agg$G_A + Agg$C_T); summary(a)
a<-lm(log2(Agg$TurnOverRate) ~ Agg$G_A); summary(a) # R
View(Som)
rm(list=ls(all=TRUE))
Som = read.table("../../Body/2Derived/HealthySomaticHumanMutations.GTEx.PatientSpecificDerive.txt", header = TRUE, sep = '\t')
################################################################################################
######################## count MutSpek and correlate it with Turnover
################################################################################################
Som$G_A = 0; Som[Som$Substitution == 'G_A',]$G_A = 1;
Som$T_C = 0; Som[Som$Substitution == 'T_C',]$T_C = 1;
Som$A_G = 0; Som[Som$Substitution == 'A_G',]$A_G = 1;
Som$C_T = 0; Som[Som$Substitution == 'C_T',]$C_T = 1;
Som$G_T = 0; Som[Som$Substitution == 'G_T',]$G_T = 1;
Som$G_C = 0; Som[Som$Substitution == 'G_C',]$G_C = 1;
Som$T_G = 0; Som[Som$Substitution == 'T_G',]$T_G = 1;
Som$T_A = 0; Som[Som$Substitution == 'T_A',]$T_A = 1;
Som$A_T = 0; Som[Som$Substitution == 'A_T',]$A_T = 1;
Som$A_C = 0; Som[Som$Substitution == 'A_C',]$A_C = 1;
Som$C_A = 0; Som[Som$Substitution == 'C_A',]$C_A = 1;
Som$C_G = 0; Som[Som$Substitution == 'C_G',]$C_G = 1;
Agg = aggregate(list(Som$G_A,Som$G_T,Som$G_C,Som$C_A,Som$C_T,Som$C_G,Som$T_A,Som$T_G,Som$T_C,Som$A_T,Som$A_G,Som$A_C), by = list(Som$TissueShortName,Som$TurnOverRate), FUN = mean)
names(Agg) = c('TissueShortName','TurnOverRate','G_A','G_T','G_C','C_A','C_T','C_G','T_A','T_G','T_C','A_T','A_G','A_C')
cor.test(Agg$TurnOverRate,Agg$G_A, method = 'spearman') # negative:rho -0.4989313; p = 0.008068
ObservedPval = as.numeric(cor.test(Agg$TurnOverRate,Agg$G_A, method = 'spearman')[3])
plot(log2(Agg$TurnOverRate),Agg$G_A)
cor.test(Agg$TurnOverRate,Agg$C_T, method = 'spearman') # positive
cor.test(Agg$TurnOverRate,Agg$T_C, method = 'spearman') # zero
cor.test(Agg$TurnOverRate,Agg$A_G, method = 'spearman') # zero
a<-lm(log2(Agg$TurnOverRate) ~ Agg$G_A + Agg$C_T + Agg$T_C + Agg$A_G); summary(a)
a<-lm(log2(Agg$TurnOverRate) ~ Agg$G_A + Agg$C_T + Agg$T_C); summary(a)
a<-lm(log2(Agg$TurnOverRate) ~ Agg$G_A + Agg$C_T); summary(a)
a<-lm(log2(Agg$TurnOverRate) ~ Agg$G_A); summary(a) # R
################################################################################################
######################## make equal (and small) the number of observed mutations in each tissue:
################################################################################################
ShortRes = c()
table(Som$TissueShortName) # the minimum is 8 - uterus
#Adipose Tissue   Adrenal Gland           Blood    Blood Vessel           Brain          Breast           Colon       Esophagus           Heart          Kidney
#88              83             614             132              54              35              52             212              21              36
#Liver            Lung          Muscle           Nerve           Ovary        Pancreas       Pituitary        Prostate  Salivary Gland            Skin
#94              70              81             113              38              36              43              40              13             489
#Small Intestine          Spleen         Stomach          Testis         Thyroid          Uterus          Vagina
#15              15              19              40             110               8              14
### take 10 random mutations (with replacement!) from each tissue and repeat the analysis 1000 times
VecOfTissues = unique(Som$TissueShortName); length(VecOfTissues)
for (permut in 1:1000)
{
for (tissue in 1:length(VecOfTissues))
{ # tissue = 26
temp = Som[Som$TissueShortName == VecOfTissues[tissue],]
temp = temp[sample(nrow(temp),10, replace = TRUE),]
if (tissue == 1) {Short = temp;}
if (tissue >  1) {Short = rbind(Short,temp);}
}
Agg = aggregate(list(Short$G_A,Short$G_T,Short$G_C,Short$C_A,Short$C_T,Short$C_G,Short$T_A,Short$T_G,Short$T_C,Short$A_T,Short$A_G,Short$A_C), by = list(Short$TissueShortName,Short$TurnOverRate), FUN = mean)
names(Agg) = c('TissueShortName','TurnOverRate','G_A','G_T','G_C','C_A','C_T','C_G','T_A','T_G','T_C','A_T','A_G','A_C')
cor.test(Agg$TurnOverRate,Agg$G_A, method = 'spearman') # negative:rho -0.4989313; p = 0.008068
ObservedPval = as.numeric(cor.test(Agg$TurnOverRate,Agg$G_A, method = 'spearman')[3])
ObservedRho = as.numeric(cor.test(Agg$TurnOverRate,Agg$G_A, method = 'spearman')[4])
ShortRes = rbind(ShortRes,c(ObservedPval,ObservedRho))
}
ShortRes = data.frame(ShortRes); names(ShortRes)=c('Pvalue','Rho')
plot(ShortRes$Rho,-log10(ShortRes$Pvalue))
hist(ShortRes$Rho, breaks = 100)
SomSrr = Som[Som$Substitution == 'G_A' | Som$Substitution == 'T_C' & SomSrr$TurnOverRate > 64,] # better correlate the ratio with tissue-specific properties
SomSrr = Som[Som$Substitution == 'G_A' | Som$Substitution == 'T_C',] # better correlate the ratio with tissue-specific properties
View(SomSrr)
SomSrr = Som[Som$Substitution == 'G_A' | Som$Substitution == 'T_C',] # better correlate the ratio with tissue-specific properties
SomSrr$Number = 1
AggSrr = aggregate(SomSrr$Number, by=list(SomSrr$SRR), FUN = sum); summary(AggSrr$x)
SrrVec = unique(AggSrr[AggSrr$x > 1,]$Group.1); length(SrrVec) # 262 tissues with > 1 substitutions (T_C,G_A)
SomSrr = SomSrr[SomSrr$SRR %in% SrrVec,]
AggVaf = aggregate(SomSrr$AF, by = list(SomSrr$Substitution,SomSrr$SRR,SomSrr$TurnOverRate), FUN = mean)
AggVafGa = AggVaf[AggVaf$Group.1 =='G_A',];
View(AggVafGa)
names(AggVafGa)=c('SRR','TurnOverRate','GaVaf')
AggVafTc = AggVaf[AggVaf$Group.1 =='T_C',];
AggVafTc = AggVafTc[,2:4];
names(AggVafTc)=c('SRR','TurnOverRate','TcVaf')
Vaf = merge(AggVafGa,AggVafTc, by = list('SRR','TurnOverRate') # 166 tissues with at least one T_C and G_A
)
Vaf = merge(AggVafGa,AggVafTc, by = c('SRR','TurnOverRate')) # 166 tissues with at least one T_C and G_A
View(AggVafGa)
AggVafGa = AggVaf[AggVaf$Group.1 =='G_A',]; AggVafGa = AggVafGa[,2:4]; names(AggVafGa)=c('SRR','TurnOverRate','GaVaf')
View(AggVafGa)
AggVafTc = AggVaf[AggVaf$Group.1 =='T_C',]; AggVafTc = AggVafTc[,2:4]; names(AggVafTc)=c('SRR','TurnOverRate','TcVaf')
View(AggVafTc)
Vaf = merge(AggVafGa,AggVafTc, by = c('SRR','TurnOverRate')) # 166 tissues with at least one T_C and G_A
View(Vaf)
summary(log2(Vaf$TcVaf/Vaf$GaVaf))
hist(log2(Vaf$TcVaf/Vaf$GaVaf), breaks = 20) # take tissues with low cell division - they decrease cell division with time and this effect might be more pronounced
wilcox.test(log2(Vaf$TcVaf/Vaf$GaVaf), mu = 0) # 0.037
Vaf$TcToGaVaf = Vaf$TcVaf/Vaf$GaVaf
summary(Vaf$TcToGaVaf)
View(Vaf)
cor.test(Vaf$TcToGaVaf,Vaf$TurnOverRate, method = 'spearman')
plot(Vaf$TcToGaVaf,Vaf$TurnOverRate)
plot(Vaf$TurnOverRate,Vaf$TcToGaVaf)
plot(Vaf$TurnOverRate,Vaf$TcToGaVaf); abline(h = 1, col = 'red', lwd = 2)
cor.test(Vaf$TcVaf,Vaf$TurnOverRate, method = 'spearman')
cor.test(Vaf$GaVaf,Vaf$TurnOverRate, method = 'spearman')
cor.test(Vaf$TcVaf,Vaf$TurnOverRate, method = 'spearman')
cor.test(Vaf$TcToGaVaf,Vaf$TurnOverRate, method = 'spearman')
View(Vaf)
plot(Vaf$TcVaf,Vaf$GaVaf)
cor.test(Vaf$TcVaf,Vaf$GaVaf, method ='spearman')
cor.test(Vaf$TcVaf,Vaf$TurnOverRate, method = 'spearman')
cor.test(Vaf$GaVaf,Vaf$TurnOverRate, method = 'spearman')
wilcox.test(Vaf$TcVaf,Vaf$GaVaf, paired = TRUE)
View(Vaf)
wilcox.test(Vaf$TcVaf,Vaf$GaVaf, paired = TRUE)
cor.test(Vaf$TcVaf,Vaf$TurnOverRate, method = 'spearman')
cor.test(Vaf$TcVaf,Vaf$GaVaf, method ='spearman') # positive - good
cor.test(Vaf$TcToGaVaf,Vaf$TurnOverRate, method = 'spearman')
cor.test(Vaf$TcToGaVaf,Vaf$TurnOverRate, method = 'spearman')
summary(Vaf$TurnOverRate)
boxplot(Vaf[Vaf$TurnOverRate <= 30,]$TcToGaVaf,Vaf[Vaf$TurnOverRate > 30 & Vaf$TurnOverRate <= 64,]$TcToGaVaf,Vaf[Vaf$TurnOverRate > 64 & Vaf$TurnOverRate <= 270,]$TcToGaVaf,Vaf[Vaf$TurnOverRate > 270,]$TcToGaVaf)
boxplot(Vaf[Vaf$TurnOverRate <= 30,]$TcToGaVaf,Vaf[Vaf$TurnOverRate > 30 & Vaf$TurnOverRate <= 64,]$TcToGaVaf,Vaf[Vaf$TurnOverRate > 64 & Vaf$TurnOverRate <= 270,]$TcToGaVaf,Vaf[Vaf$TurnOverRate > 270,]$TcToGaVaf, ylim = c(0,5))
abline(h = 1, cor = 'red', lwd = 2)
abline(h = 1, color = 'red', lwd = 2)
abline(h = 1, col = 'red', lwd = 2)
cor.test(Vaf$TcVaf,Vaf$GaVaf, method ='spearman') # positive - good
plot(Vaf$TcVaf,Vaf$GaVaf)
abline(h = v)
abline()
cor.test(Vaf$TcVaf,Vaf$GaVaf, method ='spearman') # positive - good
abline()
abline(0,1)
abline(0,1, col = 'red')
cor.test(Vaf$TcVaf,Vaf$GaVaf, method ='spearman') # positive - good
abline(0,1, col = 'red')
cor.test(Vaf$TcVaf,Vaf$GaVaf, method ='spearman', xlim = c(0,0.2), ylim = c(0,0.2)) # positive - good
abline(0,1, col = 'red')
plot(Vaf$TcVaf,Vaf$GaVaf, method ='spearman', xlim = c(0,0.2), ylim = c(0,0.2)) # positive - good
abline(0,1, col = 'red')
cor.test(Vaf$TcVaf,Vaf$TurnOverRate, method = 'spearman')
cor.test(Vaf$GaVaf,Vaf$TurnOverRate, method = 'spearman')
rm(list=ls(all=TRUE))
Som = read.table("../../Body/2Derived/HealthySomaticHumanMutations.GTEx.PatientSpecificDerive.txt", header = TRUE, sep = '\t')
View(Som)
table(Som$Substitution)
Subs = data.frame(table(Som$Substitution))
Subs
Subs = Subs[order(Subs$Freq),]
View(Subs)
Subs = data.frame(table(Som$Substitution))
Subs = data.frame(table(Som$Substitution))
Subs = Subs[order(Subs$Freq),]
View(Subs)
pie(Subs$Freq, Subs$Var1, main="Pie Chart of Countries")
pie(Subs$Freq, Subs$Var1, main="whole GTex")
Subs = data.frame(table(Som[Som$TurnOverRate <= 64,]$Substitution))
par(mfrow = c(2,2))
Subs = data.frame(table(Som$Substitution))
pie(Subs$Freq, Subs$Var1, main="whole GTex")
Subs = data.frame(table(Som[Som$TurnOverRate <= 64,]$Substitution))
pie(Subs$Freq, Subs$Var1, main="whole GTex")
Subs = data.frame(table(Som[Som$TurnOverRate > 64,]$Substitution))
pie(Subs$Freq, Subs$Var1, main="whole GTex")
par(mfrow = c(2,2))
Subs = data.frame(table(Som[Som$TurnOverRate <= 64,]$Substitution))
pie(Subs$Freq, Subs$Var1, main="whole GTex")
Subs = data.frame(table(Som[Som$TurnOverRate > 64,]$Substitution))
pie(Subs$Freq, Subs$Var1, main="whole GTex")
boxplot(Som[Som$Substitution == 'T_C',]$Position, Som[Som$Substitution == 'G_A',]$Position)
boxplot(Som[Som$Substitution == 'T_C',]$Position, Som[Som$Substitution == 'G_A',]$Position, notch = TRUE)
boxplot(Som[Som$Substitution == 'T_C',]$Position, Som[Som$Substitution == 'G_A',]$Position, Som[Som$Substitution == 'C_T',]$Position, Som[Som$Substitution == 'A_G',]$Position, notch = TRUE)
boxplot(Som[Som$Substitution == 'T_C',]$Position, Som[Som$Substitution == 'G_A',]$Position, Som[Som$Substitution == 'C_T',]$Position, Som[Som$Substitution == 'A_G',]$Position, notch = TRUE, names = c('T>C','G>A','C>T','A>G'))
Subs = data.frame(table(Som$Substitution))
Subs = Subs[order(Subs$Freq),]
View(Subs)
Summ = sum(Subs$Freq)
Subs = data.frame(table(Som$Substitution))
Subs = Subs[order(Subs$Freq),]
Summ = sum(Subs$Freq); Subs$Freq = Subs$Freq/Summ
View(Subs)
Subs
Subs = data.frame(table(Som[Som$TurnOverRate <= 64,]$Substitution)); Subs = Subs[order(Subs$Freq),]; Summ = sum(Subs$Freq); Subs$Freq = Subs$Freq/Summ
Subs
Subs = data.frame(table(Som[Som$TurnOverRate > 64,]$Substitution)); Subs = Subs[order(Subs$Freq),]; Summ = sum(Subs$Freq); Subs$Freq = Subs$Freq/Summ
Subs
Subs = data.frame(table(Som[Som$TurnOverRate <= 64,]$Substitution)); Subs = Subs[order(Subs$Freq),]; Summ = sum(Subs$Freq); Subs$Freq = Subs$Freq/Summ
Subs
Subs = data.frame(table(Som[Som$TurnOverRate > 64,]$Substitution)); Subs = Subs[order(Subs$Freq),]; Summ = sum(Subs$Freq); Subs$Freq = Subs$Freq/Summ
Subs
rm(list=ls(all=TRUE))
ALL = read.table("../../Body/2Derived/mtDNA_snv_Oct2016.PatientInfo.txt", head = TRUE, sep = '\t')  # 7611
View(ALL)
### DERIVE NECESSARY TRAITS:
ALL$TumorVarFreq = ALL$tumor_reads2/(ALL$tumor_reads1 + ALL$tumor_reads2); summary(ALL$TumorVarFreq)  # 0.01000 0.01738 0.04540 0.20268 0.26278 0.99864
ALL$NormalVarFreq = ALL$normal_reads2/(ALL$normal_reads1 + ALL$normal_reads2); summary(ALL$NormalVarFreq)
ALL$Subs = paste(ALL$ref,ALL$var, sep = '_'); table(ALL$Subs)
VecOfTransitionSubstitutions = c('A_G','G_A','C_T','T_C') # all tr
VecOfTransversionSubstitutions = c('C_A','A_C','C_G','G_C','G_T','T_G','T_A','A_T') # ALL Tv
CancerType = unique(ALL$tissue); length(CancerType)    # 40
CancerTissue = unique(ALL$Tier2); length(CancerTissue) # 21
ALL$CancerTissue = ALL$Tier2; unique(ALL$CancerTissue) #
ALL$CancerType = ALL$tissue;
ALL$CancerTypeAndTissues = paste(ALL$CancerType,ALL$CancerTissue, sep = '_')
table(ALL$CancerTypeAndTissues)
table(All$Subs)
table(ALL$Subs)
Subs = data.frame(table(ALL$Subs))
Subs = data.frame(table(ALL$Subs)); Subs = Subs[(order(Subs$Freq),]
Subs = data.frame(table(ALL$Subs)); Subs = Subs[order(Subs$Freq),]
Subs
Subs$Freq = Subs$Freq/sum(Subs$Freq)
Subs
Subs
View(ALL)
0.27/0.18
0.27/0.06
View(ALL)
median(ALL$TumorVarFreq)
Subs = data.frame(table(ALL[ALL$TumorVarFreq > median(ALL$TumorVarFreq),]$Subs)); Subs = Subs[order(Subs$Freq),]
Subs
Subs$Freq = Subs$Freq/sum(Subs$Freq)
Subs
Subs = data.frame(table(ALL[ALL$TumorVarFreq < median(ALL$TumorVarFreq),]$Subs)); Subs = Subs[order(Subs$Freq),]
Subs$Freq = Subs$Freq/sum(Subs$Freq)
Subs
Subs = data.frame(table(ALL[ALL$TumorVarFreq > quantile(ALL$TumorVarFreq,0.75),]$Subs)); Subs = Subs[order(Subs$Freq),]
Subs$Freq = Subs$Freq/sum(Subs$Freq)
Subs
Subs = data.frame(table(ALL[ALL$TumorVarFreq > quantile(ALL$TumorVarFreq,0.9),]$Subs)); Subs = Subs[order(Subs$Freq),]
Subs$Freq = Subs$Freq/sum(Subs$Freq)
Subs
Subs = data.frame(table(ALL[ALL$TumorVarFreq > quantile(ALL$TumorVarFreq,0.9),]$Subs)); Subs = Subs[order(Subs$Freq),]
Subs$Freq = Subs$Freq/sum(Subs$Freq)
Subs
