# This add the bars with a blue color
geom_bar(stat="identity", aes(fill = 'red')) +
geom_bar(aes(num, cCountlong, fill='green'), stat = "identity") +
# Limits of the plot = very important. The negative value controls the size of the inner circle, the positive one is useful to add size over each bar
ylim(-20, 20) +
# Custom the theme: no axis title and no cartesian grid
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-2,4), "cm")     # This remove unnecessary margin around plot
) +
# This makes the coordinate polar instead of cartesian.
coord_polar(start = 0)
p
dev.off()
shortTC = as.data.frame(cbind(cCount, tCount))
shortTC$cCount = - (shortTC$cCount / 20)
shortTC$tCount = shortTC$tCount / 20
num = 1:nrow(shortTC)
shortTC = cbind(shortTC, num)
longTC = as.data.frame(cbind(cCountlong, tCountlong))
longTC$cCountlong = - (longTC$cCountlong / 20)
longTC$tCountlong = longTC$tCountlong / 20
num = 1:nrow(longTC)
longTC = cbind(longTC, num)
pdf('../../Body/4Figures/WholeGenomeAnalyses.NoOverlapAgAlongGenome.pdf')
a = ggplot(shortTC, aes(num, tCount)) +
geom_bar(aes(fill = 'red'), stat = "identity") +
geom_bar(aes(num, cCount, fill = 'green'), stat = "identity") +
ggtitle('low Generation time') + xlab('Position') + ylab('') +
scale_fill_discrete(name = "Nucleotide", labels = c("G", "A")); a
a = ggplot(longTC, aes(num, tCountlong)) +
geom_bar(aes(fill = 'red'), stat = "identity") +
geom_bar(aes(num, cCountlong, fill = 'green'), stat = "identity") +
ggtitle('high Generation time') + xlab('Position') + ylab('') +
scale_fill_discrete(name = "Nucleotide", labels = c("G", "A")); a
# dev.off()
shortTC = as.data.frame(cbind(cCount, tCount))
shortTC$cCount = - shortTC$cCount
num = 1:nrow(shortTC)
shortTC = cbind(shortTC, num)
longTC = as.data.frame(cbind(cCountlong, tCountlong))
longTC$cCountlong = - longTC$cCountlong
num = 1:nrow(longTC)
longTC = cbind(longTC, num)
p <- ggplot(shortTC, aes(x=num, y=tCount)) +       # Note that id is a factor. If x is numeric, there is some space between the first bar
# This add the bars with a blue color
geom_bar(aes(fill = 'red'), stat="identity") +
geom_bar(aes(num, cCount, fill='green'), stat = "identity") +
# Limits of the plot = very important. The negative value controls the size of the inner circle, the positive one is useful to add size over each bar
ylim(-20, 20) +
# Custom the theme: no axis title and no cartesian grid
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-2,4), "cm")     # This remove unnecessary margin around plot
) +
# This makes the coordinate polar instead of cartesian.
coord_polar(start = 0)
p
p <- ggplot(longTC, aes(x=num, y=tCountlong)) +       # Note that id is a factor. If x is numeric, there is some space between the first bar
# This add the bars with a blue color
geom_bar(stat="identity", aes(fill = 'red')) +
geom_bar(aes(num, cCountlong, fill='green'), stat = "identity") +
# Limits of the plot = very important. The negative value controls the size of the inner circle, the positive one is useful to add size over each bar
ylim(-20, 20) +
# Custom the theme: no axis title and no cartesian grid
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-2,4), "cm")     # This remove unnecessary margin around plot
) +
# This makes the coordinate polar instead of cartesian.
coord_polar(start = 0)
p
############################################################
### add zeros
shortTC = as.data.frame(cbind(cCount, tCount))
shortTC$cCount = - shortTC$cCount
a = as.data.frame(matrix(0, ncol = 2, nrow = 35))
names(a) = names(shortTC)
shortTC = rbind(shortTC, a)
num = 1:nrow(shortTC)
shortTC = cbind(shortTC, num)
longTC = as.data.frame(cbind(cCountlong, tCountlong))
longTC$cCountlong = - longTC$cCountlong
a = as.data.frame(matrix(0, ncol = 2, nrow = 37))
names(a) = names(longTC)
longTC = rbind(longTC, a)
num = 1:nrow(longTC)
longTC = cbind(longTC, num)
p <- ggplot(shortTC, aes(x=num, y=tCount)) +       # Note that id is a factor. If x is numeric, there is some space between the first bar
# This add the bars with a blue color
geom_bar(stat="identity", aes(fill = 'red')) +
geom_bar(aes(num, cCount, fill='green'), stat = "identity") +
# Limits of the plot = very important. The negative value controls the size of the inner circle, the positive one is useful to add size over each bar
ylim(-20, 20) +
# Custom the theme: no axis title and no cartesian grid
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-2,4), "cm")     # This remove unnecessary margin around plot
) +
# This makes the coordinate polar instead of cartesian.
coord_polar(start = 0)
p
p <- ggplot(longTC, aes(x=num, y=tCountlong)) +       # Note that id is a factor. If x is numeric, there is some space between the first bar
# This add the bars with a blue color
geom_bar(stat="identity", aes(fill = 'red')) +
geom_bar(aes(num, cCountlong, fill='green'), stat = "identity") +
# Limits of the plot = very important. The negative value controls the size of the inner circle, the positive one is useful to add size over each bar
ylim(-20, 20) +
# Custom the theme: no axis title and no cartesian grid
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-2,4), "cm")     # This remove unnecessary margin around plot
) +
# This makes the coordinate polar instead of cartesian.
coord_polar(start = 0)
p
dev.off()
p <- ggplot(longTC, aes(x=num, y=tCountlong)) +       # Note that id is a factor. If x is numeric, there is some space between the first bar
# This add the bars with a blue color
geom_bar(stat="identity", aes(fill = 'red')) +
geom_bar(aes(num, cCountlong, fill='green'), stat = "identity") +
# Limits of the plot = very important. The negative value controls the size of the inner circle, the positive one is useful to add size over each bar
ylim(-20, 20) +
# Custom the theme: no axis title and no cartesian grid
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-2,4), "cm")     # This remove unnecessary margin around plot
) +
# This makes the coordinate polar instead of cartesian.
coord_polar(start = 0)
p
p <- ggplot(longTC[seq(dim(longTC)[1],1),], aes(x=num, y=tCountlong)) +       # Note that id is a factor. If x is numeric, there is some space between the first bar
# This add the bars with a blue color
geom_bar(stat="identity", aes(fill = 'red')) +
geom_bar(aes(num, cCountlong, fill='green'), stat = "identity") +
# Limits of the plot = very important. The negative value controls the size of the inner circle, the positive one is useful to add size over each bar
ylim(-20, 20) +
# Custom the theme: no axis title and no cartesian grid
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-2,4), "cm")     # This remove unnecessary margin around plot
) +
# This makes the coordinate polar instead of cartesian.
coord_polar(start = 0)
p
p <- ggplot(longTC[order(rev(longTC$num))], aes(x=num, y=tCountlong)) +       # Note that id is a factor. If x is numeric, there is some space between the first bar
# This add the bars with a blue color
geom_bar(stat="identity", aes(fill = 'red')) +
geom_bar(aes(num, cCountlong, fill='green'), stat = "identity") +
# Limits of the plot = very important. The negative value controls the size of the inner circle, the positive one is useful to add size over each bar
ylim(-20, 20) +
# Custom the theme: no axis title and no cartesian grid
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-2,4), "cm")     # This remove unnecessary margin around plot
) +
# This makes the coordinate polar instead of cartesian.
coord_polar(start = 0)
p <- ggplot(longTC[order(rev(longTC$num)),], aes(x=num, y=tCountlong)) +       # Note that id is a factor. If x is numeric, there is some space between the first bar
# This add the bars with a blue color
geom_bar(stat="identity", aes(fill = 'red')) +
geom_bar(aes(num, cCountlong, fill='green'), stat = "identity") +
# Limits of the plot = very important. The negative value controls the size of the inner circle, the positive one is useful to add size over each bar
ylim(-20, 20) +
# Custom the theme: no axis title and no cartesian grid
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-2,4), "cm")     # This remove unnecessary margin around plot
) +
# This makes the coordinate polar instead of cartesian.
coord_polar(start = 0)
p
p <- ggplot(longTC[nrow(longTC):1,], aes(x=num, y=tCountlong)) +       # Note that id is a factor. If x is numeric, there is some space between the first bar
# This add the bars with a blue color
geom_bar(stat="identity", aes(fill = 'red')) +
geom_bar(aes(num, cCountlong, fill='green'), stat = "identity") +
# Limits of the plot = very important. The negative value controls the size of the inner circle, the positive one is useful to add size over each bar
ylim(-20, 20) +
# Custom the theme: no axis title and no cartesian grid
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-2,4), "cm")     # This remove unnecessary margin around plot
) +
# This makes the coordinate polar instead of cartesian.
coord_polar(start = 0)
p
longTC[nrow(longTC):1,]
p <- ggplot(longTC[nrow(longTC):1,], aes(x=num, y=tCountlong)) +       # Note that id is a factor. If x is numeric, there is some space between the first bar
# This add the bars with a blue color
geom_bar(stat="identity", aes(fill = 'red')) +
geom_bar(aes(num, cCountlong, fill='green'), stat = "identity") +
# Limits of the plot = very important. The negative value controls the size of the inner circle, the positive one is useful to add size over each bar
ylim(-20, 20) +
# Custom the theme: no axis title and no cartesian grid
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-2,4), "cm")     # This remove unnecessary margin around plot
) +
# This makes the coordinate polar instead of cartesian.
coord_polar(start = nrow(longTC))
p
p <- ggplot(longTC[nrow(longTC):1,], aes(x=num, y=tCountlong)) +       # Note that id is a factor. If x is numeric, there is some space between the first bar
# This add the bars with a blue color
geom_bar(stat="identity", aes(fill = 'red')) +
geom_bar(aes(num, cCountlong, fill='green'), stat = "identity") +
# Limits of the plot = very important. The negative value controls the size of the inner circle, the positive one is useful to add size over each bar
ylim(-20, 20) +
# Custom the theme: no axis title and no cartesian grid
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-2,4), "cm")     # This remove unnecessary margin around plot
) +
# This makes the coordinate polar instead of cartesian.
coord_polar(start = 0)
p
a = longTC[nrow(longTC):1,]
p <- ggplot(longTC, aes(x=num, y=tCountlong)) +       # Note that id is a factor. If x is numeric, there is some space between the first bar
# This add the bars with a blue color
geom_bar(stat="identity", aes(fill = 'red')) +
geom_bar(aes(num, cCountlong, fill='green'), stat = "identity") +
# Limits of the plot = very important. The negative value controls the size of the inner circle, the positive one is useful to add size over each bar
ylim(-20, 20) +
# Custom the theme: no axis title and no cartesian grid
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-2,4), "cm")     # This remove unnecessary margin around plot
) +
# This makes the coordinate polar instead of cartesian.
coord_polar(start = 0)
p
p <- ggplot(a, aes(x=num, y=tCountlong)) +       # Note that id is a factor. If x is numeric, there is some space between the first bar
# This add the bars with a blue color
geom_bar(stat="identity", aes(fill = 'red')) +
geom_bar(aes(num, cCountlong, fill='green'), stat = "identity") +
# Limits of the plot = very important. The negative value controls the size of the inner circle, the positive one is useful to add size over each bar
ylim(-20, 20) +
# Custom the theme: no axis title and no cartesian grid
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-2,4), "cm")     # This remove unnecessary margin around plot
) +
# This makes the coordinate polar instead of cartesian.
coord_polar(start = 0)
p
pdf('../../Body/4Figures/WholeGenomeAnalyses.NoOverlapAgAlongGenome.pdf')
a = ggplot(shortTC, aes(num, tCount)) +
geom_bar(aes(fill = 'red'), stat = "identity") +
geom_bar(aes(num, cCount, fill = 'green'), stat = "identity") +
ggtitle('low Generation time') + xlab('Position') + ylab('') +
scale_fill_discrete(name = "Nucleotide", labels = c("G", "A")); a
a = ggplot(longTC, aes(num, tCountlong)) +
geom_bar(aes(fill = 'red'), stat = "identity") +
geom_bar(aes(num, cCountlong, fill = 'green'), stat = "identity") +
ggtitle('high Generation time') + xlab('Position') + ylab('') +
scale_fill_discrete(name = "Nucleotide", labels = c("G", "A")); a
# dev.off()
shortTC = as.data.frame(cbind(cCount, tCount))
shortTC$cCount = - shortTC$cCount
num = 1:nrow(shortTC)
shortTC = cbind(shortTC, num)
longTC = as.data.frame(cbind(cCountlong, tCountlong))
longTC$cCountlong = - longTC$cCountlong
num = 1:nrow(longTC)
longTC = cbind(longTC, num)
p <- ggplot(shortTC, aes(x=num, y=tCount)) +       # Note that id is a factor. If x is numeric, there is some space between the first bar
# This add the bars with a blue color
geom_bar(aes(fill = 'red'), stat="identity") +
geom_bar(aes(num, cCount, fill='green'), stat = "identity") +
# Limits of the plot = very important. The negative value controls the size of the inner circle, the positive one is useful to add size over each bar
ylim(-20, 20) +
# Custom the theme: no axis title and no cartesian grid
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-2,4), "cm")     # This remove unnecessary margin around plot
) +
# This makes the coordinate polar instead of cartesian.
coord_polar(start = 0) + scale_fill_discrete(name = "Nucleotide", labels = c("G", "A"))
p
p <- ggplot(longTC, aes(x=num, y=tCountlong)) +       # Note that id is a factor. If x is numeric, there is some space between the first bar
# This add the bars with a blue color
geom_bar(stat="identity", aes(fill = 'red')) +
geom_bar(aes(num, cCountlong, fill='green'), stat = "identity") +
# Limits of the plot = very important. The negative value controls the size of the inner circle, the positive one is useful to add size over each bar
ylim(-20, 20) +
# Custom the theme: no axis title and no cartesian grid
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-2,4), "cm")     # This remove unnecessary margin around plot
) +
# This makes the coordinate polar instead of cartesian.
coord_polar(start = 0) +
scale_fill_discrete(name = "Nucleotide", labels = c("G", "A"))
p
############################################################
### add zeros
shortTC = as.data.frame(cbind(cCount, tCount))
shortTC$cCount = - shortTC$cCount
a = as.data.frame(matrix(0, ncol = 2, nrow = 35))
names(a) = names(shortTC)
shortTC = rbind(shortTC, a)
num = 1:nrow(shortTC)
shortTC = cbind(shortTC, num)
longTC = as.data.frame(cbind(cCountlong, tCountlong))
longTC$cCountlong = - longTC$cCountlong
a = as.data.frame(matrix(0, ncol = 2, nrow = 37))
names(a) = names(longTC)
longTC = rbind(longTC, a)
num = 1:nrow(longTC)
longTC = cbind(longTC, num)
p <- ggplot(shortTC, aes(x=num, y=tCount)) +       # Note that id is a factor. If x is numeric, there is some space between the first bar
# This add the bars with a blue color
geom_bar(stat="identity", aes(fill = 'red')) +
geom_bar(aes(num, cCount, fill='green'), stat = "identity") +
# Limits of the plot = very important. The negative value controls the size of the inner circle, the positive one is useful to add size over each bar
ylim(-20, 20) +
# Custom the theme: no axis title and no cartesian grid
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-2,4), "cm")     # This remove unnecessary margin around plot
) +
# This makes the coordinate polar instead of cartesian.
coord_polar(start = 0) +
scale_fill_discrete(name = "Nucleotide", labels = c("G", "A"))
p
p <- ggplot(a, aes(x=num, y=tCountlong)) +       # Note that id is a factor. If x is numeric, there is some space between the first bar
# This add the bars with a blue color
geom_bar(stat="identity", aes(fill = 'red')) +
geom_bar(aes(num, cCountlong, fill='green'), stat = "identity") +
# Limits of the plot = very important. The negative value controls the size of the inner circle, the positive one is useful to add size over each bar
ylim(-20, 20) +
# Custom the theme: no axis title and no cartesian grid
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-2,4), "cm")     # This remove unnecessary margin around plot
) +
# This makes the coordinate polar instead of cartesian.
coord_polar(start = 0) +
scale_fill_discrete(name = "Nucleotide", labels = c("G", "A"))
p
dev.off()
shortTC = as.data.frame(cbind(cCount, tCount))
shortTC$cCount = - (shortTC$cCount / 20)
shortTC$tCount = shortTC$tCount / 20
num = 1:nrow(shortTC)
shortTC = cbind(shortTC, num)
longTC = as.data.frame(cbind(cCountlong, tCountlong))
longTC$cCountlong = - (longTC$cCountlong / 20)
longTC$tCountlong = longTC$tCountlong / 20
num = 1:nrow(longTC)
longTC = cbind(longTC, num)
pdf('../../Body/4Figures/WholeGenomeAnalyses.NoOverlapAgAlongGenome.pdf')
a = ggplot(shortTC, aes(num, tCount)) +
geom_bar(aes(fill = 'red'), stat = "identity") +
geom_bar(aes(num, cCount, fill = 'green'), stat = "identity") +
ggtitle('low Generation time') + xlab('Position') + ylab('') +
scale_fill_discrete(name = "Nucleotide", labels = c("G", "A")); a
a = ggplot(longTC, aes(num, tCountlong)) +
geom_bar(aes(fill = 'red'), stat = "identity") +
geom_bar(aes(num, cCountlong, fill = 'green'), stat = "identity") +
ggtitle('high Generation time') + xlab('Position') + ylab('') +
scale_fill_discrete(name = "Nucleotide", labels = c("G", "A")); a
# dev.off()
shortTC = as.data.frame(cbind(cCount, tCount))
shortTC$cCount = - shortTC$cCount
num = 1:nrow(shortTC)
shortTC = cbind(shortTC, num)
longTC = as.data.frame(cbind(cCountlong, tCountlong))
longTC$cCountlong = - longTC$cCountlong
num = 1:nrow(longTC)
longTC = cbind(longTC, num)
p <- ggplot(shortTC, aes(x=num, y=tCount)) +       # Note that id is a factor. If x is numeric, there is some space between the first bar
# This add the bars with a blue color
geom_bar(aes(fill = 'red'), stat="identity") +
geom_bar(aes(num, cCount, fill='green'), stat = "identity") +
# Limits of the plot = very important. The negative value controls the size of the inner circle, the positive one is useful to add size over each bar
ylim(-20, 20) +
# Custom the theme: no axis title and no cartesian grid
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-2,4), "cm")     # This remove unnecessary margin around plot
) +
# This makes the coordinate polar instead of cartesian.
coord_polar(start = 0) + scale_fill_discrete(name = "Nucleotide", labels = c("G", "A"))
p
p <- ggplot(longTC, aes(x=num, y=tCountlong)) +       # Note that id is a factor. If x is numeric, there is some space between the first bar
# This add the bars with a blue color
geom_bar(stat="identity", aes(fill = 'red')) +
geom_bar(aes(num, cCountlong, fill='green'), stat = "identity") +
# Limits of the plot = very important. The negative value controls the size of the inner circle, the positive one is useful to add size over each bar
ylim(-20, 20) +
# Custom the theme: no axis title and no cartesian grid
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-2,4), "cm")     # This remove unnecessary margin around plot
) +
# This makes the coordinate polar instead of cartesian.
coord_polar(start = 0) +
scale_fill_discrete(name = "Nucleotide", labels = c("G", "A"))
p
############################################################
### add zeros
shortTC = as.data.frame(cbind(cCount, tCount))
shortTC$cCount = - shortTC$cCount
a = as.data.frame(matrix(0, ncol = 2, nrow = 35))
names(a) = names(shortTC)
shortTC = rbind(shortTC, a)
num = 1:nrow(shortTC)
shortTC = cbind(shortTC, num)
longTC = as.data.frame(cbind(cCountlong, tCountlong))
longTC$cCountlong = - longTC$cCountlong
a = as.data.frame(matrix(0, ncol = 2, nrow = 37))
names(a) = names(longTC)
longTC = rbind(longTC, a)
num = 1:nrow(longTC)
longTC = cbind(longTC, num)
p <- ggplot(shortTC, aes(x=num, y=tCount)) +       # Note that id is a factor. If x is numeric, there is some space between the first bar
# This add the bars with a blue color
geom_bar(stat="identity", aes(fill = 'red')) +
geom_bar(aes(num, cCount, fill='green'), stat = "identity") +
# Limits of the plot = very important. The negative value controls the size of the inner circle, the positive one is useful to add size over each bar
ylim(-20, 20) +
# Custom the theme: no axis title and no cartesian grid
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-2,4), "cm")     # This remove unnecessary margin around plot
) +
# This makes the coordinate polar instead of cartesian.
coord_polar(start = 0) +
scale_fill_discrete(name = "Nucleotide", labels = c("G", "A"))
p
p <- ggplot(longTC, aes(x=num, y=tCountlong)) +       # Note that id is a factor. If x is numeric, there is some space between the first bar
# This add the bars with a blue color
geom_bar(stat="identity", aes(fill = 'red')) +
geom_bar(aes(num, cCountlong, fill='green'), stat = "identity") +
# Limits of the plot = very important. The negative value controls the size of the inner circle, the positive one is useful to add size over each bar
ylim(-20, 20) +
# Custom the theme: no axis title and no cartesian grid
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-2,4), "cm")     # This remove unnecessary margin around plot
) +
# This makes the coordinate polar instead of cartesian.
coord_polar(start = 0) +
scale_fill_discrete(name = "Nucleotide", labels = c("G", "A"))
p
dev.off()
