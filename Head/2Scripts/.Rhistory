ListOfHibDTSpecies = gsub(' ','_', as.character(Hib$Taxon)); length(ListOfHibSpecies)
SynNuc = read.table("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt", header = TRUE)
SynNuc
############ list of hibernating animals
Hib = read.table("../../Body/1Raw/HYB_DT.txt", sep = '\t', header=TRUE)
ListOfHibSpecies = ListOfHibSpecies[ListOfHibSpecies$Tendency == "HYB",]
rm(list=ls(all=TRUE))
############ list of hibernating animals
Hib = read.table("../../Body/1Raw/HYB_DT.txt", sep = '\t', header=TRUE)
ListOfHibDTSpecies = as.character(ListOfHibDTSpecies$Tendency)
############ list of hibernating animals
HybDT = read.table("../../Body/1Raw/HYB_DT.txt", sep = '\t', header=TRUE)
rm(list=ls(all=TRUE))
############ list of hibernating animals
HybDT = read.table("../../Body/1Raw/HYB_DT.txt", sep = '\t', header=TRUE)
#ListOfHibDTSpecies = gsub(' ','_', as.character(Hib$Taxon)); length(ListOfHibSpecies)
HybDT = as.character(HybDT$Tendency)
HybDT
source('~/sc/Head/2Scripts/WholeGenomeAnalyses.HibernationWithinMammals_A.NoOverlap.R', echo=TRUE)
############ list of hibernating animals
HybDT = read.table("../../Body/1Raw/HYB_DT.txt", sep = '\t', header=TRUE)
#ListOfHibDTSpecies = gsub(' ','_', as.character(Hib$Taxon)); length(ListOfHibSpecies)
HybDT$Tendency = as.character(HybDT$Tendency)
View(HybDT)
ListOfHibSpecies = HybDT[HybDT$Tendency == "HYB",]
ListOfHibSpecies
HybDT
#ListOfHibDTSpecies = gsub(' ','_', as.character(Hib$Taxon)); length(ListOfHibSpecies)
HibDT$Tendency = as.character(HibDT$Tendency)
rm(list=ls(all=TRUE))
############ list of hibernating animals
HibDT = read.table("../../Body/1Raw/HYB_DT.txt", sep = '\t', header=TRUE)
#ListOfHibDTSpecies = gsub(' ','_', as.character(Hib$Taxon)); length(ListOfHibSpecies)
HibDT$Tendency = as.character(HibDT$Tendency)
ListOfHibSpecies = HibDT[HibDT$Tendency == "HIB",]
View(ListOfHibSpecies)
View(ListOfHibSpecies)
ListOfHibSpecies = gsub(' ','_', as.character(HibDT$Taxon)); length(ListOfHibSpecies)
Hib = HibDT[HibDT$Tendency == "HIB",]
ListOfHibSpecies = gsub(' ','_', as.character(Hib$Taxon)); length(ListOfHibSpecies)
Hib = HibDT[HibDT$Tendency == "HIB",]; DT = HibDT[!HibDT$Tendency == "HIB",]
ListOfDTSpecies = gsub(' ','_', as.character(DT$Taxon)); length(ListOfDTSpecies)
View(DT)
file.remove("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt")
############ lists of hibernating and torpor animals
cold = read.table("../../Body/1Raw/cold_water_fishes.txt")
tropical = read.table("../../Body/1Raw/tropical_water_fishes.txt")
############ lists of hibernating and torpor animals
cold = read.table("../../Body/1Raw/cold_water_fishes.txt")
View(tropical)
############ lists of hibernating and torpor animals
cold = read.table("../../Body/1Raw/cold_water_fishes.txt", sep = '\t')
tropical = read.table("../../Body/1Raw/tropical_water_fishes.txt", sep = '\t')
View(cold)
View(tropical)
cold = gsub(' ','_', cold); length(cold)
tropical = gsub(' ','_', tropical); length(tropical)
cold
rm(list=ls(all=TRUE))
############ lists of cold and tropical fishes
cold = read.table("../../Body/1Raw/cold_water_fishes.txt", sep = '\t',)
tropical = read.table("../../Body/1Raw/tropical_water_fishes.txt", sep = '\t')
cold = gsub(' ','_', cold$V1); length(cold)
tropical = gsub(' ','_', tropical$V1); length(tropical)
############ lists of cold and tropical fishes
cold = read.table("../../Body/1Raw/cold_water_fishes.txt", sep = '\t',)
tropical = read.table("../../Body/1Raw/tropical_water_fishes.txt", sep = '\t')
cold = gsub(' ','_', cold$V1); length(cold)
tropical = gsub(' ','_', tropical$V1); length(tropical)
############ lists of cold and tropical fishes
cold = read.table("../../Body/1Raw/cold_water_fishes.txt", sep = '\t',)
tropical = read.table("../../Body/1Raw/tropical_water_fishes.txt", sep = '\t')
cold = gsub(' ','_', cold$V1); length(cold)
tropical = gsub(' ','_', tropical$V1); length(tropical)
SynNuc = read.table("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt", header = TRUE)
View(SynNuc)
View(SynNuc)
View(SynNuc)
############ lists of cold and tropical fishes
all = read.table("../../Body/1Raw/TemperatureAllChordataDataSet.txt", sep = '\t',)
View(all)
############ lists of cold and tropical fishes
all = read.table("../../Body/1Raw/TemperatureAllChordataDataSet.txt", sep = '\t', header=TRUE)
amph = all[all$Tax == "amphibia",]
amph
rept = all[all$Tax == "reptilia",]
fish = all[all$Tax == "fishes",]
View(fish)
View(rept)
amph = all[all$Tax == "amphibia",]; amph = gsub(' ','_', amph$Species); length(amph)
amph = all[all$Tax == "amphibia",]; amph$Species = gsub(' ','_', amph$Species); length(amph)
View(amph)
View(amph)
rept = all[all$Tax == "reptilia",]; rept$Species = gsub(' ','_', rept$Species);
fish = all[all$Tax == "fishes",]; fish$Species = gsub(' ','_', fish$Species);
############ Syn mut
unzip("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt.zip")
SynNuc = read.table("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt", header = TRUE)
SynNuc = read.table("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt", header = TRUE)
rm(list=ls(all=TRUE))
############ lists of cold and tropical fishes
all = read.table("../../Body/1Raw/TemperatureAllChordataDataSet.txt", sep = '\t', header=TRUE)
amph = all[all$Tax == "amphibia",]; amph$Species = gsub(' ','_', amph$Species);
rept = all[all$Tax == "reptilia",]; rept$Species = gsub(' ','_', rept$Species);
fish = all[all$Tax == "fishes",]; fish$Species = gsub(' ','_', fish$Species);
SynNuc = read.table("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt", header = TRUE)
SynNuc = read.table("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt", header = TRUE, fill = TRUE)
View(SynNuc)
### make ND6 complementary:
NotND6 = SynNuc[SynNuc$Gene != 'ND6',]
NotND6$FrA = NotND6$NeutralA / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
NotND6$FrT = NotND6$NeutralT / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
NotND6$FrG = NotND6$NeutralG / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
NotND6$FrC = NotND6$NeutralC / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
ND6 = SynNuc[SynNuc$Gene == 'ND6',]
ND6$FrA = ND6$NeutralT / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
ND6$FrT = ND6$NeutralA / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
ND6$FrG = ND6$NeutralC / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
ND6$FrC = ND6$NeutralG / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
SynNuc = rbind(NotND6,ND6)
VecOfTaxa = unique(SynNuc$Class)
VecOfTaxa
SynNuc
VecOfTaxa = unique(SynNuc$Class)
SynNuc$Class
amph = all[all$Tax == "amphibia",]; amph$Species = gsub(' ','_', amph$Species); amph$Tax=Reptilia
amph = all[all$Tax == "amphibia",]; amph$Species = gsub(' ','_', amph$Species); amph$Tax=gsub('r','R', amph$Tax)
rept = all[all$Tax == "reptilia",]; rept$Species = gsub(' ','_', rept$Species); rept$Tax=gsub('r','R', rept$Tax)
fish = all[all$Tax == "fishes",]; fish$Species = gsub(' ','_', fish$Species); fish$Tax= gsub('fishes','Actinopterygii', fish$Tax)
AGG = aggregate(list(SynNuc$FrA,SynNuc$FrT,SynNuc$FrG,SynNuc$FrC), by = list(SynNuc$Species), FUN = mean)
View(AGG)
names(AGG)=c('Species','FrA','FrT','FrG','FrC')
summary(AGG[AGG$Species %in% cold,]$FrA)
########## compare nucleotide frequencies between cold and tropical fishes
SynNucAMPH = SynNuc[SynNuc$Class == 'Amphibia',]; length(unique(SynNuc$Species))
SynNucREPT = SynNuc[SynNuc$Class == 'Reptilia',]; length(unique(SynNuc$Species))
View(SynNucAMPH)
View(SynNucREPT)
View(SynNucAMPH)
SynNucACTI = SynNuc[SynNuc$Class == 'Actinopterygii',]; length(unique(SynNuc$Species))
SynNucACTI = SynNuc[SynNuc$Class == 'Actinopterygii',]; length(unique(SynNucACTI$Species))
SynNucREPT = SynNuc[SynNuc$Class == 'Reptilia',]; length(unique(SynNucREPT$Species))
########## compare nucleotide frequencies between cold and tropical fishes
SynNucAMPH = SynNuc[SynNuc$Class == 'Amphibia',]; length(unique(SynNucAMPH$Species))
amph = all[all$Tax == "amphibia",]; amph$Species = gsub(' ','_', amph$Species); SRamph=gsub('a','A', amph$Tax)
amph = all[all$Tax == "amphibia",]; amph$Species = gsub(' ','_', amph$Species); SRamph=gsub('a','A', amph$Tax)
rept = all[all$Tax == "reptilia",]; rept$Species = gsub(' ','_', rept$Species); Sprept=gsub('r','R', rept$Tax)
fish = all[all$Tax == "fishes",]; fish$Species = gsub(' ','_', fish$Species); SPfish= gsub('fishes','Actinopterygii', fish$Tax)
rm(list=ls(all=TRUE))
############ lists of cold and tropical fishes
all = read.table("../../Body/1Raw/TemperatureAllChordataDataSet.txt", sep = '\t', header=TRUE)
amph = all[all$Tax == "amphibia",]; amph$Species = gsub(' ','_', amph$Species); SRamph=gsub('a','A', amph$Tax)
rept = all[all$Tax == "reptilia",]; rept$Species = gsub(' ','_', rept$Species); Sprept=gsub('r','R', rept$Tax)
fish = all[all$Tax == "fishes",]; fish$Species = gsub(' ','_', fish$Species); SPfish= gsub('fishes','Actinopterygii', fish$Tax)
SPfish
spAm = amph$Species
rm(list=ls(all=TRUE))
############ lists of cold and tropical fishes
all = read.table("../../Body/1Raw/TemperatureAllChordataDataSet.txt", sep = '\t', header=TRUE)
amph = all[all$Tax == "amphibia",]; amph$Species = gsub(' ','_', amph$Species); amph$Tax=gsub('a','A', amph$Tax)
rept = all[all$Tax == "reptilia",]; rept$Species = gsub(' ','_', rept$Species); rept$Tax=gsub('r','R', rept$Tax)
fish = all[all$Tax == "fishes",]; fish$Species = gsub(' ','_', fish$Species); fish$Tax= gsub('fishes','Actinopterygii', fish$Tax)
SpeciesAmph = amph$Species
SpeciesRept =
SpeciesFish =
############ Syn mut
unzip("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt.zip")
SpeciesRept = rept$Species
SpeciesFish = fish$Species
summary(AGG[AGG$Species %in% SpeciesAmph ,]$FrA)
SynNuc = read.table("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt", header = TRUE, fill = TRUE)
### make ND6 complementary:
NotND6 = SynNuc[SynNuc$Gene != 'ND6',]
NotND6$FrA = NotND6$NeutralA / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
NotND6$FrT = NotND6$NeutralT / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
NotND6$FrG = NotND6$NeutralG / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
NotND6$FrC = NotND6$NeutralC / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
ND6 = SynNuc[SynNuc$Gene == 'ND6',]
ND6$FrA = ND6$NeutralT / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
ND6$FrT = ND6$NeutralA / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
ND6$FrG = ND6$NeutralC / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
ND6$FrC = ND6$NeutralG / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
SynNuc = rbind(NotND6,ND6)
VecOfTaxa = unique(SynNuc$Class)
VecOfTaxa
########## compare nucleotide frequencies between cold and tropical fishes
SynNucAMPH = SynNuc[SynNuc$Class == 'Amphibia',]; length(unique(SynNucAMPH$Species))
SynNucREPT = SynNuc[SynNuc$Class == 'Reptilia',]; length(unique(SynNucREPT$Species))
SynNucACTI = SynNuc[SynNuc$Class == 'Actinopterygii',]; length(unique(SynNucACTI$Species))
AGG = aggregate(list(SynNuc$FrA,SynNuc$FrT,SynNuc$FrG,SynNuc$FrC), by = list(SynNuc$Species), FUN = mean)
names(AGG)=c('Species','FrA','FrT','FrG','FrC')
summary(AGG[AGG$Species %in% SpeciesAmph ,]$FrA)
summary(AGG[AGG$Species %in% SpeciesFish,]$FrA)
summary(AGG[AGG$Species %in% SpeciesRept,]$FrA)
###########Cold+Warm fishes
ColdFishes = fish[fish$T..oC. < quantile(fish$T..oC., 0.300)]
###########Cold+Warm fishes
ColdFishes = fish[fish$T..oC. < quantile(fish$T..oC., 0.300),]
View(ColdFishes)
WarmFishes = fish[fish$T..oC. > quantile(fish$T..oC., 0.700),]
WarmFishes
View(WarmFishes)
###########Cold+Warm fishes
ColdFishes = fish[fish$T..oC. < quantile(fish$T..oC., 0.400),]
WarmFishes = fish[fish$T..oC. > quantile(fish$T..oC., 0.600),]
###########Cold+Warm fishes
ColdFishes = fish[fish$T..oC. < quantile(fish$T..oC., 0.400),]; ColdFishesSpecies=ColdFishes$Species
WarmFishes = fish[fish$T..oC. > quantile(fish$T..oC., 0.600),]; WarmFishesSpecies=WarmFishes$Species
rm(list=ls(all=TRUE))
############ lists of cold and tropical fishes
all = read.table("../../Body/1Raw/TemperatureAllChordataDataSet.txt", sep = '\t', header=TRUE)
amph = all[all$Tax == "amphibia",]; amph$Species = gsub(' ','_', amph$Species); amph$Tax=gsub('a','A', amph$Tax)
rept = all[all$Tax == "reptilia",]; rept$Species = gsub(' ','_', rept$Species); rept$Tax=gsub('r','R', rept$Tax)
fish = all[all$Tax == "fishes",]; fish$Species = gsub(' ','_', fish$Species); fish$Tax= gsub('fishes','Actinopterygii', fish$Tax)
SynNuc = read.table("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt", header = TRUE, fill = TRUE)
NotND6 = SynNuc[SynNuc$Gene != 'ND6',]
NotND6$FrA = NotND6$NeutralA / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
NotND6$FrT = NotND6$NeutralT / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
NotND6$FrG = NotND6$NeutralG / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
NotND6$FrC = NotND6$NeutralC / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
ND6 = SynNuc[SynNuc$Gene == 'ND6',]
ND6$FrA = ND6$NeutralT / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
ND6$FrT = ND6$NeutralA / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
ND6$FrG = ND6$NeutralC / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
ND6$FrC = ND6$NeutralG / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
SynNuc = rbind(NotND6,ND6)
AGG = aggregate(list(SynNuc$FrA,SynNuc$FrT,SynNuc$FrG,SynNuc$FrC), by = list(SynNuc$Species), FUN = mean)
names(AGG)=c('Species','FrA','FrT','FrG','FrC')
summary(AGG[AGG$Species %in% SpeciesAmph ,]$FrA)
summary(AGG[AGG$Species %in% SpeciesFish,]$FrA)
summary(AGG[AGG$Species %in% SpeciesRept,]$FrA)
########## compare nucleotide frequencies between cold and tropical fishes
SynNucAMPH = SynNuc[SynNuc$Class == 'Amphibia',]; length(unique(SynNucAMPH$Species))
SynNucREPT = SynNuc[SynNuc$Class == 'Reptilia',]; length(unique(SynNucREPT$Species))
SynNucACTI = SynNuc[SynNuc$Class == 'Actinopterygii',]; length(unique(SynNucACTI$Species))
summary(AGG[AGG$Species %in% SpeciesAmph ,]$FrA)
summary(AGG[AGG$Species %in% SpeciesFish,]$FrA)
summary(AGG[AGG$Species %in% SpeciesRept,]$FrA)
###########Cold+Warm fishes
ColdFishes = fish[fish$T..oC. < quantile(fish$T..oC., 0.400),]; ColdFishesSpecies=ColdFishes$Species
WarmFishes = fish[fish$T..oC. > quantile(fish$T..oC., 0.600),]; WarmFishesSpecies=WarmFishes$Species
pdf("../../Body/4Figures/WholeGenomeAnalyses.coldFishVSwarmFish_alya.NoOverlap.R.01.pdf")
par(mfrow=c(2,2))
boxplot(AGG[AGG$Species %in% ColdFishesSpecies,]$FrA,AGG[AGG$Species %in% WarmFishesSpecies,]$FrA, notch = TRUE, main = 'A', names = c('cold','warm'))
boxplot(AGG[AGG$Species %in% ColdFishesSpecies,]$FrT,AGG[AGG$Species %in% WarmFishesSpecies,]$FrT, notch = TRUE, main = 'T', names = c('cold','warm'))
boxplot(AGG[AGG$Species %in% ColdFishesSpecies,]$FrG,AGG[AGG$Species %in% WarmFishesSpecies,]$FrG, notch = TRUE, main = 'G', names = c('cold','warm'))
boxplot(AGG[AGG$Species %in% ColdFishesSpecies,]$FrC,AGG[AGG$Species %in% WarmFishesSpecies,]$FrC, notch = TRUE, main = 'C', names = c('cold','warm'))
dev.off()
###########Cold+Warm reptilia
ColdReptilia = rept[rept$T..oC. < quantile(rept$T..oC., 0.400),]; ColdReptiliaSpecies=ColdReptilia$Species
WarmReptilia = rept[rept$T..oC. > quantile(rept$T..oC., 0.600),]; WarmReptiliaSpecies=WarmReptilia$Species
pdf("../../Body/4Figures/WholeGenomeAnalyses.coldReptiliaVSwarmReptilia_alya.NoOverlap.R.01.pdf")
par(mfrow=c(2,2))
boxplot(AGG[AGG$Species %in% ColdReptiliaSpecies,]$FrA,AGG[AGG$Species %in% WarmReptiliaSpecies,]$FrA, notch = TRUE, main = 'A', names = c('cold','warm'))
boxplot(AGG[AGG$Species %in% ColdReptiliaSpecies,]$FrT,AGG[AGG$Species %in% WarmReptiliaSpecies,]$FrT, notch = TRUE, main = 'T', names = c('cold','warm'))
boxplot(AGG[AGG$Species %in% ColdReptiliaSpecies,]$FrG,AGG[AGG$Species %in% WarmReptiliaSpecies,]$FrG, notch = TRUE, main = 'G', names = c('cold','warm'))
boxplot(AGG[AGG$Species %in% ColdReptiliaSpecies,]$FrC,AGG[AGG$Species %in% WarmReptiliaSpecies,]$FrC, notch = TRUE, main = 'C', names = c('cold','warm'))
dev.off()
ColdReptilia
WarmReptilia
###########Cold+Warm amphibia
ColdAmphibia = amph[amph$T..oC. < quantile(amph$T..oC., 0.400),]; ColdAmphibiaSpecies=ColdAmphibia$Species
WarmAmphibia = amph[amph$T..oC. > quantile(amph$T..oC., 0.600),]; WarmAmphibiaSpecies=WarmAmphibia$Species
WarmAmphibia
ColdAmphibia
WarmAmphibia
pdf("../../Body/4Figures/WholeGenomeAnalyses.coldAmphibiaVSwarmAmphibia_alya.NoOverlap.R.01.pdf")
par(mfrow=c(2,2))
boxplot(AGG[AGG$Species %in% ColdReptiliaSpecies,]$FrA,AGG[AGG$Species %in% WarmReptiliaSpecies,]$FrA, notch = TRUE, main = 'A', names = c('cold','warm'))
boxplot(AGG[AGG$Species %in% ColdReptiliaSpecies,]$FrT,AGG[AGG$Species %in% WarmReptiliaSpecies,]$FrT, notch = TRUE, main = 'T', names = c('cold','warm'))
boxplot(AGG[AGG$Species %in% ColdReptiliaSpecies,]$FrG,AGG[AGG$Species %in% WarmReptiliaSpecies,]$FrG, notch = TRUE, main = 'G', names = c('cold','warm'))
boxplot(AGG[AGG$Species %in% ColdReptiliaSpecies,]$FrC,AGG[AGG$Species %in% WarmReptiliaSpecies,]$FrC, notch = TRUE, main = 'C', names = c('cold','warm'))
dev.off()
rm(list=ls(all=TRUE))
############ lists of cold and tropical fishes
all = read.table("../../Body/1Raw/TemperatureAllChordataDataSet.txt", sep = '\t', header=TRUE)
amph = all[all$Tax == "amphibia",]; amph$Species = gsub(' ','_', amph$Species); amph$Tax=gsub('a','A', amph$Tax)
rept = all[all$Tax == "reptilia",]; rept$Species = gsub(' ','_', rept$Species); rept$Tax=gsub('r','R', rept$Tax)
fish = all[all$Tax == "fishes",]; fish$Species = gsub(' ','_', fish$Species); fish$Tax= gsub('fishes','Actinopterygii', fish$Tax)
SynNuc = read.table("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt", header = TRUE, fill = TRUE)
### make ND6 complementary:
NotND6 = SynNuc[SynNuc$Gene != 'ND6',]
NotND6$FrA = NotND6$NeutralA / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
NotND6$FrT = NotND6$NeutralT / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
NotND6$FrG = NotND6$NeutralG / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
NotND6$FrC = NotND6$NeutralC / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
ND6 = SynNuc[SynNuc$Gene == 'ND6',]
ND6$FrA = ND6$NeutralT / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
ND6$FrT = ND6$NeutralA / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
ND6$FrG = ND6$NeutralC / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
ND6$FrC = ND6$NeutralG / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
SynNuc = rbind(NotND6,ND6)
########## compare nucleotide frequencies
SynNucAMPH = SynNuc[SynNuc$Class == 'Amphibia',]; length(unique(SynNucAMPH$Species))
SynNucREPT = SynNuc[SynNuc$Class == 'Reptilia',]; length(unique(SynNucREPT$Species))
SynNucACTI = SynNuc[SynNuc$Class == 'Actinopterygii',]; length(unique(SynNucACTI$Species))
AGG = aggregate(list(SynNuc$FrA,SynNuc$FrT,SynNuc$FrG,SynNuc$FrC), by = list(SynNuc$Species), FUN = mean)
names(AGG)=c('Species','FrA','FrT','FrG','FrC')
###########Cold+Warm fishes
ColdFishes = fish[fish$T..oC. < quantile(fish$T..oC., 0.400),]; ColdFishesSpecies=ColdFishes$Species
WarmFishes = fish[fish$T..oC. > quantile(fish$T..oC., 0.600),]; WarmFishesSpecies=WarmFishes$Species
###########Cold+Warm reptilia
ColdReptilia = rept[rept$T..oC. < quantile(rept$T..oC., 0.400),]; ColdReptiliaSpecies=ColdReptilia$Species
WarmReptilia = rept[rept$T..oC. > quantile(rept$T..oC., 0.600),]; WarmReptiliaSpecies=WarmReptilia$Species
###########Cold+Warm amphibia
ColdAmphibia = amph[amph$T..oC. < quantile(amph$T..oC., 0.400),]; ColdAmphibiaSpecies=ColdAmphibia$Species
WarmAmphibia = amph[amph$T..oC. > quantile(amph$T..oC., 0.600),]; WarmAmphibiaSpecies=WarmAmphibia$Species
############ Syn mut
unzip("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt.zip")
SynNuc = read.table("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt", sep = '\t', header = TRUE) # , fill = TRUE
rm(list=ls(all=TRUE))
############ lists of hibernating and torpor animals
cold = read.table("../../Body/1Raw/cold_water_fishes.txt", sep = '\t', header=TRUE)
trop = read.table("../../Body/1Raw/tropical_water_fishes.txt", sep = '\t', header=TRUE)
View(trop)
############ lists of hibernating and torpor animals
cold = read.table("../../Body/1Raw/cold_water_fishes.txt", sep = '\t', header=FALSE)
trop = read.table("../../Body/1Raw/tropical_water_fishes.txt", sep = '\t', header=FALSE)
ListOfColdSpecies = gsub(' ','_', as.character(V1)); length(ListOfColdSpecies)
ListOfTropicalSpecies = gsub(' ','_', as.character(Vi)); length(ListOfTropicalSpecies)
ListOfColdSpecies = gsub(' ','_', as.character(V1)); length(ListOfColdSpecies)
ListOfColdSpecies = gsub(' ','_', as.character(cold$V1)); length(ListOfColdSpecies)
ListOfTropicalSpecies = gsub(' ','_', as.character(trop$V1)); length(ListOfTropicalSpecies)
SynNuc = read.table("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt", header = TRUE, sep='/t')
############ Syn mut
unzip("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt.zip")
SynNuc = read.table("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt", header = TRUE, sep='/t')
SynNuc = read.table("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt", header = TRUE, sep='\t')
file.remove("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt")
### make ND6 complementary:
NotND6 = SynNuc[SynNuc$Gene != 'ND6',]
NotND6$FrA = NotND6$NeutralA / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
NotND6$FrT = NotND6$NeutralT / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
NotND6$FrC = NotND6$NeutralC / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
NotND6$FrG = NotND6$NeutralG / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
ND6 = SynNuc[SynNuc$Gene == 'ND6',]
ND6$FrA = ND6$NeutralT / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
ND6$FrT = ND6$NeutralA / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
ND6$FrG = ND6$NeutralC / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
ND6$FrC = ND6$NeutralG / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
SynNuc = rbind(NotND6,ND6)
VecOfTaxa = unique(SynNuc$Class)
VecOfTaxa
########## compare nucleotide frequencies between hibernating and DT mammals
SynNuc = SynNuc[SynNuc$Class == 'Mammalia',]; length(unique(SynNuc$Species))
AGG = aggregate(list(SynNuc$FrA,SynNuc$FrT,SynNuc$FrG,SynNuc$FrC), by = list(SynNuc$Species), FUN = mean)
names(AGG)=c('Species','FrA','FrT','FrG','FrC')
summary(AGG[AGG$Species %in% ListOfColdSpecies,]$FrA)
summary(AGG[AGG$Species %in% ListOfTropicalSpecies,]$FrA)
############ Syn mut
unzip("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt.zip")
SynNuc = read.table("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt", header = TRUE, sep='\t')
file.remove("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt")
### make ND6 complementary:
NotND6 = SynNuc[SynNuc$Gene != 'ND6',]
NotND6$FrA = NotND6$NeutralA / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
NotND6$FrT = NotND6$NeutralT / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
NotND6$FrG = NotND6$NeutralG / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
NotND6$FrC = NotND6$NeutralC / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
ND6 = SynNuc[SynNuc$Gene == 'ND6',]
ND6$FrA = ND6$NeutralT / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
ND6$FrT = ND6$NeutralA / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
ND6$FrG = ND6$NeutralC / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
ND6$FrC = ND6$NeutralG / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
SynNuc = rbind(NotND6,ND6)
VecOfTaxa = unique(SynNuc$Class)
########## compare nucleotide frequencies between hibernating and DT mammals
SynNuc = SynNuc[SynNuc$Class == 'Mammalia',]; length(unique(SynNuc$Species))
VecOfTaxa
########## compare nucleotide frequencies between hibernating and DT mammals
SynNuc = SynNuc[SynNuc$Class == 'Actinopterygii',]; length(unique(SynNuc$Species))
############ Syn mut
unzip("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt.zip")
SynNuc = read.table("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt", header = TRUE, sep='\t')
file.remove("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt")
### make ND6 complementary:
NotND6 = SynNuc[SynNuc$Gene != 'ND6',]
NotND6$FrA = NotND6$NeutralA / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
NotND6$FrT = NotND6$NeutralT / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
NotND6$FrG = NotND6$NeutralG / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
NotND6$FrC = NotND6$NeutralC / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
ND6 = SynNuc[SynNuc$Gene == 'ND6',]
ND6$FrA = ND6$NeutralT / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
ND6$FrT = ND6$NeutralA / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
ND6$FrG = ND6$NeutralC / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
ND6$FrC = ND6$NeutralG / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
SynNuc = rbind(NotND6,ND6)
VecOfTaxa = unique(SynNuc$Class)
########## compare nucleotide frequencies between hibernating and DT mammals
SynNuc = SynNuc[SynNuc$Class == 'Actinopterygii',]; length(unique(SynNuc$Species))
AGG = aggregate(list(SynNuc$FrA,SynNuc$FrT,SynNuc$FrG,SynNuc$FrC), by = list(SynNuc$Species), FUN = mean)
names(AGG)=c('Species','FrA','FrT','FrG','FrC')
summary(AGG[AGG$Species %in% ListOfColdSpecies,]$FrA)
summary(AGG[AGG$Species %in% ListOfTropicalSpecies,]$FrA)
pdf("../../Body/4Figures/WholeGenomeAnalyses.coldFishVStropicalFish.NoOverlap.R.01.pdf")
par(mfrow=c(2,2))
boxplot(AGG[AGG$Species %in% ListOfColdSpecies,]$FrA,AGG[AGG$Species %in% ListOfTropicalSpecies,]$FrA, notch = TRUE, main = 'A', names = c('Cold','Tropical'))
boxplot(AGG[AGG$Species %in% ListOfColdSpecies,]$FrT,AGG[AGG$Species %in% ListOfTropicalSpecies,]$FrT, notch = TRUE, main = 'T', names = c('Cold','Tropical'))
boxplot(AGG[AGG$Species %in% ListOfColdSpecies,]$FrG,AGG[AGG$Species %in% ListOfTropicalSpecies,]$FrG, notch = TRUE, main = 'G', names = c('Cold','Tropical'))
boxplot(AGG[AGG$Species %in% ListOfColdSpecies,]$FrG,AGG[AGG$Species %in% ListOfTropicalSpecies,]$FrC, notch = TRUE, main = 'C', names = c('Cold','Tropical'))
dev.off()
rm(list=ls(all=TRUE))
############ lists of hibernating and torpor animals
cold = read.table("../../Body/1Raw/cold_water_fishes.txt", sep = '\t', header=FALSE)
trop = read.table("../../Body/1Raw/tropical_water_fishes.txt", sep = '\t', header=FALSE)
ListOfColdSpecies = gsub(' ','_', as.character(cold$V1)); length(ListOfColdSpecies)
ListOfTropicalSpecies = gsub(' ','_', as.character(trop$V1)); length(ListOfTropicalSpecies)
############ Syn mut
unzip("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt.zip")
SynNuc = read.table("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt", header = TRUE, sep='\t')
file.remove("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt")
### make ND6 complementary:
NotND6 = SynNuc[SynNuc$Gene != 'ND6',]
NotND6$FrA = NotND6$NeutralA / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
NotND6$FrT = NotND6$NeutralT / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
NotND6$FrG = NotND6$NeutralG / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
NotND6$FrC = NotND6$NeutralC / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
ND6 = SynNuc[SynNuc$Gene == 'ND6',]
ND6$FrA = ND6$NeutralT / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
ND6$FrT = ND6$NeutralA / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
ND6$FrG = ND6$NeutralC / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
ND6$FrC = ND6$NeutralG / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
SynNuc = rbind(NotND6,ND6)
VecOfTaxa = unique(SynNuc$Class)
########## compare nucleotide frequencies between hibernating and DT mammals
SynNuc = SynNuc[SynNuc$Class == 'Actinopterygii',]; length(unique(SynNuc$Species))
AGG = aggregate(list(SynNuc$FrA,SynNuc$FrT,SynNuc$FrG,SynNuc$FrC), by = list(SynNuc$Species), FUN = mean)
names(AGG)=c('Species','FrA','FrT','FrG','FrC')
summary(AGG[AGG$Species %in% ListOfColdSpecies,]$FrA)
summary(AGG[AGG$Species %in% ListOfTropicalSpecies,]$FrA)
boxplot(AGG[AGG$Species %in% ListOfColdSpecies,]$FrA,AGG[AGG$Species %in% ListOfTropicalSpecies,]$FrA, notch = TRUE, main = 'A', names = c('Cold','Tropical'))
AnAge = read.table("../../Body/1Raw/anage_data.txt", sep = '\t', header=TRUE)
AnAge$Species = paste(AnAge$Genus, AnAge$Species, sep = '_')
table(AnAge$Class)
AnAge$TempInCelcius = AnAge$Temperature..K. - 273.15 # T(°C) = T(K) - 273.15
MammalinBodyTemp = AnAge[AnAge$Class == 'Mammalia',]$TempInCelcius
############ lists of cold and tropical vertebrates
all = read.table("../../Body/1Raw/TemperatureAllChordataDataSet.txt", sep = '\t', header=TRUE)
table(all$Tax)
amph = all[all$Tax == "amphibia",]; amph$Species = gsub(' ','_', amph$Species); amph$Tax= gsub('amphibia','Amphibia', amph$Tax)
rept = all[all$Tax == "reptilia",]; rept$Species = gsub(' ','_', rept$Species); rept$Tax=gsub('r','R', rept$Tax)
fish = all[all$Tax == "fishes",]; fish$Species = gsub(' ','_', fish$Species); fish$Tax= gsub('fishes','Actinopterygii', fish$Tax)
birds = all[all$Tax == "birds",]; fish$Species = gsub(' ','_', fish$Species); fish$Tax= gsub('birds','Aves', fish$Tax)  #
summary(birds$T..oC.)  # ?????
boxplot(fish$T..oC.,amph$T..oC.,rept$T..oC.,MammalinBodyTemp,birds$T..oC., notch = TRUE, names = c('Actinopterygii','Amphibia','Reptilia','Mammalia','Aves'), outline = FALSE)  # dev.off()
## look for some eco correlations - BMR and body mass are strongly positive, others - nothing strong
plot(log2(fish$Body.mass..gram.),log2(fish$T..oC.)); cor.test(fish$Body.mass..gram.,fish$T..oC.) # nothing!!
plot(log2(fish$Basal.metabolic.rate..watts.),log2(fish$T..oC.)); cor.test(fish$Basal.metabolic.rate..watts.,fish$T..oC.) # nothing or positive trend!
plot(log2(fish$Basal.metabolic.rate..watts.),log2(fish$Body.mass..gram.)); cor.test(log2(fish$Basal.metabolic.rate..watts.),log2(fish$Body.mass..gram.)) # super positive
############ Syn mut
unzip("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt.zip")
SynNuc = read.table("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt", sep = '\t', header = TRUE) # , fill = TRUE
file.remove("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt")
NotND6 = SynNuc[SynNuc$Gene != 'ND6',]
NotND6$FrA = NotND6$NeutralA / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
NotND6$FrT = NotND6$NeutralT / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
NotND6$FrG = NotND6$NeutralG / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
NotND6$FrC = NotND6$NeutralC / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
ND6 = SynNuc[SynNuc$Gene == 'ND6',]
ND6$FrA = ND6$NeutralT / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
ND6$FrT = ND6$NeutralA / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
ND6$FrG = ND6$NeutralC / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
ND6$FrC = ND6$NeutralG / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
SynNuc = rbind(NotND6,ND6)
VecOfTaxa = unique(SynNuc$Class)
SynNucAMPH = SynNuc[SynNuc$Class == 'Amphibia',]; length(unique(SynNucAMPH$Species))
SynNucREPT = SynNuc[SynNuc$Class == 'Reptilia',]; length(unique(SynNucREPT$Species))
SynNucACTI = SynNuc[SynNuc$Class == 'Actinopterygii',]; length(unique(SynNucACTI$Species))
AGG = aggregate(list(SynNuc$FrA,SynNuc$FrT,SynNuc$FrG,SynNuc$FrC), by = list(SynNuc$Species), FUN = mean)
names(AGG)=c('Species','FrA','FrT','FrG','FrC')
View(AGG)
amph = merge(amph,AGG, by = 'Species'); # just 10
rept = merge(rept,AGG, by = 'Species'); # just 17
fish = merge(fish,AGG, by = 'Species'); # 86
######### try cor.test between G and temperature: amph - nothing; rept - nothing; fishes - T and G
cor.test(amph$T..oC.,amph$FrA, method = 'spearman')
c<-lm(fish$T..oC. ~ scale(fish$FrA) + scale(fish$FrT) + scale(fish$FrG)); summary(c); # similar negative coefficients -> either T is also partially driven by temperature, or it is indurectly linked through ecology.
tree <- read.tree("../../Body/1Raw/mtalign.aln.treefile.rooted")
library(ape)
install.packages("ape")
library(ape)
tree <- read.tree("../../Body/1Raw/mtalign.aln.treefile.rooted")
View(fish)
data = fish[which(as.character(fish$Species) %in% tree$tip.label),]
df_vec <- as.character(fish$Species)
tree_vec <- tree$tip.label
a <- setdiff(df_vec, tree_vec)
b <- setdiff(tree_vec, df_vec)
row.names(data) = data$Species
tree2 <- drop.tip(tree, b)
contrasts <- apply(data, 2, pic, tree2)
View(data)
contrasts <- apply(data[, -1], 2, pic, tree2)
nrow(data) == length(tree2$tip.label)
contrasts <- apply(data[, -c(1,5)], 2, pic, tree2)
TempData = data[, -c('Species', 'Tax')]
TempData = data[, -c(1, 5)]
contrasts <- apply(TempData, 2, pic, tree2)
names(contrasts) = names(TempData)
View(contrasts)
cor.test(contrasts$T..oC.,fish$FrA, method = 'spearman') # a bit positive:                                   # 0.2095367, 0.05283
contrasts <- as.data.frame(apply(TempData, 2, pic, tree2))
names(contrasts) = names(TempData)
cor.test(contrasts$T..oC.,fish$FrA, method = 'spearman') # a bit positive:                                   # 0.2095367, 0.05283
cor.test(contrasts$T..oC., contrasts$FrA, method = 'spearman') # a bit positive:                                   # 0.2095367, 0.05283
cor.test(contrasts$T..oC., contrasts$FrT, method = 'spearman') # a bit negative. Warm fishes live longer!?         # -0.2669443; 0.01297
cor.test(contrasts$T..oC., contrasts$FrA, method = 'spearman') # rho 0.3002067                                 # 0.2095367, 0.05283
cor.test(contrasts$T..oC., contrasts$FrT, method = 'spearman') # -0.2361942         # -0.2669443; 0.01297
cor.test(contrasts$T..oC., contrasts$FrG, method = 'spearman') # a bit negative. Effect of the temperature alone!? # -0.2170128; 0.04475
cor.test(contrasts$T..oC., contrasts$FrC, method = 'spearman') # nothing
c<-lm(contrasts$T..oC. ~ scale(contrasts$FrA) + scale(contrasts$FrT) + scale(contrasts$FrG)); summary(c); # similar negative coefficients -> either T is also partially driven by temperature, or it is indurectly linked through ecology.
b<-lm(contrasts$T..oC. ~ scale(contrasts$FrT) + scale(contrasts$FrG)); summary(b) # similar negative coefficients -> either T is also partially driven by temperature, or it is indurectly linked through ecology.
