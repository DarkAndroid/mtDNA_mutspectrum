amph = all[all$Tax == "amphibia",]; amph$Species = gsub(' ','_', amph$Species); amph$Tax=gsub('a','A', amph$Tax)
rept = all[all$Tax == "reptilia",]; rept$Species = gsub(' ','_', rept$Species); rept$Tax=gsub('r','R', rept$Tax)
fish = all[all$Tax == "fishes",]; fish$Species = gsub(' ','_', fish$Species); fish$Tax= gsub('fishes','Actinopterygii', fish$Tax)
SynNuc = read.table("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt", header = TRUE, fill = TRUE)
NotND6 = SynNuc[SynNuc$Gene != 'ND6',]
NotND6$FrA = NotND6$NeutralA / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
NotND6$FrT = NotND6$NeutralT / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
NotND6$FrG = NotND6$NeutralG / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
NotND6$FrC = NotND6$NeutralC / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
ND6 = SynNuc[SynNuc$Gene == 'ND6',]
ND6$FrA = ND6$NeutralT / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
ND6$FrT = ND6$NeutralA / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
ND6$FrG = ND6$NeutralC / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
ND6$FrC = ND6$NeutralG / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
SynNuc = rbind(NotND6,ND6)
AGG = aggregate(list(SynNuc$FrA,SynNuc$FrT,SynNuc$FrG,SynNuc$FrC), by = list(SynNuc$Species), FUN = mean)
names(AGG)=c('Species','FrA','FrT','FrG','FrC')
summary(AGG[AGG$Species %in% SpeciesAmph ,]$FrA)
summary(AGG[AGG$Species %in% SpeciesFish,]$FrA)
summary(AGG[AGG$Species %in% SpeciesRept,]$FrA)
########## compare nucleotide frequencies between cold and tropical fishes
SynNucAMPH = SynNuc[SynNuc$Class == 'Amphibia',]; length(unique(SynNucAMPH$Species))
SynNucREPT = SynNuc[SynNuc$Class == 'Reptilia',]; length(unique(SynNucREPT$Species))
SynNucACTI = SynNuc[SynNuc$Class == 'Actinopterygii',]; length(unique(SynNucACTI$Species))
summary(AGG[AGG$Species %in% SpeciesAmph ,]$FrA)
summary(AGG[AGG$Species %in% SpeciesFish,]$FrA)
summary(AGG[AGG$Species %in% SpeciesRept,]$FrA)
###########Cold+Warm fishes
ColdFishes = fish[fish$T..oC. < quantile(fish$T..oC., 0.400),]; ColdFishesSpecies=ColdFishes$Species
WarmFishes = fish[fish$T..oC. > quantile(fish$T..oC., 0.600),]; WarmFishesSpecies=WarmFishes$Species
pdf("../../Body/4Figures/WholeGenomeAnalyses.coldFishVSwarmFish_alya.NoOverlap.R.01.pdf")
par(mfrow=c(2,2))
boxplot(AGG[AGG$Species %in% ColdFishesSpecies,]$FrA,AGG[AGG$Species %in% WarmFishesSpecies,]$FrA, notch = TRUE, main = 'A', names = c('cold','warm'))
boxplot(AGG[AGG$Species %in% ColdFishesSpecies,]$FrT,AGG[AGG$Species %in% WarmFishesSpecies,]$FrT, notch = TRUE, main = 'T', names = c('cold','warm'))
boxplot(AGG[AGG$Species %in% ColdFishesSpecies,]$FrG,AGG[AGG$Species %in% WarmFishesSpecies,]$FrG, notch = TRUE, main = 'G', names = c('cold','warm'))
boxplot(AGG[AGG$Species %in% ColdFishesSpecies,]$FrC,AGG[AGG$Species %in% WarmFishesSpecies,]$FrC, notch = TRUE, main = 'C', names = c('cold','warm'))
dev.off()
###########Cold+Warm reptilia
ColdReptilia = rept[rept$T..oC. < quantile(rept$T..oC., 0.400),]; ColdReptiliaSpecies=ColdReptilia$Species
WarmReptilia = rept[rept$T..oC. > quantile(rept$T..oC., 0.600),]; WarmReptiliaSpecies=WarmReptilia$Species
pdf("../../Body/4Figures/WholeGenomeAnalyses.coldReptiliaVSwarmReptilia_alya.NoOverlap.R.01.pdf")
par(mfrow=c(2,2))
boxplot(AGG[AGG$Species %in% ColdReptiliaSpecies,]$FrA,AGG[AGG$Species %in% WarmReptiliaSpecies,]$FrA, notch = TRUE, main = 'A', names = c('cold','warm'))
boxplot(AGG[AGG$Species %in% ColdReptiliaSpecies,]$FrT,AGG[AGG$Species %in% WarmReptiliaSpecies,]$FrT, notch = TRUE, main = 'T', names = c('cold','warm'))
boxplot(AGG[AGG$Species %in% ColdReptiliaSpecies,]$FrG,AGG[AGG$Species %in% WarmReptiliaSpecies,]$FrG, notch = TRUE, main = 'G', names = c('cold','warm'))
boxplot(AGG[AGG$Species %in% ColdReptiliaSpecies,]$FrC,AGG[AGG$Species %in% WarmReptiliaSpecies,]$FrC, notch = TRUE, main = 'C', names = c('cold','warm'))
dev.off()
ColdReptilia
WarmReptilia
###########Cold+Warm amphibia
ColdAmphibia = amph[amph$T..oC. < quantile(amph$T..oC., 0.400),]; ColdAmphibiaSpecies=ColdAmphibia$Species
WarmAmphibia = amph[amph$T..oC. > quantile(amph$T..oC., 0.600),]; WarmAmphibiaSpecies=WarmAmphibia$Species
WarmAmphibia
ColdAmphibia
WarmAmphibia
pdf("../../Body/4Figures/WholeGenomeAnalyses.coldAmphibiaVSwarmAmphibia_alya.NoOverlap.R.01.pdf")
par(mfrow=c(2,2))
boxplot(AGG[AGG$Species %in% ColdReptiliaSpecies,]$FrA,AGG[AGG$Species %in% WarmReptiliaSpecies,]$FrA, notch = TRUE, main = 'A', names = c('cold','warm'))
boxplot(AGG[AGG$Species %in% ColdReptiliaSpecies,]$FrT,AGG[AGG$Species %in% WarmReptiliaSpecies,]$FrT, notch = TRUE, main = 'T', names = c('cold','warm'))
boxplot(AGG[AGG$Species %in% ColdReptiliaSpecies,]$FrG,AGG[AGG$Species %in% WarmReptiliaSpecies,]$FrG, notch = TRUE, main = 'G', names = c('cold','warm'))
boxplot(AGG[AGG$Species %in% ColdReptiliaSpecies,]$FrC,AGG[AGG$Species %in% WarmReptiliaSpecies,]$FrC, notch = TRUE, main = 'C', names = c('cold','warm'))
dev.off()
rm(list=ls(all=TRUE))
############ lists of cold and tropical fishes
all = read.table("../../Body/1Raw/TemperatureAllChordataDataSet.txt", sep = '\t', header=TRUE)
amph = all[all$Tax == "amphibia",]; amph$Species = gsub(' ','_', amph$Species); amph$Tax=gsub('a','A', amph$Tax)
rept = all[all$Tax == "reptilia",]; rept$Species = gsub(' ','_', rept$Species); rept$Tax=gsub('r','R', rept$Tax)
fish = all[all$Tax == "fishes",]; fish$Species = gsub(' ','_', fish$Species); fish$Tax= gsub('fishes','Actinopterygii', fish$Tax)
SynNuc = read.table("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt", header = TRUE, fill = TRUE)
### make ND6 complementary:
NotND6 = SynNuc[SynNuc$Gene != 'ND6',]
NotND6$FrA = NotND6$NeutralA / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
NotND6$FrT = NotND6$NeutralT / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
NotND6$FrG = NotND6$NeutralG / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
NotND6$FrC = NotND6$NeutralC / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
ND6 = SynNuc[SynNuc$Gene == 'ND6',]
ND6$FrA = ND6$NeutralT / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
ND6$FrT = ND6$NeutralA / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
ND6$FrG = ND6$NeutralC / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
ND6$FrC = ND6$NeutralG / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
SynNuc = rbind(NotND6,ND6)
########## compare nucleotide frequencies
SynNucAMPH = SynNuc[SynNuc$Class == 'Amphibia',]; length(unique(SynNucAMPH$Species))
SynNucREPT = SynNuc[SynNuc$Class == 'Reptilia',]; length(unique(SynNucREPT$Species))
SynNucACTI = SynNuc[SynNuc$Class == 'Actinopterygii',]; length(unique(SynNucACTI$Species))
AGG = aggregate(list(SynNuc$FrA,SynNuc$FrT,SynNuc$FrG,SynNuc$FrC), by = list(SynNuc$Species), FUN = mean)
names(AGG)=c('Species','FrA','FrT','FrG','FrC')
###########Cold+Warm fishes
ColdFishes = fish[fish$T..oC. < quantile(fish$T..oC., 0.400),]; ColdFishesSpecies=ColdFishes$Species
WarmFishes = fish[fish$T..oC. > quantile(fish$T..oC., 0.600),]; WarmFishesSpecies=WarmFishes$Species
###########Cold+Warm reptilia
ColdReptilia = rept[rept$T..oC. < quantile(rept$T..oC., 0.400),]; ColdReptiliaSpecies=ColdReptilia$Species
WarmReptilia = rept[rept$T..oC. > quantile(rept$T..oC., 0.600),]; WarmReptiliaSpecies=WarmReptilia$Species
###########Cold+Warm amphibia
ColdAmphibia = amph[amph$T..oC. < quantile(amph$T..oC., 0.400),]; ColdAmphibiaSpecies=ColdAmphibia$Species
WarmAmphibia = amph[amph$T..oC. > quantile(amph$T..oC., 0.600),]; WarmAmphibiaSpecies=WarmAmphibia$Species
############ Syn mut
unzip("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt.zip")
SynNuc = read.table("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt", sep = '\t', header = TRUE) # , fill = TRUE
rm(list=ls(all=TRUE))
############ lists of hibernating and torpor animals
cold = read.table("../../Body/1Raw/cold_water_fishes.txt", sep = '\t', header=TRUE)
trop = read.table("../../Body/1Raw/tropical_water_fishes.txt", sep = '\t', header=TRUE)
View(trop)
############ lists of hibernating and torpor animals
cold = read.table("../../Body/1Raw/cold_water_fishes.txt", sep = '\t', header=FALSE)
trop = read.table("../../Body/1Raw/tropical_water_fishes.txt", sep = '\t', header=FALSE)
ListOfColdSpecies = gsub(' ','_', as.character(V1)); length(ListOfColdSpecies)
ListOfTropicalSpecies = gsub(' ','_', as.character(Vi)); length(ListOfTropicalSpecies)
ListOfColdSpecies = gsub(' ','_', as.character(V1)); length(ListOfColdSpecies)
ListOfColdSpecies = gsub(' ','_', as.character(cold$V1)); length(ListOfColdSpecies)
ListOfTropicalSpecies = gsub(' ','_', as.character(trop$V1)); length(ListOfTropicalSpecies)
SynNuc = read.table("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt", header = TRUE, sep='/t')
############ Syn mut
unzip("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt.zip")
SynNuc = read.table("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt", header = TRUE, sep='/t')
SynNuc = read.table("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt", header = TRUE, sep='\t')
file.remove("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt")
### make ND6 complementary:
NotND6 = SynNuc[SynNuc$Gene != 'ND6',]
NotND6$FrA = NotND6$NeutralA / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
NotND6$FrT = NotND6$NeutralT / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
NotND6$FrC = NotND6$NeutralC / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
NotND6$FrG = NotND6$NeutralG / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
ND6 = SynNuc[SynNuc$Gene == 'ND6',]
ND6$FrA = ND6$NeutralT / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
ND6$FrT = ND6$NeutralA / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
ND6$FrG = ND6$NeutralC / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
ND6$FrC = ND6$NeutralG / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
SynNuc = rbind(NotND6,ND6)
VecOfTaxa = unique(SynNuc$Class)
VecOfTaxa
########## compare nucleotide frequencies between hibernating and DT mammals
SynNuc = SynNuc[SynNuc$Class == 'Mammalia',]; length(unique(SynNuc$Species))
AGG = aggregate(list(SynNuc$FrA,SynNuc$FrT,SynNuc$FrG,SynNuc$FrC), by = list(SynNuc$Species), FUN = mean)
names(AGG)=c('Species','FrA','FrT','FrG','FrC')
summary(AGG[AGG$Species %in% ListOfColdSpecies,]$FrA)
summary(AGG[AGG$Species %in% ListOfTropicalSpecies,]$FrA)
############ Syn mut
unzip("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt.zip")
SynNuc = read.table("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt", header = TRUE, sep='\t')
file.remove("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt")
### make ND6 complementary:
NotND6 = SynNuc[SynNuc$Gene != 'ND6',]
NotND6$FrA = NotND6$NeutralA / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
NotND6$FrT = NotND6$NeutralT / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
NotND6$FrG = NotND6$NeutralG / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
NotND6$FrC = NotND6$NeutralC / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
ND6 = SynNuc[SynNuc$Gene == 'ND6',]
ND6$FrA = ND6$NeutralT / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
ND6$FrT = ND6$NeutralA / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
ND6$FrG = ND6$NeutralC / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
ND6$FrC = ND6$NeutralG / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
SynNuc = rbind(NotND6,ND6)
VecOfTaxa = unique(SynNuc$Class)
########## compare nucleotide frequencies between hibernating and DT mammals
SynNuc = SynNuc[SynNuc$Class == 'Mammalia',]; length(unique(SynNuc$Species))
VecOfTaxa
########## compare nucleotide frequencies between hibernating and DT mammals
SynNuc = SynNuc[SynNuc$Class == 'Actinopterygii',]; length(unique(SynNuc$Species))
############ Syn mut
unzip("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt.zip")
SynNuc = read.table("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt", header = TRUE, sep='\t')
file.remove("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt")
### make ND6 complementary:
NotND6 = SynNuc[SynNuc$Gene != 'ND6',]
NotND6$FrA = NotND6$NeutralA / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
NotND6$FrT = NotND6$NeutralT / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
NotND6$FrG = NotND6$NeutralG / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
NotND6$FrC = NotND6$NeutralC / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
ND6 = SynNuc[SynNuc$Gene == 'ND6',]
ND6$FrA = ND6$NeutralT / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
ND6$FrT = ND6$NeutralA / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
ND6$FrG = ND6$NeutralC / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
ND6$FrC = ND6$NeutralG / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
SynNuc = rbind(NotND6,ND6)
VecOfTaxa = unique(SynNuc$Class)
########## compare nucleotide frequencies between hibernating and DT mammals
SynNuc = SynNuc[SynNuc$Class == 'Actinopterygii',]; length(unique(SynNuc$Species))
AGG = aggregate(list(SynNuc$FrA,SynNuc$FrT,SynNuc$FrG,SynNuc$FrC), by = list(SynNuc$Species), FUN = mean)
names(AGG)=c('Species','FrA','FrT','FrG','FrC')
summary(AGG[AGG$Species %in% ListOfColdSpecies,]$FrA)
summary(AGG[AGG$Species %in% ListOfTropicalSpecies,]$FrA)
pdf("../../Body/4Figures/WholeGenomeAnalyses.coldFishVStropicalFish.NoOverlap.R.01.pdf")
par(mfrow=c(2,2))
boxplot(AGG[AGG$Species %in% ListOfColdSpecies,]$FrA,AGG[AGG$Species %in% ListOfTropicalSpecies,]$FrA, notch = TRUE, main = 'A', names = c('Cold','Tropical'))
boxplot(AGG[AGG$Species %in% ListOfColdSpecies,]$FrT,AGG[AGG$Species %in% ListOfTropicalSpecies,]$FrT, notch = TRUE, main = 'T', names = c('Cold','Tropical'))
boxplot(AGG[AGG$Species %in% ListOfColdSpecies,]$FrG,AGG[AGG$Species %in% ListOfTropicalSpecies,]$FrG, notch = TRUE, main = 'G', names = c('Cold','Tropical'))
boxplot(AGG[AGG$Species %in% ListOfColdSpecies,]$FrG,AGG[AGG$Species %in% ListOfTropicalSpecies,]$FrC, notch = TRUE, main = 'C', names = c('Cold','Tropical'))
dev.off()
rm(list=ls(all=TRUE))
############ lists of hibernating and torpor animals
cold = read.table("../../Body/1Raw/cold_water_fishes.txt", sep = '\t', header=FALSE)
trop = read.table("../../Body/1Raw/tropical_water_fishes.txt", sep = '\t', header=FALSE)
ListOfColdSpecies = gsub(' ','_', as.character(cold$V1)); length(ListOfColdSpecies)
ListOfTropicalSpecies = gsub(' ','_', as.character(trop$V1)); length(ListOfTropicalSpecies)
############ Syn mut
unzip("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt.zip")
SynNuc = read.table("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt", header = TRUE, sep='\t')
file.remove("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt")
### make ND6 complementary:
NotND6 = SynNuc[SynNuc$Gene != 'ND6',]
NotND6$FrA = NotND6$NeutralA / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
NotND6$FrT = NotND6$NeutralT / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
NotND6$FrG = NotND6$NeutralG / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
NotND6$FrC = NotND6$NeutralC / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
ND6 = SynNuc[SynNuc$Gene == 'ND6',]
ND6$FrA = ND6$NeutralT / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
ND6$FrT = ND6$NeutralA / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
ND6$FrG = ND6$NeutralC / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
ND6$FrC = ND6$NeutralG / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
SynNuc = rbind(NotND6,ND6)
VecOfTaxa = unique(SynNuc$Class)
########## compare nucleotide frequencies between hibernating and DT mammals
SynNuc = SynNuc[SynNuc$Class == 'Actinopterygii',]; length(unique(SynNuc$Species))
AGG = aggregate(list(SynNuc$FrA,SynNuc$FrT,SynNuc$FrG,SynNuc$FrC), by = list(SynNuc$Species), FUN = mean)
names(AGG)=c('Species','FrA','FrT','FrG','FrC')
summary(AGG[AGG$Species %in% ListOfColdSpecies,]$FrA)
summary(AGG[AGG$Species %in% ListOfTropicalSpecies,]$FrA)
boxplot(AGG[AGG$Species %in% ListOfColdSpecies,]$FrA,AGG[AGG$Species %in% ListOfTropicalSpecies,]$FrA, notch = TRUE, main = 'A', names = c('Cold','Tropical'))
AnAge = read.table("../../Body/1Raw/anage_data.txt", sep = '\t', header=TRUE)
AnAge$Species = paste(AnAge$Genus, AnAge$Species, sep = '_')
table(AnAge$Class)
AnAge$TempInCelcius = AnAge$Temperature..K. - 273.15 # T(°C) = T(K) - 273.15
MammalinBodyTemp = AnAge[AnAge$Class == 'Mammalia',]$TempInCelcius
############ lists of cold and tropical vertebrates
all = read.table("../../Body/1Raw/TemperatureAllChordataDataSet.txt", sep = '\t', header=TRUE)
table(all$Tax)
amph = all[all$Tax == "amphibia",]; amph$Species = gsub(' ','_', amph$Species); amph$Tax= gsub('amphibia','Amphibia', amph$Tax)
rept = all[all$Tax == "reptilia",]; rept$Species = gsub(' ','_', rept$Species); rept$Tax=gsub('r','R', rept$Tax)
fish = all[all$Tax == "fishes",]; fish$Species = gsub(' ','_', fish$Species); fish$Tax= gsub('fishes','Actinopterygii', fish$Tax)
birds = all[all$Tax == "birds",]; fish$Species = gsub(' ','_', fish$Species); fish$Tax= gsub('birds','Aves', fish$Tax)  #
summary(birds$T..oC.)  # ?????
boxplot(fish$T..oC.,amph$T..oC.,rept$T..oC.,MammalinBodyTemp,birds$T..oC., notch = TRUE, names = c('Actinopterygii','Amphibia','Reptilia','Mammalia','Aves'), outline = FALSE)  # dev.off()
## look for some eco correlations - BMR and body mass are strongly positive, others - nothing strong
plot(log2(fish$Body.mass..gram.),log2(fish$T..oC.)); cor.test(fish$Body.mass..gram.,fish$T..oC.) # nothing!!
plot(log2(fish$Basal.metabolic.rate..watts.),log2(fish$T..oC.)); cor.test(fish$Basal.metabolic.rate..watts.,fish$T..oC.) # nothing or positive trend!
plot(log2(fish$Basal.metabolic.rate..watts.),log2(fish$Body.mass..gram.)); cor.test(log2(fish$Basal.metabolic.rate..watts.),log2(fish$Body.mass..gram.)) # super positive
############ Syn mut
unzip("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt.zip")
SynNuc = read.table("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt", sep = '\t', header = TRUE) # , fill = TRUE
file.remove("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt")
NotND6 = SynNuc[SynNuc$Gene != 'ND6',]
NotND6$FrA = NotND6$NeutralA / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
NotND6$FrT = NotND6$NeutralT / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
NotND6$FrG = NotND6$NeutralG / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
NotND6$FrC = NotND6$NeutralC / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
ND6 = SynNuc[SynNuc$Gene == 'ND6',]
ND6$FrA = ND6$NeutralT / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
ND6$FrT = ND6$NeutralA / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
ND6$FrG = ND6$NeutralC / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
ND6$FrC = ND6$NeutralG / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
SynNuc = rbind(NotND6,ND6)
VecOfTaxa = unique(SynNuc$Class)
SynNucAMPH = SynNuc[SynNuc$Class == 'Amphibia',]; length(unique(SynNucAMPH$Species))
SynNucREPT = SynNuc[SynNuc$Class == 'Reptilia',]; length(unique(SynNucREPT$Species))
SynNucACTI = SynNuc[SynNuc$Class == 'Actinopterygii',]; length(unique(SynNucACTI$Species))
AGG = aggregate(list(SynNuc$FrA,SynNuc$FrT,SynNuc$FrG,SynNuc$FrC), by = list(SynNuc$Species), FUN = mean)
names(AGG)=c('Species','FrA','FrT','FrG','FrC')
View(AGG)
amph = merge(amph,AGG, by = 'Species'); # just 10
rept = merge(rept,AGG, by = 'Species'); # just 17
fish = merge(fish,AGG, by = 'Species'); # 86
######### try cor.test between G and temperature: amph - nothing; rept - nothing; fishes - T and G
cor.test(amph$T..oC.,amph$FrA, method = 'spearman')
c<-lm(fish$T..oC. ~ scale(fish$FrA) + scale(fish$FrT) + scale(fish$FrG)); summary(c); # similar negative coefficients -> either T is also partially driven by temperature, or it is indurectly linked through ecology.
tree <- read.tree("../../Body/1Raw/mtalign.aln.treefile.rooted")
library(ape)
install.packages("ape")
library(ape)
tree <- read.tree("../../Body/1Raw/mtalign.aln.treefile.rooted")
View(fish)
data = fish[which(as.character(fish$Species) %in% tree$tip.label),]
df_vec <- as.character(fish$Species)
tree_vec <- tree$tip.label
a <- setdiff(df_vec, tree_vec)
b <- setdiff(tree_vec, df_vec)
row.names(data) = data$Species
tree2 <- drop.tip(tree, b)
contrasts <- apply(data, 2, pic, tree2)
View(data)
contrasts <- apply(data[, -1], 2, pic, tree2)
nrow(data) == length(tree2$tip.label)
contrasts <- apply(data[, -c(1,5)], 2, pic, tree2)
TempData = data[, -c('Species', 'Tax')]
TempData = data[, -c(1, 5)]
contrasts <- apply(TempData, 2, pic, tree2)
names(contrasts) = names(TempData)
View(contrasts)
cor.test(contrasts$T..oC.,fish$FrA, method = 'spearman') # a bit positive:                                   # 0.2095367, 0.05283
contrasts <- as.data.frame(apply(TempData, 2, pic, tree2))
names(contrasts) = names(TempData)
cor.test(contrasts$T..oC.,fish$FrA, method = 'spearman') # a bit positive:                                   # 0.2095367, 0.05283
cor.test(contrasts$T..oC., contrasts$FrA, method = 'spearman') # a bit positive:                                   # 0.2095367, 0.05283
cor.test(contrasts$T..oC., contrasts$FrT, method = 'spearman') # a bit negative. Warm fishes live longer!?         # -0.2669443; 0.01297
cor.test(contrasts$T..oC., contrasts$FrA, method = 'spearman') # rho 0.3002067                                 # 0.2095367, 0.05283
cor.test(contrasts$T..oC., contrasts$FrT, method = 'spearman') # -0.2361942         # -0.2669443; 0.01297
cor.test(contrasts$T..oC., contrasts$FrG, method = 'spearman') # a bit negative. Effect of the temperature alone!? # -0.2170128; 0.04475
cor.test(contrasts$T..oC., contrasts$FrC, method = 'spearman') # nothing
c<-lm(contrasts$T..oC. ~ scale(contrasts$FrA) + scale(contrasts$FrT) + scale(contrasts$FrG)); summary(c); # similar negative coefficients -> either T is also partially driven by temperature, or it is indurectly linked through ecology.
b<-lm(contrasts$T..oC. ~ scale(contrasts$FrT) + scale(contrasts$FrG)); summary(b) # similar negative coefficients -> either T is also partially driven by temperature, or it is indurectly linked through ecology.
Mut = read.table("../../Body/1Raw/Rebolledo2014/S3.txt", header = TRUE)
rm(list=ls(all=TRUE))
Mut = read.table("../../Body/1Raw/Rebolledo2014/S3.txt", header = TRUE)
Age = read.table("../../Body/1Raw/Rebolledo2014/S1.txt", header = TRUE)
View(Mut)
Age = read.table("../../Body/1Raw/Rebolledo2014/S1.txt", sep = '\t', header = TRUE)
View(Age)
View(Age)
Age$MotherId = gsub("-bl",'',Age$BloodId)
View(Age)
View(Mut)
rm(list=ls(all=TRUE))
Mut = read.table("../../Body/1Raw/Rebolledo2014/S3.txt", header = TRUE)
Age = read.table("../../Body/1Raw/Rebolledo2014/S1.txt", sep = '\t', header = TRUE)
Age$Sample = gsub("-bl",'',Age$BloodId)
Mut = merge(Mut,Age, by = 'Sample')
View(Mut)
rm(list=ls(all=TRUE))
Mut = read.table("../../Body/1Raw/Rebolledo2014/S3.txt", header = TRUE)
Age = read.table("../../Body/1Raw/Rebolledo2014/S1.txt", sep = '\t', header = TRUE)
Age$Sample = gsub("-bl",'',Age$BloodId)
Mut = merge(Mut,Age, all.x = TRUE, by = 'Sample')
View(Mut)
rm(list=ls(all=TRUE))
Mut = read.table("../../Body/1Raw/Rebolledo2014/S3.txt", header = TRUE)
Age = read.table("../../Body/1Raw/Rebolledo2014/S1.txt", sep = '\t', header = TRUE)
Age$Sample = gsub("-bl",'',Age$BloodId)
Mut = merge(Mut,Age, by = 'Sample')
rm(list=ls(all=TRUE))
Mut = read.table("../../Body/1Raw/Rebolledo2014/S3.txt", header = TRUE)
Mut$FromTo = paste(Mut$MajorAllele,"_",Mut$MinorAllele,sep = '')
View(Mut)
View(Mut)
Mut$FromTo = paste(Mut$MajorAllele,"_",Mut$MinorAllele,sep = '')
Mut$PosFromTo = paste(Mut$Position,Mut$MajorAllele,">",Mut$MinorAllele,sep = '')
write.table(Mut$PosFromTo,"../../Body/2Derived/Humans.RebolledoAnalyses.ForAnnotation.txt", quote = FALSE, row.names = FALSE, col.names = FALSE)
Ann = read.table("../../Body/1Raw/Rebolledo2014/mseqdr_mvTool_annotation_vep_2019_2_5_15_25.csv", sep = ',', header = TRUE)
table(Ann$consequence_terms)
811/2439
3.6/0.32
11.25/3.6
2439/811
rm(list=ls(all=TRUE))
Mut = read.table("../../Body/1Raw/Rebolledo2014/S3.txt", header = TRUE)
View(Mut)
rm(list=ls(all=TRUE))
Mut = read.table("../../Body/1Raw/Rebolledo2014/S3.txt", header = TRUE)
Mut$FromTo = paste(Mut$MajorAllele,"_",Mut$MinorAllele,sep = '')
Mut$PosFromTo = paste(Mut$Position,Mut$MajorAllele,">",Mut$MinorAllele,sep = '')
write.table(Mut$PosFromTo,"../../Body/2Derived/Humans.RebolledoAnalyses.ForAnnotation.txt", quote = FALSE, row.names = FALSE, col.names = FALSE)
### write the file in order to annotate manually: go to https://mseqdr.org/mvtool.php, paste my variants and save file: "../../Body/1Raw/Rebolledo2014/mseqdr_mvTool_annotation_vep_2019_2_5_15_25.csv"
Ann = read.table("../../Body/1Raw/Rebolledo2014/mseqdr_mvTool_annotation_vep_2019_2_5_15_25.csv", sep = ',', header = TRUE)
table(Ann$consequence_terms)
#    -                   missense_variant non_coding_transcript_exon_variant                 synonymous_variant              upstream_gene_variant
#   47                                 27                                 15                                 19                                108
Ann = unique(Ann[,grep("Input|consequence_terms",colnames(Ann))]); names(Ann)=c('PosFromTo','Annotation')
Mut = merge(Mut,Ann, all.x = TRUE)
Age = read.table("../../Body/1Raw/Rebolledo2014/S1.txt", sep = '\t', header = TRUE)
Age$Sample = gsub("-bl",'',Age$BloodId)
Age$length = 0;
for (i in 1:nrow(Age)){
Age$length[i] = length(unlist(strsplit(Age$Sample[i],split='')))
}
AgeOfMothers = Age[Age$length <= 4,];  AgeOfMothers$AgeOfMothers = AgeOfMothers$AgeAtCollection; AgeOfMothers=AgeOfMothers[,c(4,6)]
AgeOfKids = Age[Age$length > 4,]; AgeOfKids$Sample = gsub("C1$|C2$|C3$|C4$|C5$",'',AgeOfKids$Sample)
AgeOfKids = AgeOfKids[AgeOfKids$Sample != 'M502G',]
AgeOfKids$AgeOfKids = AgeOfKids$AgeAtCollection; AgeOfKids=AgeOfKids[,c(4,6)]
Mut = merge(Mut,AgeOfMothers, by = 'Sample', all.x = TRUE)
Mut = merge(Mut,AgeOfKids, by = 'Sample', all.x = TRUE)
Mut$MotherMinusKid = Mut$AgeOfMothers - Mut$AgeOfKids
summary(Mut$MotherMinusKid)
table(Mut$FromTo)
# A_C A_G A_T C_T G_A T_C
#  1  34   1  14  19  31
table(Mut[Mut$FromTo == 'T_C',]$Category)
Child = Mut[Mut$Category == 'child',]
# Child = Child[Child$Annotation == 'synonymous_variant',] # !!!!!
# Child = Child[Child$Mitomap == 'annotated',] # !!!!!
table(Child$FromTo)
View(Child)
View(Child)
young=Child[Child$MotherMinusKid < median(Child$MotherMinusKid),]
old=Child[Child$MotherMinusKid >= median(Child$MotherMinusKid),]
View(old)
View(young)
View(old)
View(young)
View(old)
View(young)
View(young)
old$MotherMinusKid
range(old$MotherMinusKid)
range(young$MotherMinusKid)
young
nrow(young$FromTo)
nrow(young[young$FromTo == T_C,])
nrow(young[young$FromTo == "T_C",])
nrow(young[young$FromTo == "G_A",])
nrow(young[young$FromTo == "T_C",])+nrow(young[young$FromTo == "G_A",])
nrow(old[old$FromTo == "T_C",])+nrow(old[old$FromTo == "G_A",])
nrow(old[old$FromTo == "T_C",])
(old[old$FromTo == "G_A",])
nrow(old[old$FromTo == "G_A",])
propTC = nrow(young[young$FromTo == "T_C",])(nrow(young[young$FromTo == "T_C",])+nrow(young[young$FromTo == "G_A",]))
propTC = nrow(young[young$FromTo == "T_C",])/(nrow(young[young$FromTo == "T_C",])+nrow(young[young$FromTo == "G_A",]))
propGA = nrow(young[young$FromTo == "G_A",])/(nrow(young[young$FromTo == "T_C",])+nrow(young[young$FromTo == "G_A",]))
propTC
propGA
propTCo = nrow(old[old$FromTo == "T_C",])/(nrow(old[old$FromTo == "T_C",])+nrow(old[old$FromTo == "G_A",]))
propGAo = nrow(old[old$FromTo == "G_A",])/(nrow(old[old$FromTo == "T_C",])+nrow(old[old$FromTo == "G_A",]))
propTCo
subs = c("T>C","G>A","T>C","G>A")
age = c(">33", "<34", "<34",">33")
pr = c(propTCy, propGAo, propTCo, propGAy)
pl = data.frame (subs, age, pr)
pr = c(propTCy, propGAo, propTCo, propGAy)
propTCy = nrow(young[young$FromTo == "T_C",])/(nrow(young[young$FromTo == "T_C",])+nrow(young[young$FromTo == "G_A",]))
propGAy = nrow(young[young$FromTo == "G_A",])/(nrow(young[young$FromTo == "T_C",])+nrow(young[young$FromTo == "G_A",]))
propTCo = nrow(old[old$FromTo == "T_C",])/(nrow(old[old$FromTo == "T_C",])+nrow(old[old$FromTo == "G_A",]))
propGAo = nrow(old[old$FromTo == "G_A",])/(nrow(old[old$FromTo == "T_C",])+nrow(old[old$FromTo == "G_A",]))
subs = c("T>C","G>A","T>C","G>A")
age = c(">33", "<34", "<34",">33")
pr = c(propTCy, propGAo, propTCo, propGAy)
pl = data.frame (subs, age, pr)
pl
library(ggpubr)
ggbarplot(pl, "Transitions", "Proportion of Ts types",
fill = "subs", color = "subs", palette = "Paired",
label = TRUE, lab.col = "white", lab.pos = "in")
pl = data.frame(subs, age, pr)
ggbarplot(pl, "Transitions", "Proportion of Ts types",
fill = "subs", color = "subs", palette = "Paired",
label = TRUE, lab.col = "white", lab.pos = "in")
pl = data.frame(subs, age, pr, row.names = NULL)
pl
ggbarplot(pl, "Transitions", "Proportion of Ts types",
fill = "subs", color = "subs", palette = "Paired",
label = TRUE, lab.col = "white", lab.pos = "in")
pl
ggbarplot(pl, "Transitions", "Proportion of Ts types", fill = "subs", color = "subs", palette = "Paired", label = TRUE, lab.col = "white", lab.pos = "in")
rm(list=ls(all=TRUE))
Mut = read.table("../../Body/1Raw/Rebolledo2014/S3.txt", header = TRUE)
Mut$FromTo = paste(Mut$MajorAllele,"_",Mut$MinorAllele,sep = '')
Mut$PosFromTo = paste(Mut$Position,Mut$MajorAllele,">",Mut$MinorAllele,sep = '')
write.table(Mut$PosFromTo,"../../Body/2Derived/Humans.RebolledoAnalyses.ForAnnotation.txt", quote = FALSE, row.names = FALSE, col.names = FALSE)
### write the file in order to annotate manually: go to https://mseqdr.org/mvtool.php, paste my variants and save file: "../../Body/1Raw/Rebolledo2014/mseqdr_mvTool_annotation_vep_2019_2_5_15_25.csv"
Ann = read.table("../../Body/1Raw/Rebolledo2014/mseqdr_mvTool_annotation_vep_2019_2_5_15_25.csv", sep = ',', header = TRUE)
table(Ann$consequence_terms)
#    -                   missense_variant non_coding_transcript_exon_variant                 synonymous_variant              upstream_gene_variant
#   47                                 27                                 15                                 19                                108
Ann = unique(Ann[,grep("Input|consequence_terms",colnames(Ann))]); names(Ann)=c('PosFromTo','Annotation')
Mut = merge(Mut,Ann, all.x = TRUE)
Age = read.table("../../Body/1Raw/Rebolledo2014/S1.txt", sep = '\t', header = TRUE)
Age$Sample = gsub("-bl",'',Age$BloodId)
Age$length = 0;
for (i in 1:nrow(Age)){
Age$length[i] = length(unlist(strsplit(Age$Sample[i],split='')))
}
AgeOfMothers = Age[Age$length <= 4,];  AgeOfMothers$AgeOfMothers = AgeOfMothers$AgeAtCollection; AgeOfMothers=AgeOfMothers[,c(4,6)]
AgeOfKids = Age[Age$length > 4,]; AgeOfKids$Sample = gsub("C1$|C2$|C3$|C4$|C5$",'',AgeOfKids$Sample)
AgeOfKids = AgeOfKids[AgeOfKids$Sample != 'M502G',]
AgeOfKids$AgeOfKids = AgeOfKids$AgeAtCollection; AgeOfKids=AgeOfKids[,c(4,6)]
Mut = merge(Mut,AgeOfMothers, by = 'Sample', all.x = TRUE)
Mut = merge(Mut,AgeOfKids, by = 'Sample', all.x = TRUE)
Mut$MotherMinusKid = Mut$AgeOfMothers - Mut$AgeOfKids
summary(Mut$MotherMinusKid)
# Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's
# 21.00   26.70   32.40   31.13   34.00   39.00       3
table(Mut$FromTo)
# A_C A_G A_T C_T G_A T_C
#  1  34   1  14  19  31
table(Mut[Mut$FromTo == 'T_C',]$Category)
Child = Mut[Mut$Category == 'child',]
# Child = Child[Child$Annotation == 'synonymous_variant',] # !!!!!
# Child = Child[Child$Mitomap == 'annotated',] # !!!!!
table(Child$FromTo)
# A_G A_T C_T G_A T_C
# 6   1   1   4   4
## compare reproduction age for different mutation types: We can just report this result, no more!!!! Do it.
## Cite the main conclusion of the paper (reread it and say that T_C might be the strongest driver, because the maximal mean age)
## report the trend, not statistical result - it is difficult to get significant result with so low numbers.
mean(Child[Child$FromTo == 'T_C',]$MotherMinusKid); nrow(Child[Child$FromTo == 'T_C',]) # 34.075
mean(Child[Child$FromTo != 'T_C',]$MotherMinusKid); nrow(Child[Child$FromTo != 'T_C',])  # 32.066
mean(Child[Child$FromTo == 'A_G',]$MotherMinusKid) # 33.7
mean(Child[Child$FromTo == 'G_A',]$MotherMinusKid); nrow(Child[Child$FromTo == 'G_A',]) # 29.9
mean(Child[Child$FromTo == 'A_T',]$MotherMinusKid) # 37.9 - just one
mean(Child[Child$FromTo == 'C_T',]$MotherMinusKid) # 25.1 - just one
wilcox.test(Child[Child$FromTo == 'T_C',]$MotherMinusKid,Child[Child$FromTo == 'G_A',]$MotherMinusKid, alternative = 'greater')  # p = 0.0956
wilcox.test(Child[Child$FromTo == 'T_C',]$MotherMinusKid, Child[Child$FromTo != 'T_C',]$MotherMinusKid, alternative = 'greater') # p = 0.19
wilcox.test(Child[Child$FromTo == 'T_C' | Child$FromTo == 'A_G',]$MotherMinusKid, Child[Child$FromTo != 'T_C' || Child$FromTo != 'A_G',]$MotherMinusKid, alternative = 'greater') # p = 0.19
TCGA = Child[Child$FromTo == 'T_C' | Child$FromTo == 'G_A',]
summary(Child$MotherMinusKid) # 33.55
nrow(Child[Child$FromTo == 'T_C' & Child$MotherMinusKid < median(Child$MotherMinusKid),])/nrow(Child[Child$FromTo == 'G_A' & Child$MotherMinusKid < median(Child$MotherMinusKid),])   # 1 to 3
nrow(Child[Child$FromTo == 'T_C' & Child$MotherMinusKid >= median(Child$MotherMinusKid),])/nrow(Child[Child$FromTo == 'G_A' & Child$MotherMinusKid >= median(Child$MotherMinusKid),]) # 3 vs 1
## Take a subset of kids with several de novo mtDNA mutations and compare them according to their VAFs:
## somatic mutations in mothers versus their age - no difference:
SomGain = Mut[Mut$Category == 'somatic-gain' & !is.na(Mut$AgeOfMothers),]
mean(SomGain[SomGain$FromTo == 'T_C',]$AgeOfMothers); nrow(SomGain[SomGain$FromTo == 'T_C',]);
mean(SomGain[SomGain$FromTo != 'T_C',]$AgeOfMothers); nrow(SomGain[SomGain$FromTo != 'T_C',]);
#######two groups to compare
young=Child[Child$MotherMinusKid < median(Child$MotherMinusKid),] # under 33
old=Child[Child$MotherMinusKid >= median(Child$MotherMinusKid),]  # over 34
propTCy = nrow(young[young$FromTo == "T_C",])/(nrow(young[young$FromTo == "T_C",])+nrow(young[young$FromTo == "G_A",]))
propGAy = nrow(young[young$FromTo == "G_A",])/(nrow(young[young$FromTo == "T_C",])+nrow(young[young$FromTo == "G_A",]))
propTCo = nrow(old[old$FromTo == "T_C",])/(nrow(old[old$FromTo == "T_C",])+nrow(old[old$FromTo == "G_A",]))
propGAo = nrow(old[old$FromTo == "G_A",])/(nrow(old[old$FromTo == "T_C",])+nrow(old[old$FromTo == "G_A",]))
subs = c("T>C","G>A","T>C","G>A")
age = c(">33", "<34", "<34",">33")
pr = c(propTCy, propGAo, propTCo, propGAy)
ploot = data.frame(subs, age, pr, row.names = NULL)
ploot
