ALL_not_T_C$T_C = 0
ALL = rbind(ALL_T_C,ALL_not_T_C)
Risk =  aggregate(ALL$T_C, by = list(ALL$sample,ALL$CancerTissue,ALL$LifeTimeRisk), FUN = mean)
Risk =  aggregate(Risk$x, by = list(Risk$Group.2,Risk$Group.3), FUN = mean)
names(Risk)=c('CancerTissue','LifeTimeRisk','FrT_C')
cor.test(Risk$LifeTimeRisk,Risk$FrT_C, method = 'spearman') # nonsign positive Try T_C/G_A
Risk =  aggregate(ALL$T_C, by = list(ALL$CancerTissue,ALL$LifeTimeRisk), FUN = mean)
names(Risk)=c('CancerTissue','LifeTimeRisk','FrT_C')
cor.test(Risk$LifeTimeRisk,Risk$FrT_C, method = 'spearman') # nonsign positive Try T_C/G_A
ALL_T_C = ALL[ALL$Subs == 'T_C',]  # 936
ALL_T_C$T_C = 1
ALL_not_T_C = ALL[!ALL$Subs == 'T_C',]  # 2412
ALL_not_T_C$T_C = 0
ALL = rbind(ALL_T_C,ALL_not_T_C)
### TEST 0: lifetyme risk and Ts/Tv
Risk =  aggregate(ALL$T_C, by = list(ALL$CancerTissue,ALL$LifeTimeRisk), FUN = mean)
names(Risk)=c('CancerTissue','LifeTimeRisk','FrT_C')
cor.test(Risk$LifeTimeRisk,Risk$FrT_C, method = 'spearman') # nonsign positive Try T_C/G_A
Risk =  aggregate(ALL$T_C, by = list(ALL$CancerTissue,ALL$LifeTimeRisk), FUN = median)
names(Risk)=c('CancerTissue','LifeTimeRisk','FrT_C')
cor.test(Risk$LifeTimeRisk,Risk$FrT_C, method = 'spearman') # nonsign positive Try T_C/G_A
Risk =  aggregate(ALL$T_C, by = list(ALL$CancerTissue,ALL$LifeTimeRisk), FUN = median)
View(Risk)
Risk =  aggregate(ALL$T_C, by = list(ALL$sample,ALL$CancerTissue,ALL$LifeTimeRisk), FUN = mean)
Risk =  aggregate(Risk$x, by = list(Risk$Group.2,Risk$Group.3), FUN = median)
names(Risk)=c('CancerTissue','LifeTimeRisk','FrT_C')
cor.test(Risk$LifeTimeRisk,Risk$FrT_C, method = 'spearman') # nonsign positive Try T_C/G_A
CancerVec = unique(ALL$CancerTissue)
CancerVec
i = 1
CancerVec[i]
TEMP = ALL[ALL$CancerTissue == CancerVec[i],]
TC_GA = nrow(TEMP[TEMP$Subs == 'T_C',]) / nrow(TEMP[TEMP$Subs == 'G_A'],)
TC_GA = nrow(TEMP[TEMP$Subs == 'T_C',]) / nrow(TEMP[TEMP$Subs == 'G_A',])
TC_GA
Final = c()
### TEST 0: lifetyme risk and Ts/Tv
Final = c()
CancerVec = unique(ALL$CancerTissue)
for (i in 1:length(CancerVec))
{ # i = 1
TEMP = ALL[ALL$CancerTissue == CancerVec[i],]
TC_GA = nrow(TEMP[TEMP$Subs == 'T_C',]) / nrow(TEMP[TEMP$Subs == 'G_A',])
OneLine = c(CancerVec[i],TC_GA)
Final = rbind(Final,OneLine)
}
Final = data.frame(Final)
View(Final)
CancerVec[i]
Final = c()
CancerVec = unique(ALL$CancerTissue)
for (i in 1:length(CancerVec))
{ # i = 1
TEMP = ALL[ALL$CancerTissue == CancerVec[i],]
TC_GA = nrow(TEMP[TEMP$Subs == 'T_C',]) / nrow(TEMP[TEMP$Subs == 'G_A',])
OneLine = c(as.character(CancerVec[i]),TC_GA)
Final = rbind(Final,OneLine)
}
Final = data.frame(Final)
View(Final)
names(Final)=c('CancerTissue','TC_GA')
Risk =  aggregate(ALL$T_C, by = list(ALL$sample,ALL$CancerTissue,ALL$LifeTimeRisk), FUN = mean)
Risk =  aggregate(Risk$x, by = list(Risk$Group.2,Risk$Group.3), FUN = median)
names(Risk)=c('CancerTissue','LifeTimeRisk','FrT_C')
cor.test(Risk$LifeTimeRisk,Risk$FrT_C, method = 'spearman') # nonsign positive Try T_C/G_A
Risk = merge(Risk, Final, by = 'CancerTissue')
cor.test(Risk$LifeTimeRisk,Risk$TC_GA, method = 'spearman') # nonsign positive Try T_C/G_A
View(Risk)
Final$TC_GA = as.numeric(Final$TC_GA)
### TEST 0: lifetyme risk and Ts/Tv
Final = c()
CancerVec = unique(ALL$CancerTissue)
for (i in 1:length(CancerVec))
{ # i = 1
TEMP = ALL[ALL$CancerTissue == CancerVec[i],]
TC_GA = nrow(TEMP[TEMP$Subs == 'T_C',]) / nrow(TEMP[TEMP$Subs == 'G_A',])
OneLine = c(as.character(CancerVec[i]),TC_GA)
Final = rbind(Final,OneLine)
}
Final = data.frame(Final)
names(Final)=c('CancerTissue','TC_GA')
Final$TC_GA = as.numeric(Final$TC_GA)
Risk =  aggregate(ALL$T_C, by = list(ALL$sample,ALL$CancerTissue,ALL$LifeTimeRisk), FUN = mean)
Risk =  aggregate(Risk$x, by = list(Risk$Group.2,Risk$Group.3), FUN = median)
names(Risk)=c('CancerTissue','LifeTimeRisk','FrT_C')
cor.test(Risk$LifeTimeRisk,Risk$FrT_C, method = 'spearman') # nonsign positive Try T_C/G_A
Risk = merge(Risk, Final, by = 'CancerTissue')
cor.test(Risk$LifeTimeRisk,Risk$TC_GA, method = 'spearman') # nonsign positive Try T_C/G_A
### TEST 0: lifetyme risk and Ts/Tv
Final = c()
CancerVec = unique(ALL$CancerTissue)
for (i in 1:length(CancerVec))
{ # i = 1
TEMP = ALL[ALL$CancerTissue == CancerVec[i],]
TC_GA = nrow(TEMP[TEMP$Subs == 'T_C',]) / nrow(TEMP[TEMP$Subs == 'G_A',])
OneLine = c(as.character(CancerVec[i]),TC_GA)
Final = rbind(Final,OneLine)
}
Final = data.frame(Final)
names(Final)=c('CancerTissue','TC_GA')
Final$TC_GA = as.numeric(as.character(Final$TC_GA))
Risk =  aggregate(ALL$T_C, by = list(ALL$sample,ALL$CancerTissue,ALL$LifeTimeRisk), FUN = mean)
Risk =  aggregate(Risk$x, by = list(Risk$Group.2,Risk$Group.3), FUN = median)
names(Risk)=c('CancerTissue','LifeTimeRisk','FrT_C')
cor.test(Risk$LifeTimeRisk,Risk$FrT_C, method = 'spearman') # nonsign positive Try T_C/G_A
Risk = merge(Risk, Final, by = 'CancerTissue')
cor.test(Risk$LifeTimeRisk,Risk$TC_GA, method = 'spearman') # nonsign positive Try T_C/G_A
cor.test(Risk$FrT_C,Risk$TC_GA, method = 'spearman') # nonsign positive Try T_C/G_A
unique(ALL$CancerTissue)
0.067/360
0.067*360
1/15
0.67 / 360
0.67*360
1/15
0.067*360
0.067/360
0.067*360
15*360
360 / 0.067
360/17
360/21.5
360/0.9125
360/0.07
360/0.087
CancerTissue = c('Bladder','Bone/SoftTissue','Breast','Biliary','Cervix','Lymphoid','Myeloid','Colon/Rectum','Prostate','Esophagus','Stomach','CNS','Head/Neck','Kidney','Liver','Lung','Ovary','Pancreas','Skin','Thyroid','Uterus')
TurnOverDays = c(200,5373,84.5,NA,NA,30,30,5,120,11,NA,10000,16,NA,400,5143,11000,360,147,4138,4)
Turn = data.frame(CancerTissue,TurnOverDays)
Turn
CancerTissue = c('Bladder','Bone/SoftTissue','Breast','Biliary','Cervix','Lymphoid','Myeloid','Colon/Rectum','Prostate','Esophagus','Stomach','CNS','Head/Neck','Kidney','Liver','Lung','Ovary','Pancreas','Skin','Thyroid','Uterus')
TurnOverDays = c(200,5373,84.5,200,6,30,30,5,120,11,5.5,10000,16,1000,400,5143,11000,360,147,4138,4)
Turn = data.frame(CancerTissue,TurnOverDays)
Turn
CancerTissue
TurnOverDays = c(200,5373,84.5,200,6,30,30,5,120,11,5.5,10000,16,1000,400,5143,11000,360,147,4138,4)
TurnOverDays
rm(list=ls(all=TRUE))
############ read aminoacid and codon sequences
unzip("../../Body/1Raw/DEG_GlycOxph_ALL.zip", exdir = "../../Body/1Raw/")
Tr = read.table("../../Body/1Raw/DEG_GlycOxph_ALL.csv", header = TRUE, sep = '\t')
Tr = read.table("../../Body/1Raw/DEG_GlycOxph_ALL.csv", header = TRUE, sep = ',')
Tr = read.table("../../Body/1Raw/DEG_GlycOxph_ALL.csv", header = TRUE, sep = ';')
####
rm(list=ls(all=TRUE))
############ read aminoacid and codon sequences
unzip("../../Body/1Raw/DEG_GlycOxph_ALL.zip", exdir = "../../Body/1Raw/")
Tr = read.table("../../Body/1Raw/DEG_GlycOxph_ALL.csv", header = TRUE, sep = ';')
if (file.exists("../../Body/1Raw/DEG_GlycOxph_ALL.csv")) file.remove("../../Body/1Raw/DEG_GlycOxph_ALL.csv")
View(Tr)
Tr = Tr[Tr$Gene %in% GlycVec,]
GlycVec = c('ACSS1','ACSS2','ADH1A','ADH1B','ADH1C','ADH4','ADH5','ADH6','ADH7','ADPGK','AKR1A1','ALDH1A3','ALDH1B1','ALDH2','ALDH3A1','ALDH3A2','ALDH3B1','ALDH3B2','ALDH7A1','ALDH9A1','ALDOA','ALDOB','ALDOC','BPGM','DLAT','DLD','ENO1','ENO2','ENO3','FBP1','FBP2','G6PC','G6PC2','GALM','GAPDH','GAPDHS','GCK','GPI','HK1','HK2','HK3','HKDC1','LDHA','LDHAL6A','LDHAL6B','LDHB','LDHC','PANK1','PCK1','PCK2','PDHA1','PDHA2','PDHB','PFKFB1','PFKFB2','PFKFB3','PFKFB4','PFKL','PFKM','PFKP','PGAM1','PGAM2','PGAM4','PGK1','PGK2','PGM1','PGM2','PKLR','PKM','SLC2A2','TPI1')
Tr = Tr[Tr$Gene %in% GlycVec,]
GAPDH = Tr[Tr$Gene == 'GAPDH',]
View(GAPDH)
PKM   = Tr[Tr$Gene == 'PKM',]
PKM   = Tr[Tr$Gene == 'PKM',]
ENO   = Tr[Tr$Gene %in% c('ENO1','ENO2','ENO3'),]
View(ENO)
0.09064211*9.201820e-05
ENO = aggregate(ENO$Score, by = list(ENO$Cancer), FUN = sum)
View(ENO)
View(GAPDH)
GAPDH = Tr[Tr$Gene == 'GAPDH',];
GAPDH = aggregate(GAPDH$Score, by = list(GAPDH$Cancer), FUN = sum); names(GAPDH)=c('Cancer','GAPDH')
View(GAPDH)
View(ENO)
Glyc = merge(GAPDH,ENO)
GAPDH = Tr[Tr$Gene == 'GAPDH',];
GAPDH = aggregate(GAPDH$Score, by = list(GAPDH$Cancer), FUN = sum); names(GAPDH)=c('Cancer','GAPDH')
ENO   = Tr[Tr$Gene %in% c('ENO1','ENO2','ENO3'),]
ENO = aggregate(ENO$Score, by = list(ENO$Cancer), FUN = sum); names(ENO)=c('Cancer','ENO')
Glyc = merge(GAPDH,ENO)
View(Glyc)
Glyc = merge(GAPDH,ENO, all = TRUE)
View(Glyc)
cor.test(Glyc$GAPDH,Glyc$ENO, method = 'spearman')
PFK  = Tr[Tr$Gene %in% c('PFKFB1','PFKFB2','PFKFB3','PFKFB4','PFKL','PFKM','PFKP'),]
GAPDH = Tr[Tr$Gene == 'GAPDH',];
GAPDH = aggregate(GAPDH$Score, by = list(GAPDH$Cancer), FUN = mean); names(GAPDH)=c('Cancer','GAPDH')
ENO   = Tr[Tr$Gene %in% c('ENO1','ENO2','ENO3'),]
ENO   = aggregate(ENO$Score, by = list(ENO$Cancer), FUN = mean); names(ENO)=c('Cancer','ENO')
Glyc = merge(GAPDH,ENO, all = TRUE)
cor.test(Glyc$GAPDH,Glyc$ENO, method = 'spearman')
PFK  = Tr[Tr$Gene %in% c('PFKFB1','PFKFB2','PFKFB3','PFKFB4','PFKL','PFKM','PFKP'),]
PFK   = aggregate(PFK$Score, by = list(PFK$Cancer), FUN = mean); names(PFK)=c('Cancer','PFK')
Glyc = merge(Glyc,PFK, all = TRUE)
cor.test(Glyc$GAPDH,Glyc$PFK, method = 'spearman')
cor.test(Glyc$ENO,Glyc$PFK, method = 'spearman')
PFK  = Tr[Tr$Gene %in% c('PFKL','PFKM','PFKP'),]
PFK   = aggregate(PFK$Score, by = list(PFK$Cancer), FUN = mean); names(PFK)=c('Cancer','PFK')
Glyc = merge(GAPDH,ENO, all = TRUE)
Glyc = merge(Glyc,PFK, all = TRUE)
cor.test(Glyc$GAPDH,Glyc$ENO, method = 'spearman')
cor.test(Glyc$ENO,Glyc$PFK, method = 'spearman') # a bit positive
cor.test(Glyc$GAPDH,Glyc$PFK, method = 'spearman') # a bit positive
cor.test(Glyc$ENO,Glyc$PFK, method = 'spearman') # a bit positive
PGM  = Tr[Tr$Gene %in% c('PGM1','PGM2'),]
PGM   = aggregate(PGM$Score, by = list(PGM$Cancer), FUN = mean); names(PGM)=c('Cancer','PGM')
Glyc = merge(Glyc,PGM, all = TRUE)
cor.test(Glyc$GAPDH,Glyc$PGM, method = 'spearman')
cor.test(Glyc$ENO,Glyc$PGM, method = 'spearman')
cor.test(Glyc$GAPDH,Glyc$PGM, method = 'spearman')
HK    = Tr[Tr$Gene %in% c('HK1','HK2','HK3','HKDC1'),] # 'HK1','HK2','HK3','HKDC1'
HK    = Tr[Tr$Gene %in% c('HK1','HK2','HK3','HKDC1'),] # 'HK1','HK2','HK3','HKDC1'
HK   = aggregate(HK$Score, by = list(HK$Cancer), FUN = mean); names(HK)=c('Cancer','PGM')
HK    = Tr[Tr$Gene %in% c('HK1','HK2','HK3','HKDC1'),] # 'HK1','HK2','HK3','HKDC1'
View(HK)
HK   = aggregate(HK$Score, by = list(HK$Cancer), FUN = mean); names(HK)=c('Cancer','PGM')
Glyc = merge(GAPDH,ENO, all = TRUE)
Glyc = merge(Glyc,PFK, all = TRUE)
Glyc = merge(Glyc,PGM, all = TRUE)
Glyc = merge(Glyc,HK, all = TRUE)
cor.test(Glyc$GAPDH,Glyc$HK, method = 'spearman')
Glyc = merge(GAPDH,ENO, all = TRUE)
Glyc = merge(Glyc,PFK, all = TRUE)
Glyc = merge(Glyc,PGM, all = TRUE)
Glyc = merge(Glyc,HK, all = TRUE)
cor.test(Glyc$GAPDH,Glyc$HK, method = 'spearman')
HK    = Tr[Tr$Gene %in% c('HK1','HK2','HK3','HKDC1'),] # 'HK1','HK2','HK3','HKDC1'
HK   = aggregate(HK$Score, by = list(HK$Cancer), FUN = mean); names(HK)=c('Cancer','HK')
Glyc = merge(GAPDH,ENO, all = TRUE)
Glyc = merge(Glyc,PFK, all = TRUE)
Glyc = merge(Glyc,PGM, all = TRUE)
Glyc = merge(Glyc,HK, all = TRUE)
cor.test(Glyc$GAPDH,Glyc$ENO, method = 'spearman')
cor.test(Glyc$GAPDH,Glyc$HK, method = 'spearman')
HK    = Tr[Tr$Gene %in% c('HK1','HK2','HK3'),] # 'HK1','HK2','HK3','HKDC1'
HK   = aggregate(HK$Score, by = list(HK$Cancer), FUN = mean); names(HK)=c('Cancer','HK')
Glyc = merge(GAPDH,ENO, all = TRUE)
Glyc = merge(Glyc,PFK, all = TRUE)
Glyc = merge(Glyc,PGM, all = TRUE)
Glyc = merge(Glyc,HK, all = TRUE)
cor.test(Glyc$GAPDH,Glyc$HK, method = 'spearman')
cor.test(Glyc$ENO,Glyc$HK, method = 'spearman')
cor.test(Glyc$GAPDH,Glyc$ENO, method = 'spearman')
cor.test(Glyc$GAPDH,Glyc$PFK, method = 'spearman')
cor.test(Glyc$GAPDH,Glyc$PGM, method = 'spearman')
cor.test(Glyc$GAPDH,Glyc$HK, method = 'spearman')
View(Glyc)
View(Tr)
GAPDH = Tr[Tr$Gene == 'GAPDH',];
GAPDH = aggregate(GAPDH$logFC, by = list(GAPDH$Cancer), FUN = mean); names(GAPDH)=c('Cancer','GAPDH')
ENO   = Tr[Tr$Gene %in% c('ENO1','ENO2','ENO3'),]
ENO   = aggregate(ENO$logFC, by = list(ENO$Cancer), FUN = mean); names(ENO)=c('Cancer','ENO')
PFK  = Tr[Tr$Gene %in% c('PFKL','PFKM','PFKP'),]
PFK   = aggregate(PFK$logFC, by = list(PFK$Cancer), FUN = mean); names(PFK)=c('Cancer','PFK')
PGM  = Tr[Tr$Gene %in% c('PGM1','PGM2'),]
PGM   = aggregate(PGM$logFC, by = list(PGM$Cancer), FUN = mean); names(PGM)=c('Cancer','PGM')
HK    = Tr[Tr$Gene %in% c('HK1','HK2','HK3'),] # 'HK1','HK2','HK3','HKDC1'
HK   = aggregate(HK$logFC, by = list(HK$Cancer), FUN = mean); names(HK)=c('Cancer','HK')
Glyc = merge(GAPDH,ENO, all = TRUE)
Glyc = merge(Glyc,PFK, all = TRUE)
Glyc = merge(Glyc,PGM, all = TRUE)
Glyc = merge(Glyc,HK, all = TRUE)
cor.test(Glyc$GAPDH,Glyc$ENO, method = 'spearman')
cor.test(Glyc$GAPDH,Glyc$PFK, method = 'spearman')
cor.test(Glyc$GAPDH,Glyc$PGM, method = 'spearman')
cor.test(Glyc$GAPDH,Glyc$HK, method = 'spearman')
cor.test(Glyc$GAPDH,Glyc$PGM, method = 'spearman')
###################################
######
###################################
####
rm(list=ls(all=TRUE))
############ read cancer fold changes
unzip("../../Body/1Raw/DEG_GlycOxph_ALL.zip", exdir = "../../Body/1Raw/")
Tr = read.table("../../Body/1Raw/DEG_GlycOxph_ALL.csv", header = TRUE, sep = ';')
if (file.exists("../../Body/1Raw/DEG_GlycOxph_ALL.csv")) file.remove("../../Body/1Raw/DEG_GlycOxph_ALL.csv")
# list of genes involved in Glycolysis (KEGG) from Suppl table 2 (NatureCommunication: Pan-cancer analysis of transcriptional metabolic dysregulation using The Cancer Genome Atlas)
GlycVec = c('ACSS1','ACSS2','ADH1A','ADH1B','ADH1C','ADH4','ADH5','ADH6','ADH7','ADPGK','AKR1A1','ALDH1A3','ALDH1B1','ALDH2','ALDH3A1','ALDH3A2','ALDH3B1','ALDH3B2','ALDH7A1','ALDH9A1','ALDOA','ALDOB','ALDOC','BPGM','DLAT','DLD','ENO1','ENO2','ENO3','FBP1','FBP2','G6PC','G6PC2','GALM','GAPDH','GAPDHS','GCK','GPI','HK1','HK2','HK3','HKDC1','LDHA','LDHAL6A','LDHAL6B','LDHB','LDHC','PANK1','PCK1','PCK2','PDHA1','PDHA2','PDHB','PFKFB1','PFKFB2','PFKFB3','PFKFB4','PFKL','PFKM','PFKP','PGAM1','PGAM2','PGAM4','PGK1','PGK2','PGM1','PGM2','PKLR','PKM','SLC2A2','TPI1')
Tr = Tr[Tr$Gene %in% GlycVec,]
# lets start from well known markers of glycolysis: GAPDH, PKM,  ENO, PFK, PGM, HK, PDC
# GAPDH: Glyceraldehyde 3-phosphate dehydrogenase. Is an enzyme of ~37kDa that catalyzes the sixth step of glycolysis and thus serves to break down glucose for energy and carbon molecules. In addition to this long established metabolic function, GAPDH has recently been implicated in several non-metabolic processes, including transcription activation, initiation of apoptosis,[5] ER to Golgi vesicle shuttling, and fast axonal, or axoplasmic transport.[6] In sperm, a testis-specific isoenzyme GAPDHS is expressed.
# PKM: Pyruvate Kinase M1/2. This gene encodes a protein involved in glycolysis. The encoded protein is a pyruvate kinase that catalyzes the transfer of a phosphoryl group from phosphoenolpyruvate to ADP, generating ATP and pyruvate. This protein has been shown to interact with thyroid hormone and may mediate cellular metabolic effects induced by thyroid hormones.
# ENO: enolase (there are three enolase isoenzymes in mammals). They are glycolytic enzymes.
# PFK: Phosphofructokinase (M - muscle; P = platelet, L = liver; PFKL','PFKM','PFKP'); Three phosphofructokinase isozymes exist in humans: muscle, liver and platelet. These isozymes function as subunits of the mammalian tetramer phosphofructokinase, which catalyzes the phosphorylation of fructose-6-phosphate to fructose-1,6-bisphosphate
# PGM: (1,2) Phosphoglucomutase. There are several PGM isozymes, which are encoded by different genes and catalyze the transfer of phosphate between the 1 and 6 positions of glucose
# HK(1,2,3): Hexokinases phosphorylate glucose to produce glucose-6-phosphate, the first step in most glucose metabolism pathways
# PFKFB(1,2,3,4): 6-Phosphofructo-2-Kinase/Fructose-2,6-Biphosphatase. These proteins belong to a family of bifunctional proteins that are involved in both the synthesis and degradation of fructose-2,6-bisphosphate, a regulatory molecule that controls glycolysis in eukaryotes
# http://www.ijcep.com/files/ijcep0063886.pdf
## aggregate Score or logFC. Score works better!
GAPDH = Tr[Tr$Gene == 'GAPDH',];
GAPDH = aggregate(GAPDH$Score, by = list(GAPDH$Cancer), FUN = mean); names(GAPDH)=c('Cancer','GAPDH')
ENO   = Tr[Tr$Gene %in% c('ENO1','ENO2','ENO3'),]
ENO   = aggregate(ENO$Score, by = list(ENO$Cancer), FUN = mean); names(ENO)=c('Cancer','ENO')
PFK  = Tr[Tr$Gene %in% c('PFKL','PFKM','PFKP'),]
PFK   = aggregate(PFK$Score, by = list(PFK$Cancer), FUN = mean); names(PFK)=c('Cancer','PFK')
PGM  = Tr[Tr$Gene %in% c('PGM1','PGM2'),]
PGM   = aggregate(PGM$Score, by = list(PGM$Cancer), FUN = mean); names(PGM)=c('Cancer','PGM')
HK    = Tr[Tr$Gene %in% c('HK1','HK2','HK3'),] # 'HK1','HK2','HK3','HKDC1'
HK   = aggregate(HK$Score, by = list(HK$Cancer), FUN = mean); names(HK)=c('Cancer','HK')
Glyc = merge(GAPDH,ENO, all = TRUE)
Glyc = merge(Glyc,PFK, all = TRUE)
Glyc = merge(Glyc,PGM, all = TRUE)
Glyc = merge(Glyc,HK, all = TRUE)
cor.test(Glyc$GAPDH,Glyc$ENO, method = 'spearman')
cor.test(Glyc$GAPDH,Glyc$PFK, method = 'spearman')
cor.test(Glyc$GAPDH,Glyc$PGM, method = 'spearman')
cor.test(Glyc$GAPDH,Glyc$HK, method = 'spearman')
cor.test(Glyc$GAPDH,Glyc$ENO, method = 'spearman')
cor.test(Glyc$GAPDH,Glyc$PFK, method = 'spearman')
cor.test(Glyc$GAPDH,Glyc$PGM, method = 'spearman')
cor.test(Glyc$GAPDH,Glyc$HK, method = 'spearman')
View(Glyc)
rm(list=ls(all=TRUE))
############ read cancer fold changes
unzip("../../Body/1Raw/DEG_GlycOxph_ALL.zip", exdir = "../../Body/1Raw/")
Tr = read.table("../../Body/1Raw/DEG_GlycOxph_ALL.csv", header = TRUE, sep = ';')
if (file.exists("../../Body/1Raw/DEG_GlycOxph_ALL.csv")) file.remove("../../Body/1Raw/DEG_GlycOxph_ALL.csv")
GlycVec = c('ACSS1','ACSS2','ADH1A','ADH1B','ADH1C','ADH4','ADH5','ADH6','ADH7','ADPGK','AKR1A1','ALDH1A3','ALDH1B1','ALDH2','ALDH3A1','ALDH3A2','ALDH3B1','ALDH3B2','ALDH7A1','ALDH9A1','ALDOA','ALDOB','ALDOC','BPGM','DLAT','DLD','ENO1','ENO2','ENO3','FBP1','FBP2','G6PC','G6PC2','GALM','GAPDH','GAPDHS','GCK','GPI','HK1','HK2','HK3','HKDC1','LDHA','LDHAL6A','LDHAL6B','LDHB','LDHC','PANK1','PCK1','PCK2','PDHA1','PDHA2','PDHB','PFKFB1','PFKFB2','PFKFB3','PFKFB4','PFKL','PFKM','PFKP','PGAM1','PGAM2','PGAM4','PGK1','PGK2','PGM1','PGM2','PKLR','PKM','SLC2A2','TPI1')
Tr = Tr[Tr$Gene %in% GlycVec,]
AGG = aggregate(-log10(Tr$adj.P.Val), by = list(Tr$Gene), FUN = median)
AGG = aggregate(-log10(Tr$adj.P.Val), by = list(Tr$Gene), FUN = median); names(AGG)=c('Gene','MedianLogP')
AGG = AGG[order(AGG$MedianLogP),]
View(AGG)
View(AGG)
###################################
######
###################################
####
rm(list=ls(all=TRUE))
############ read cancer fold changes
unzip("../../Body/1Raw/DEG_GlycOxph_ALL.zip", exdir = "../../Body/1Raw/")
Tr = read.table("../../Body/1Raw/DEG_GlycOxph_ALL.csv", header = TRUE, sep = ';')
if (file.exists("../../Body/1Raw/DEG_GlycOxph_ALL.csv")) file.remove("../../Body/1Raw/DEG_GlycOxph_ALL.csv")
# list of genes involved in Glycolysis (KEGG) from Suppl table 2 (NatureCommunication: Pan-cancer analysis of transcriptional metabolic dysregulation using The Cancer Genome Atlas)
GlycVec = c('ACSS1','ACSS2','ADH1A','ADH1B','ADH1C','ADH4','ADH5','ADH6','ADH7','ADPGK','AKR1A1','ALDH1A3','ALDH1B1','ALDH2','ALDH3A1','ALDH3A2','ALDH3B1','ALDH3B2','ALDH7A1','ALDH9A1','ALDOA','ALDOB','ALDOC','BPGM','DLAT','DLD','ENO1','ENO2','ENO3','FBP1','FBP2','G6PC','G6PC2','GALM','GAPDH','GAPDHS','GCK','GPI','HK1','HK2','HK3','HKDC1','LDHA','LDHAL6A','LDHAL6B','LDHB','LDHC','PANK1','PCK1','PCK2','PDHA1','PDHA2','PDHB','PFKFB1','PFKFB2','PFKFB3','PFKFB4','PFKL','PFKM','PFKP','PGAM1','PGAM2','PGAM4','PGK1','PGK2','PGM1','PGM2','PKLR','PKM','SLC2A2','TPI1')
Tr = Tr[Tr$Gene %in% GlycVec,]
# find genes with minimal p values -> ADH and ALD
AGG = aggregate(-log10(Tr$adj.P.Val), by = list(Tr$Gene), FUN = median); names(AGG)=c('Gene','MedianLogP'); AGG = AGG[order(AGG$MedianLogP),]
# lets start from well known markers of glycolysis: GAPDH, PKM,  ENO, PFK, PGM, HK, PDC
# GAPDH: Glyceraldehyde 3-phosphate dehydrogenase. Is an enzyme of ~37kDa that catalyzes the sixth step of glycolysis and thus serves to break down glucose for energy and carbon molecules. In addition to this long established metabolic function, GAPDH has recently been implicated in several non-metabolic processes, including transcription activation, initiation of apoptosis,[5] ER to Golgi vesicle shuttling, and fast axonal, or axoplasmic transport.[6] In sperm, a testis-specific isoenzyme GAPDHS is expressed.
# PKM: Pyruvate Kinase M1/2. This gene encodes a protein involved in glycolysis. The encoded protein is a pyruvate kinase that catalyzes the transfer of a phosphoryl group from phosphoenolpyruvate to ADP, generating ATP and pyruvate. This protein has been shown to interact with thyroid hormone and may mediate cellular metabolic effects induced by thyroid hormones.
# ENO: enolase (there are three enolase isoenzymes in mammals). They are glycolytic enzymes.
# PFK: Phosphofructokinase (M - muscle; P = platelet, L = liver; PFKL','PFKM','PFKP'); Three phosphofructokinase isozymes exist in humans: muscle, liver and platelet. These isozymes function as subunits of the mammalian tetramer phosphofructokinase, which catalyzes the phosphorylation of fructose-6-phosphate to fructose-1,6-bisphosphate
# PGM: (1,2) Phosphoglucomutase. There are several PGM isozymes, which are encoded by different genes and catalyze the transfer of phosphate between the 1 and 6 positions of glucose
# HK(1,2,3): Hexokinases phosphorylate glucose to produce glucose-6-phosphate, the first step in most glucose metabolism pathways
# PFKFB(1,2,3,4): 6-Phosphofructo-2-Kinase/Fructose-2,6-Biphosphatase. These proteins belong to a family of bifunctional proteins that are involved in both the synthesis and degradation of fructose-2,6-bisphosphate, a regulatory molecule that controls glycolysis in eukaryotes
# http://www.ijcep.com/files/ijcep0063886.pdf
## aggregate Score or logFC. Score works better!
GAPDH = Tr[Tr$Gene == 'GAPDH',];
GAPDH = aggregate(GAPDH$Score, by = list(GAPDH$Cancer), FUN = mean); names(GAPDH)=c('Cancer','GAPDH')
ENO   = Tr[Tr$Gene %in% c('ENO1','ENO2','ENO3'),]
ENO   = aggregate(ENO$Score, by = list(ENO$Cancer), FUN = mean); names(ENO)=c('Cancer','ENO')
PFK  = Tr[Tr$Gene %in% c('PFKL','PFKM','PFKP'),]
PFK   = aggregate(PFK$Score, by = list(PFK$Cancer), FUN = mean); names(PFK)=c('Cancer','PFK')
PGM  = Tr[Tr$Gene %in% c('PGM1','PGM2'),]
PGM   = aggregate(PGM$Score, by = list(PGM$Cancer), FUN = mean); names(PGM)=c('Cancer','PGM')
HK    = Tr[Tr$Gene %in% c('HK1','HK2','HK3'),] # 'HK1','HK2','HK3','HKDC1'
HK   = aggregate(HK$Score, by = list(HK$Cancer), FUN = mean); names(HK)=c('Cancer','HK')
Glyc = merge(GAPDH,ENO, all = TRUE)
Glyc = merge(Glyc,PFK, all = TRUE)
Glyc = merge(Glyc,PGM, all = TRUE)
Glyc = merge(Glyc,HK, all = TRUE)
cor.test(Glyc$GAPDH,Glyc$ENO, method = 'spearman')
cor.test(Glyc$GAPDH,Glyc$PFK, method = 'spearman')
cor.test(Glyc$GAPDH,Glyc$PGM, method = 'spearman')
cor.test(Glyc$GAPDH,Glyc$HK, method = 'spearman')
mean(Glyc$GAPDH)
cor.test(Glyc$GAPDH,Glyc$PGM, method = 'spearman')
cor.test(Glyc$GAPDH,Glyc$HK, method = 'spearman')
View(Glyc)
###################################
######
###################################
####
rm(list=ls(all=TRUE))
############ read cancer fold changes
unzip("../../Body/1Raw/DEG_GlycOxph_ALL.zip", exdir = "../../Body/1Raw/")
Tr = read.table("../../Body/1Raw/DEG_GlycOxph_ALL.csv", header = TRUE, sep = ';')
if (file.exists("../../Body/1Raw/DEG_GlycOxph_ALL.csv")) file.remove("../../Body/1Raw/DEG_GlycOxph_ALL.csv")
# list of genes involved in Glycolysis (KEGG) from Suppl table 2 (NatureCommunication: Pan-cancer analysis of transcriptional metabolic dysregulation using The Cancer Genome Atlas)
GlycVec = c('ACSS1','ACSS2','ADH1A','ADH1B','ADH1C','ADH4','ADH5','ADH6','ADH7','ADPGK','AKR1A1','ALDH1A3','ALDH1B1','ALDH2','ALDH3A1','ALDH3A2','ALDH3B1','ALDH3B2','ALDH7A1','ALDH9A1','ALDOA','ALDOB','ALDOC','BPGM','DLAT','DLD','ENO1','ENO2','ENO3','FBP1','FBP2','G6PC','G6PC2','GALM','GAPDH','GAPDHS','GCK','GPI','HK1','HK2','HK3','HKDC1','LDHA','LDHAL6A','LDHAL6B','LDHB','LDHC','PANK1','PCK1','PCK2','PDHA1','PDHA2','PDHB','PFKFB1','PFKFB2','PFKFB3','PFKFB4','PFKL','PFKM','PFKP','PGAM1','PGAM2','PGAM4','PGK1','PGK2','PGM1','PGM2','PKLR','PKM','SLC2A2','TPI1')
Tr = Tr[Tr$Gene %in% GlycVec,]
# find genes with minimal p values -> ADH and ALD
AGG = aggregate(-log10(Tr$adj.P.Val), by = list(Tr$Gene), FUN = median); names(AGG)=c('Gene','MedianLogP'); AGG = AGG[order(AGG$MedianLogP),]
# lets start from well known markers of glycolysis: GAPDH, PKM,  ENO, PFK, PGM, HK, PDC
# GAPDH: Glyceraldehyde 3-phosphate dehydrogenase. Is an enzyme of ~37kDa that catalyzes the sixth step of glycolysis and thus serves to break down glucose for energy and carbon molecules. In addition to this long established metabolic function, GAPDH has recently been implicated in several non-metabolic processes, including transcription activation, initiation of apoptosis,[5] ER to Golgi vesicle shuttling, and fast axonal, or axoplasmic transport.[6] In sperm, a testis-specific isoenzyme GAPDHS is expressed.
# PKM: Pyruvate Kinase M1/2. This gene encodes a protein involved in glycolysis. The encoded protein is a pyruvate kinase that catalyzes the transfer of a phosphoryl group from phosphoenolpyruvate to ADP, generating ATP and pyruvate. This protein has been shown to interact with thyroid hormone and may mediate cellular metabolic effects induced by thyroid hormones.
# ENO: enolase (there are three enolase isoenzymes in mammals). They are glycolytic enzymes.
# PFK: Phosphofructokinase (M - muscle; P = platelet, L = liver; PFKL','PFKM','PFKP'); Three phosphofructokinase isozymes exist in humans: muscle, liver and platelet. These isozymes function as subunits of the mammalian tetramer phosphofructokinase, which catalyzes the phosphorylation of fructose-6-phosphate to fructose-1,6-bisphosphate
# PGM: (1,2) Phosphoglucomutase. There are several PGM isozymes, which are encoded by different genes and catalyze the transfer of phosphate between the 1 and 6 positions of glucose
# HK(1,2,3): Hexokinases phosphorylate glucose to produce glucose-6-phosphate, the first step in most glucose metabolism pathways
# PFKFB(1,2,3,4): 6-Phosphofructo-2-Kinase/Fructose-2,6-Biphosphatase. These proteins belong to a family of bifunctional proteins that are involved in both the synthesis and degradation of fructose-2,6-bisphosphate, a regulatory molecule that controls glycolysis in eukaryotes
# http://www.ijcep.com/files/ijcep0063886.pdf
## aggregate Score or logFC. Score works better!
GAPDH = Tr[Tr$Gene == 'GAPDH',];
GAPDH = aggregate(GAPDH$Score, by = list(GAPDH$Cancer), FUN = mean); names(GAPDH)=c('Cancer','GAPDH')
ENO   = Tr[Tr$Gene %in% c('ENO1','ENO2','ENO3'),]
ENO   = aggregate(ENO$Score, by = list(ENO$Cancer), FUN = mean); names(ENO)=c('Cancer','ENO')
PFK  = Tr[Tr$Gene %in% c('PFKL','PFKM','PFKP'),]
PFK   = aggregate(PFK$Score, by = list(PFK$Cancer), FUN = mean); names(PFK)=c('Cancer','PFK')
PGM  = Tr[Tr$Gene %in% c('PGM1','PGM2'),]
PGM   = aggregate(PGM$Score, by = list(PGM$Cancer), FUN = mean); names(PGM)=c('Cancer','PGM')
HK    = Tr[Tr$Gene %in% c('HK1','HK2','HK3'),]
HK   = aggregate(HK$Score, by = list(HK$Cancer), FUN = mean); names(HK)=c('Cancer','HK')
ADH  = Tr[Tr$Gene %in% c('ADH1A','ADH1B','ADH1C','ADH4','ADH5','ADH6','ADH7'),]
ADH  = aggregate(ADH$Score, by = list(ADH$Cancer), FUN = mean); names(ADH)=c('Cancer','ADH')
Glyc = merge(GAPDH,ENO, all = TRUE)
Glyc = merge(Glyc,PFK, all = TRUE)
Glyc = merge(Glyc,PGM, all = TRUE)
Glyc = merge(Glyc,HK, all = TRUE)
Glyc = merge(Glyc,ADH, all = TRUE)
cor.test(Glyc$GAPDH,Glyc$ENO, method = 'spearman') # positive
cor.test(Glyc$GAPDH,Glyc$PFK, method = 'spearman') # positive
cor.test(Glyc$GAPDH,Glyc$PGM, method = 'spearman') # nothing
cor.test(Glyc$GAPDH,Glyc$HK, method = 'spearman')  # nothing
cor.test(Glyc$GAPDH,Glyc$ADH, method = 'spearman')  # nothing
ALD = Tr[Tr$Gene %in% c('ALDH1A3','ALDH1B1','ALDH2','ALDH3A1','ALDH3A2','ALDH3B1','ALDH3B2','ALDH7A1','ALDH9A1','ALDOA','ALDOB','ALDOC'),]
###################################
######
###################################
####
rm(list=ls(all=TRUE))
############ read cancer fold changes
unzip("../../Body/1Raw/DEG_GlycOxph_ALL.zip", exdir = "../../Body/1Raw/")
Tr = read.table("../../Body/1Raw/DEG_GlycOxph_ALL.csv", header = TRUE, sep = ';')
if (file.exists("../../Body/1Raw/DEG_GlycOxph_ALL.csv")) file.remove("../../Body/1Raw/DEG_GlycOxph_ALL.csv")
# list of genes involved in Glycolysis (KEGG) from Suppl table 2 (NatureCommunication: Pan-cancer analysis of transcriptional metabolic dysregulation using The Cancer Genome Atlas)
GlycVec = c('ACSS1','ACSS2','ADH1A','ADH1B','ADH1C','ADH4','ADH5','ADH6','ADH7','ADPGK','AKR1A1','ALDH1A3','ALDH1B1','ALDH2','ALDH3A1','ALDH3A2','ALDH3B1','ALDH3B2','ALDH7A1','ALDH9A1','ALDOA','ALDOB','ALDOC','BPGM','DLAT','DLD','ENO1','ENO2','ENO3','FBP1','FBP2','G6PC','G6PC2','GALM','GAPDH','GAPDHS','GCK','GPI','HK1','HK2','HK3','HKDC1','LDHA','LDHAL6A','LDHAL6B','LDHB','LDHC','PANK1','PCK1','PCK2','PDHA1','PDHA2','PDHB','PFKFB1','PFKFB2','PFKFB3','PFKFB4','PFKL','PFKM','PFKP','PGAM1','PGAM2','PGAM4','PGK1','PGK2','PGM1','PGM2','PKLR','PKM','SLC2A2','TPI1')
Tr = Tr[Tr$Gene %in% GlycVec,]
# find genes with minimal p values -> ADH and ALD
AGG = aggregate(-log10(Tr$adj.P.Val), by = list(Tr$Gene), FUN = median); names(AGG)=c('Gene','MedianLogP'); AGG = AGG[order(AGG$MedianLogP),]
# lets start from well known markers of glycolysis: GAPDH, PKM,  ENO, PFK, PGM, HK, PDC
# GAPDH: Glyceraldehyde 3-phosphate dehydrogenase. Is an enzyme of ~37kDa that catalyzes the sixth step of glycolysis and thus serves to break down glucose for energy and carbon molecules. In addition to this long established metabolic function, GAPDH has recently been implicated in several non-metabolic processes, including transcription activation, initiation of apoptosis,[5] ER to Golgi vesicle shuttling, and fast axonal, or axoplasmic transport.[6] In sperm, a testis-specific isoenzyme GAPDHS is expressed.
# PKM: Pyruvate Kinase M1/2. This gene encodes a protein involved in glycolysis. The encoded protein is a pyruvate kinase that catalyzes the transfer of a phosphoryl group from phosphoenolpyruvate to ADP, generating ATP and pyruvate. This protein has been shown to interact with thyroid hormone and may mediate cellular metabolic effects induced by thyroid hormones.
# ENO: enolase (there are three enolase isoenzymes in mammals). They are glycolytic enzymes.
# PFK: Phosphofructokinase (M - muscle; P = platelet, L = liver; PFKL','PFKM','PFKP'); Three phosphofructokinase isozymes exist in humans: muscle, liver and platelet. These isozymes function as subunits of the mammalian tetramer phosphofructokinase, which catalyzes the phosphorylation of fructose-6-phosphate to fructose-1,6-bisphosphate
# PGM: (1,2) Phosphoglucomutase. There are several PGM isozymes, which are encoded by different genes and catalyze the transfer of phosphate between the 1 and 6 positions of glucose
# HK(1,2,3): Hexokinases phosphorylate glucose to produce glucose-6-phosphate, the first step in most glucose metabolism pathways
# PFKFB(1,2,3,4): 6-Phosphofructo-2-Kinase/Fructose-2,6-Biphosphatase. These proteins belong to a family of bifunctional proteins that are involved in both the synthesis and degradation of fructose-2,6-bisphosphate, a regulatory molecule that controls glycolysis in eukaryotes
# http://www.ijcep.com/files/ijcep0063886.pdf
## aggregate Score or logFC. Score works better!
GAPDH = Tr[Tr$Gene == 'GAPDH',];
GAPDH = aggregate(GAPDH$Score, by = list(GAPDH$Cancer), FUN = mean); names(GAPDH)=c('Cancer','GAPDH')
ENO   = Tr[Tr$Gene %in% c('ENO1','ENO2','ENO3'),]
ENO   = aggregate(ENO$Score, by = list(ENO$Cancer), FUN = mean); names(ENO)=c('Cancer','ENO')
PFK  = Tr[Tr$Gene %in% c('PFKL','PFKM','PFKP'),]
PFK   = aggregate(PFK$Score, by = list(PFK$Cancer), FUN = mean); names(PFK)=c('Cancer','PFK')
PGM  = Tr[Tr$Gene %in% c('PGM1','PGM2'),]
PGM   = aggregate(PGM$Score, by = list(PGM$Cancer), FUN = mean); names(PGM)=c('Cancer','PGM')
HK    = Tr[Tr$Gene %in% c('HK1','HK2','HK3'),]
HK   = aggregate(HK$Score, by = list(HK$Cancer), FUN = mean); names(HK)=c('Cancer','HK')
ADH  = Tr[Tr$Gene %in% c('ADH1A','ADH1B','ADH1C','ADH4','ADH5','ADH6','ADH7'),]
ADH  = aggregate(ADH$Score, by = list(ADH$Cancer), FUN = mean); names(ADH)=c('Cancer','ADH')
ALD = Tr[Tr$Gene %in% c('ALDH1A3','ALDH1B1','ALDH2','ALDH3A1','ALDH3A2','ALDH3B1','ALDH3B2','ALDH7A1','ALDH9A1','ALDOA','ALDOB','ALDOC'),]
ALD  = aggregate(ALD$Score, by = list(ALD$Cancer), FUN = mean); names(ALD)=c('Cancer','ALD')
Glyc = merge(GAPDH,ENO, all = TRUE)
Glyc = merge(Glyc,PFK, all = TRUE)
Glyc = merge(Glyc,PGM, all = TRUE)
Glyc = merge(Glyc,HK, all = TRUE)
Glyc = merge(Glyc,ADH, all = TRUE)
Glyc = merge(Glyc,ALD, all = TRUE)
cor.test(Glyc$GAPDH,Glyc$ENO, method = 'spearman') # positive
cor.test(Glyc$GAPDH,Glyc$PFK, method = 'spearman') # positive
cor.test(Glyc$GAPDH,Glyc$PGM, method = 'spearman') # nothing
cor.test(Glyc$GAPDH,Glyc$HK, method = 'spearman')  # nothing
cor.test(Glyc$GAPDH,Glyc$ADH, method = 'spearman')  # negative
cor.test(Glyc$GAPDH,Glyc$ALD, method = 'spearman')  # negative
write.table(Glyc, file = '../../Body/2Derived/Cancer.DeriveLevelOfGlycolysisForEachCancerType.txt')
###################################
######
###################################
####
rm(list=ls(all=TRUE))
############ read cancer fold changes
unzip("../../Body/1Raw/DEG_GlycOxph_ALL.zip", exdir = "../../Body/1Raw/")
Tr = read.table("../../Body/1Raw/DEG_GlycOxph_ALL.csv", header = TRUE, sep = ';')
if (file.exists("../../Body/1Raw/DEG_GlycOxph_ALL.csv")) file.remove("../../Body/1Raw/DEG_GlycOxph_ALL.csv")
# list of genes involved in Glycolysis (KEGG) from Suppl table 2 (NatureCommunication: Pan-cancer analysis of transcriptional metabolic dysregulation using The Cancer Genome Atlas)
GlycVec = c('ACSS1','ACSS2','ADH1A','ADH1B','ADH1C','ADH4','ADH5','ADH6','ADH7','ADPGK','AKR1A1','ALDH1A3','ALDH1B1','ALDH2','ALDH3A1','ALDH3A2','ALDH3B1','ALDH3B2','ALDH7A1','ALDH9A1','ALDOA','ALDOB','ALDOC','BPGM','DLAT','DLD','ENO1','ENO2','ENO3','FBP1','FBP2','G6PC','G6PC2','GALM','GAPDH','GAPDHS','GCK','GPI','HK1','HK2','HK3','HKDC1','LDHA','LDHAL6A','LDHAL6B','LDHB','LDHC','PANK1','PCK1','PCK2','PDHA1','PDHA2','PDHB','PFKFB1','PFKFB2','PFKFB3','PFKFB4','PFKL','PFKM','PFKP','PGAM1','PGAM2','PGAM4','PGK1','PGK2','PGM1','PGM2','PKLR','PKM','SLC2A2','TPI1')
Tr = Tr[Tr$Gene %in% GlycVec,]
# find genes with minimal p values -> ADH and ALD
AGG = aggregate(-log10(Tr$adj.P.Val), by = list(Tr$Gene), FUN = median); names(AGG)=c('Gene','MedianLogP'); AGG = AGG[order(AGG$MedianLogP),]
# lets start from well known markers of glycolysis: GAPDH, PKM,  ENO, PFK, PGM, HK, PDC
# GAPDH: Glyceraldehyde 3-phosphate dehydrogenase. Is an enzyme of ~37kDa that catalyzes the sixth step of glycolysis and thus serves to break down glucose for energy and carbon molecules. In addition to this long established metabolic function, GAPDH has recently been implicated in several non-metabolic processes, including transcription activation, initiation of apoptosis,[5] ER to Golgi vesicle shuttling, and fast axonal, or axoplasmic transport.[6] In sperm, a testis-specific isoenzyme GAPDHS is expressed.
# PKM: Pyruvate Kinase M1/2. This gene encodes a protein involved in glycolysis. The encoded protein is a pyruvate kinase that catalyzes the transfer of a phosphoryl group from phosphoenolpyruvate to ADP, generating ATP and pyruvate. This protein has been shown to interact with thyroid hormone and may mediate cellular metabolic effects induced by thyroid hormones.
# ENO: enolase (there are three enolase isoenzymes in mammals). They are glycolytic enzymes.
# PFK: Phosphofructokinase (M - muscle; P = platelet, L = liver; PFKL','PFKM','PFKP'); Three phosphofructokinase isozymes exist in humans: muscle, liver and platelet. These isozymes function as subunits of the mammalian tetramer phosphofructokinase, which catalyzes the phosphorylation of fructose-6-phosphate to fructose-1,6-bisphosphate
# PGM: (1,2) Phosphoglucomutase. There are several PGM isozymes, which are encoded by different genes and catalyze the transfer of phosphate between the 1 and 6 positions of glucose
# HK(1,2,3): Hexokinases phosphorylate glucose to produce glucose-6-phosphate, the first step in most glucose metabolism pathways
# PFKFB(1,2,3,4): 6-Phosphofructo-2-Kinase/Fructose-2,6-Biphosphatase. These proteins belong to a family of bifunctional proteins that are involved in both the synthesis and degradation of fructose-2,6-bisphosphate, a regulatory molecule that controls glycolysis in eukaryotes
# http://www.ijcep.com/files/ijcep0063886.pdf
## aggregate Score or logFC. Score works better!
GAPDH = Tr[Tr$Gene == 'GAPDH',];
GAPDH = aggregate(GAPDH$Score, by = list(GAPDH$Cancer), FUN = mean); names(GAPDH)=c('Cancer','GAPDH')
ENO   = Tr[Tr$Gene %in% c('ENO1','ENO2','ENO3'),]
ENO   = aggregate(ENO$Score, by = list(ENO$Cancer), FUN = mean); names(ENO)=c('Cancer','ENO')
PFK  = Tr[Tr$Gene %in% c('PFKL','PFKM','PFKP'),]
PFK   = aggregate(PFK$Score, by = list(PFK$Cancer), FUN = mean); names(PFK)=c('Cancer','PFK')
PGM  = Tr[Tr$Gene %in% c('PGM1','PGM2'),]
PGM   = aggregate(PGM$Score, by = list(PGM$Cancer), FUN = mean); names(PGM)=c('Cancer','PGM')
HK    = Tr[Tr$Gene %in% c('HK1','HK2','HK3'),]
HK   = aggregate(HK$Score, by = list(HK$Cancer), FUN = mean); names(HK)=c('Cancer','HK')
ADH  = Tr[Tr$Gene %in% c('ADH1A','ADH1B','ADH1C','ADH4','ADH5','ADH6','ADH7'),]
ADH  = aggregate(ADH$Score, by = list(ADH$Cancer), FUN = mean); names(ADH)=c('Cancer','ADH')
ALD = Tr[Tr$Gene %in% c('ALDH1A3','ALDH1B1','ALDH2','ALDH3A1','ALDH3A2','ALDH3B1','ALDH3B2','ALDH7A1','ALDH9A1','ALDOA','ALDOB','ALDOC'),]
ALD  = aggregate(ALD$Score, by = list(ALD$Cancer), FUN = mean); names(ALD)=c('Cancer','ALD')
Glyc = merge(GAPDH,ENO, all = TRUE)
Glyc = merge(Glyc,PFK, all = TRUE)
Glyc = merge(Glyc,PGM, all = TRUE)
Glyc = merge(Glyc,HK, all = TRUE)
Glyc = merge(Glyc,ADH, all = TRUE)
Glyc = merge(Glyc,ALD, all = TRUE)
cor.test(Glyc$GAPDH,Glyc$ENO, method = 'spearman') # positive
cor.test(Glyc$GAPDH,Glyc$PFK, method = 'spearman') # positive
cor.test(Glyc$GAPDH,Glyc$PGM, method = 'spearman') # nothing
cor.test(Glyc$GAPDH,Glyc$HK, method = 'spearman')  # nothing
cor.test(Glyc$GAPDH,Glyc$ADH, method = 'spearman')  # negative
cor.test(Glyc$GAPDH,Glyc$ALD, method = 'spearman')  # nothing
# PCA!?
write.table(Glyc, file = '../../Body/2Derived/Cancer.DeriveLevelOfGlycolysisForEachCancerType.txt')
