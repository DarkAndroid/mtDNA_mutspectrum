ylim(-20, 20) +
# Custom the theme: no axis title and no cartesian grid
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank()
# plot.margin = unit(rep(-2,4), "cm")     # This remove unnecessary margin around plot
) +
# This makes the coordinate polar instead of cartesian.
coord_polar(start = 3*pi/4, direction = -1) +
scale_fill_discrete(name = "Nucleotide", labels = c("G", "A"))
p + ggtitle('Balaena mysticetus, 18980 days')
dev.off()
shortTC = as.data.frame(cbind(cCount, tCount))
shortTC$cCount = - shortTC$cCount
num = 1:nrow(shortTC)
shortTC = cbind(shortTC, num)
longTC = as.data.frame(cbind(cCountlong, tCountlong))
longTC$cCountlong = - longTC$cCountlong
num = 1:nrow(longTC)
longTC = cbind(longTC, num)
pdf('../../Body/4Figures/WholeGenomeAnalyses.NoOverlapAgAlongGenome.pdf')
a = ggplot(shortTC, aes(num, tCount)) +
geom_bar(aes(fill = 'red'), stat = "identity") +
geom_bar(aes(num, cCount, fill = 'green'), stat = "identity") +
ggtitle('low Generation time') + xlab('Position') + ylab('') +
scale_fill_discrete(name = "Nucleotide", labels = c("G", "A")); a
a = ggplot(longTC, aes(num, tCountlong)) +
geom_bar(aes(fill = 'red'), stat = "identity") +
geom_bar(aes(num, cCountlong, fill = 'green'), stat = "identity") +
ggtitle('high Generation time') + xlab('Position') + ylab('') +
scale_fill_discrete(name = "Nucleotide", labels = c("G", "A")); a
# dev.off()
shortTC = as.data.frame(cbind(cCount, tCount))
shortTC$cCount = - shortTC$cCount
num = 1:nrow(shortTC)
shortTC = cbind(shortTC, num)
longTC = as.data.frame(cbind(cCountlong, tCountlong))
longTC$cCountlong = - longTC$cCountlong
num = 1:nrow(longTC)
longTC = cbind(longTC, num)
p <- ggplot(shortTC, aes(x=num, y=tCount)) +       # Note that id is a factor. If x is numeric, there is some space between the first bar
# This add the bars with a blue color
geom_bar(aes(fill = 'red'), stat="identity") +
geom_bar(aes(num, cCount, fill='green'), stat = "identity") +
# Limits of the plot = very important. The negative value controls the size of the inner circle, the positive one is useful to add size over each bar
ylim(-20, 20) +
# Custom the theme: no axis title and no cartesian grid
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-2,4), "cm")     # This remove unnecessary margin around plot
) +
# This makes the coordinate polar instead of cartesian.
coord_polar(start = 0) + scale_fill_discrete(name = "Nucleotide", labels = c("G", "A"))
# p
p <- ggplot(longTC, aes(x=num, y=tCountlong)) +       # Note that id is a factor. If x is numeric, there is some space between the first bar
# This add the bars with a blue color
geom_bar(stat="identity", aes(fill = 'red')) +
geom_bar(aes(num, cCountlong, fill='green'), stat = "identity") +
# Limits of the plot = very important. The negative value controls the size of the inner circle, the positive one is useful to add size over each bar
ylim(-20, 20) +
# Custom the theme: no axis title and no cartesian grid
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-2,4), "cm")     # This remove unnecessary margin around plot
) +
# This makes the coordinate polar instead of cartesian.
coord_polar(start = 0) +
scale_fill_discrete(name = "Nucleotide", labels = c("G", "A"))
# p
############################################################
### add zeros
shortTC = as.data.frame(cbind(cCount, tCount))
shortTC$cCount = - shortTC$cCount
a = as.data.frame(matrix(0, ncol = 2, nrow = 40))
names(a) = names(shortTC)
shortTC = rbind(shortTC, a)
num = 1:nrow(shortTC)
shortTC = cbind(shortTC, num)
longTC = as.data.frame(cbind(cCountlong, tCountlong))
longTC$cCountlong = - longTC$cCountlong
a = as.data.frame(matrix(0, ncol = 2, nrow = 42))
names(a) = names(longTC)
longTC = rbind(longTC, a)
num = 1:nrow(longTC)
longTC = cbind(longTC, num)
p <- ggplot(shortTC, aes(x=num, y=tCount)) +       # Note that id is a factor. If x is numeric, there is some space between the first bar
# This add the bars with a blue color
geom_bar(stat="identity", aes(fill = 'red')) +
geom_bar(aes(num, cCount, fill='green'), stat = "identity") +
# Limits of the plot = very important. The negative value controls the size of the inner circle, the positive one is useful to add size over each bar
ylim(-20, 20) +
# Custom the theme: no axis title and no cartesian grid
theme_minimal() +
theme(
#plot.title = element_text('Tarsipes rostratus, 341.275')
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank()
# plot.margin = unit(rep(-1,4), "cm")     # This remove unnecessary margin around plot
) +
# This makes the coordinate polar instead of cartesian.
coord_polar(start = 3*pi/4, direction = -1) +
scale_fill_discrete(name = "Nucleotide", labels = c("G", "A"))
print(p + labs(title = 'Tarsipes rostratus, 341 days'))
p <- ggplot(longTC, aes(x=num, y=tCountlong)) +       # Note that id is a factor. If x is numeric, there is some space between the first bar
# This add the bars with a blue color
geom_bar(stat="identity", aes(fill = 'red')) +
geom_bar(aes(num, cCountlong, fill='green'), stat = "identity") +
# Limits of the plot = very important. The negative value controls the size of the inner circle, the positive one is useful to add size over each bar
ylim(-20, 20) +
# Custom the theme: no axis title and no cartesian grid
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank()
# plot.margin = unit(rep(-2,4), "cm")     # This remove unnecessary margin around plot
) +
# This makes the coordinate polar instead of cartesian.
coord_polar(start = 3*pi/4, direction = -1) +
scale_fill_discrete(name = "Nucleotide", labels = c("G", "A"))
p + ggtitle('Balaena mysticetus, 18980 days')
dev.off()
rm(list=ls(all=TRUE))
############ Syn mut
unzip("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt.zip")
SynNuc = read.table("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt", header = TRUE, sep = '\t')
if (file.exists("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt")){file.remove("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt")}
names(SynNuc)
### make ND6 complementary:
NotND6 = SynNuc[SynNuc$Gene != 'ND6',]
ND6 = SynNuc[SynNuc$Gene == 'ND6',]
A = ND6$NeutralT
T = ND6$NeutralA
G = ND6$NeutralC
C = ND6$NeutralG
ND6$NeutralA = A
ND6$NeutralT = T
ND6$NeutralG = G
ND6$NeutralC = C
SynNuc = rbind(NotND6,ND6)
VecOfTaxa = unique(SynNuc$Class)
table(SynNuc$Class)/13
########################################## GENOME WIDE SKEW FOR EACH SPECIES
AGG = aggregate(list(SynNuc$NeutralA,SynNuc$NeutralT,SynNuc$NeutralG,SynNuc$NeutralC), by = list(SynNuc$Species,SynNuc$Class), FUN = sum)
names(AGG) = c('Species','Class','NeutralA','NeutralT','NeutralG','NeutralC')
## all six different skews
AGG$CTSkew = (AGG$NeutralC - AGG$NeutralT)/(AGG$NeutralC + AGG$NeutralT); summary(AGG$CTSkew) # GA on heavy
AGG$CGSkew = (AGG$NeutralC - AGG$NeutralG)/(AGG$NeutralC + AGG$NeutralG); summary(AGG$CGSkew) #
AGG$CASkew = (AGG$NeutralC - AGG$NeutralA)/(AGG$NeutralC + AGG$NeutralA); summary(AGG$CASkew) #
AGG$TGSkew = (AGG$NeutralT - AGG$NeutralG)/(AGG$NeutralT + AGG$NeutralG); summary(AGG$TGSkew) #
AGG$TASkew = (AGG$NeutralT - AGG$NeutralA)/(AGG$NeutralT + AGG$NeutralA); summary(AGG$TASkew) #
AGG$GASkew = (AGG$NeutralG - AGG$NeutralA)/(AGG$NeutralG + AGG$NeutralA); summary(AGG$GASkew) #
AGG$TCSkew = (AGG$NeutralT - AGG$NeutralC)/(AGG$NeutralT + AGG$NeutralC); summary(AGG$CTSkew) # AG on heavy. Added it for fun, just to be sure, that it is opposite to CT (GA on heavy)
GT = read.table("../../Body/1Raw/GenerationLenghtforMammals.xlsx.txt", header = TRUE, sep = '\t')
GT$Species = gsub(' ','_',GT$Scientific_name)
length(unique(GT$Species))
summary(GT$AdultBodyMass_g)     # 2        21        71    136058       614 154321304
summary(GT$GenerationLength_d)  # 129.0   624.4  1101.1  1578.8  2064.3 18980.0 # max = 18980 days => 52 years. ok
GT = GT[,c(11,13)]
summary(GT$GenerationLength_d)
Mam = merge(AGG,GT, by ='Species')
############### generation length versus all six skews: 6 rank correlations and one multiple model:
###### pairwise rank corr:
cor.test(log2(Mam$GenerationLength_d),Mam$CTSkew, method = 'spearman')  # rho = 0.4117201; p-value < 2.2e-16. I would add PIC
cor.test(log2(Mam$GenerationLength_d),Mam$CGSkew, method = 'spearman')  # rho = 0.05774663, p = 0.1414
cor.test(log2(Mam$GenerationLength_d),Mam$CASkew, method = 'spearman')  # rho = 0.4691996,  p-value < 2.2e-16
cor.test(log2(Mam$GenerationLength_d),Mam$TGSkew, method = 'spearman')  # rho = -0.24,  p-value = 5.183e-10
cor.test(log2(Mam$GenerationLength_d),Mam$TASkew, method = 'spearman')  # rho = -0.1183936,  p-value = 0.0025
cor.test(log2(Mam$GenerationLength_d),Mam$GASkew, method = 'spearman')  # rho = 0.2176591,  p-value = 2.072e-08
######### multiple Linear Model (it is reasonable to add only 4 significant parameters - without CG and TA. But If I add everything, results are unusual and close to opposite...). Interactions?
A<-lm(log2(Mam$GenerationLength_d) ~ Mam$CTSkew + Mam$CGSkew + Mam$CASkew + Mam$TGSkew + Mam$TASkew + Mam$GASkew); summary(A)
# (Intercept)   10.394      1.192   8.722  < 2e-16 ***
# Mam$CTSkew     2.076      3.054   0.680   0.4969
# Mam$CGSkew   -10.172      2.391  -4.254 2.42e-05 ***
# Mam$CASkew     7.169      3.450   2.078   0.0381 *
# Mam$TGSkew     3.531      1.567   2.253   0.0246 *
# Mam$TASkew    -1.858      3.502  -0.531   0.5958
# Mam$GASkew    -7.859      4.083  -1.925   0.0547 .
A<-lm(log2(Mam$GenerationLength_d) ~ Mam$CTSkew +  Mam$CASkew + Mam$TGSkew + Mam$TASkew + Mam$GASkew); summary(A)
A<-lm(log2(Mam$GenerationLength_d) ~ Mam$CTSkew +  Mam$CASkew + Mam$TGSkew + Mam$GASkew); summary(A)
#  Estimate Std. Error t value Pr(>|t|)
# (Intercept)   12.917      1.047  12.342  < 2e-16 ***
#  Mam$CTSkew     3.187      1.045   3.049  0.00239 **
#  Mam$CASkew     1.268      1.116   1.136  0.25619
# Mam$TGSkew     2.700      1.558   1.733  0.08361 .
# Mam$GASkew     4.658      2.874   1.621  0.10559
# ---
#  Signif. codes:  0 вЂ***вЂ™ 0.001 вЂ**вЂ™ 0.01 вЂ*вЂ™ 0.05 вЂ.вЂ™ 0.1 вЂ вЂ™ 1
#
# Residual standard error: 0.9818 on 645 degrees of freedom
# Multiple R-squared:  0.2435,	Adjusted R-squared:  0.2388
# F-statistic: 51.91 on 4 and 645 DF,  p-value: < 2.2e-16
View(Mam)
AGG = aggregate(list(SynNuc$NeutralA,SynNuc$NeutralT,SynNuc$NeutralG,SynNuc$NeutralC), by = list(SynNuc$Species,SynNuc$Class,SynNuc$Gene), FUN = sum)
names(AGG) = c('Species','Class','Gene','NeutralA','NeutralT','NeutralG','NeutralC')
AGG$CTSkew = (AGG$NeutralC - AGG$NeutralT)/(AGG$NeutralC + AGG$NeutralT); summary(AGG$TCSkew) # GA on heavy
############# GENERATION LENGTH FOR MAMMALS
GT = read.table("../../Body/1Raw/GenerationLenghtforMammals.xlsx.txt", header = TRUE, sep = '\t')
GT$Species = gsub(' ','_',GT$Scientific_name)
length(unique(GT$Species))
summary(GT$AdultBodyMass_g)     # 2        21        71    136058       614 154321304
summary(GT$GenerationLength_d)  # 129.0   624.4  1101.1  1578.8  2064.3 18980.0 # max = 18980 days => 52 years. ok
GT = GT[,c(11,13)]
summary(GT$GenerationLength_d)
M = merge(AGG,GT, by ='Species')
summary(M$GenerationLength_d) # median = 2190.0
ShortLived = unique(M[M$GenerationLength_d <= median(M$GenerationLength_d),]$Species); length(ShortLived)
LongLived = unique(M[M$GenerationLength_d  > median(M$GenerationLength_d),]$Species);  length(LongLived)
MShort = M[M$Species %in% ShortLived,]; MShort$GT = 'short'; MLong = M[M$Species %in% LongLived,]; MLong$GT = 'long';
M = rbind(MShort,MLong)
M$Gene =  ordered(M$Gene, levels = c('COX1','COX2','ATP8','ATP6','COX3','ND3','ND4L','ND4','ND5','ND6','CytB', 'ND1','ND2'))
# M$Gene =  ordered(M$Gene, levels = c('COX1','COX2','ATP8','ATP6','COX3','ND3','ND4L','ND4','ND5','CytB'))
M = M[order(M$Gene),]
M = M[!M$Gene %in% c('ND6','ND1','ND2'),]
M$Gene =  ordered(M$Gene, levels = c('COX1','COX2','ATP8','ATP6','COX3','ND3','ND4L','ND4','ND5','CytB'))
View(M)
####beautiful boxplots###################
library("ggplot2")
library("ggpubr")
pdf("../../Body/4Figures/WholeGenomeAnalyses.NoOverlap.AGSkew.R.02.pdf", height = 10, width = 20)
ggboxplot(M, "CTSkew", "Gene",
fill = "GenerationLength_d", palette = c("#00AFBB", "#E7B800"))
dev.off()
ggboxplot(M, "CTSkew", "Gene",
fill = "GenerationLength_d", palette = c("#00AFBB", "#E7B800"))
####beautiful boxplots###################
class(M$CTSkew)
class(M$GenerationLength_d)
View(M)
pdf("../../Body/4Figures/WholeGenomeAnalyses.NoOverlap.AGSkew.R.02.pdf", height = 10, width = 20)
ggboxplot(M, "CTSkew", "Gene",
fill = "GT", palette = c("#00AFBB", "#E7B800"))
dev.off()
pdf("../../Body/4Figures/WholeGenomeAnalyses.NoOverlap.AGSkew.R.02.pdf", height = 10, width = 20)
ggboxplot(M, "Gene","CTSkew",
fill = "GT", palette = c("#00AFBB", "#E7B800"))
dev.off()
ggboxplot(M, "Gene","CTSkew",
fill = "GT", palette = c("#00AFBB", "#E7B800"), width = 0.8)
?ggpar
bp = ggboxplot(M, "Gene","CTSkew",
fill = "GT", palette = c("#00AFBB", "#E7B800"))
bp
ggpar(bp, xlab="Genes", ylab="AG skew", legend=c("Longlived mammals", "Shortlived mammals"), main="AG skew in long- vs shortlived mammals")
bp
bp = ggboxplot(M, "Gene","CTSkew",
fill = "GT", palette = c("#00AFBB", "#E7B800"), xlab="Genes", ylab="AG skew",
legend=c("Longlived mammals", "Shortlived mammals"), main="AG skew in long- vs shortlived mammals")
bp
bp = ggboxplot(M, "Gene", "CTSkew",
fill = "GT", palette = c("#00AFBB", "#E7B800"), xlab="Genes", ylab="AG skew")
bp
bp = ggboxplot(M, "Gene", "CTSkew",
fill = "GT", palette = c("#00AFBB", "#E7B800"), xlab="Genes", ylab="AG skew", title = "AG skew in long- vs shortlived mammals")
bp
bp = ggboxplot(M, "Gene", "CTSkew",
fill = "GT", palette = c("#00AFBB", "#E7B800"), xlab="Genes", ylab="AG skew", title = "AG skew in long- vs shortlived mammals", legend.title = "Mammals' longevity")
bp
ggboxplot(M, "Gene", "CTSkew",
fill = "GT", palette = c("#2f3ead", "##ad2f2f"), xlab="Genes", ylab="AG skew", title = "AG skew in long- vs shortlived mammals", legend.title = "Mammals' longevity")
pdf("../../Body/4Figures/WholeGenomeAnalyses.NoOverlap.AGSkew.R.02.pdf")
ggboxplot(M, "Gene", "CTSkew",
fill = "GT", palette = c("#2f3ead", "#ad2f2f"), xlab="Genes", ylab="AG skew", title = "AG skew in long- vs shortlived mammals", legend.title = "Mammals' longevity")
dev.off()
pdf("../../Body/4Figures/WholeGenomeAnalyses.NoOverlap.AGSkew.R.02.pdf", height = 10, width = 20)
ggboxplot(M, "Gene", "CTSkew",
fill = "GT", palette = c("#2f3ead", "#ad2f2f"), xlab="Genes", ylab="AG skew", title = "AG skew in long- vs shortlived mammals", legend.title = "Mammals' longevity")
dev.off()
pdf("../../Body/4Figures/WholeGenomeAnalyses.NoOverlap.AGSkew.R.02.pdf", height = 10, width = 30)
ggboxplot(M, "Gene", "CTSkew",
fill = "GT", palette = c("#2f3ead", "#ad2f2f"), xlab="Genes", ylab="AG skew", title = "AG skew in long- vs shortlived mammals", legend.title = "Mammals' longevity")
dev.off()
pdf("../../Body/4Figures/WholeGenomeAnalyses.NoOverlap.AGSkew.R.03.pdf", height = 10, width = 30)
ggboxplot(M, "Gene", "CTSkew",
fill = "GT", palette = c("#2f3ead", "#ad2f2f"), xlab="Genes", ylab="AG skew", title = "AG skew in long- vs shortlived mammals", legend.title = "Mammals' longevity", width = 0.5)
dev.off()
pdf("../../Body/4Figures/WholeGenomeAnalyses.NoOverlap.AGSkew.R.04.pdf", height = 10, width = 23)
ggboxplot(M, "Gene", "CTSkew",
fill = "GT", palette = c("#2f3ead", "#ad2f2f"), xlab="Genes", ylab="AG skew", title = "AG skew in long- vs shortlived mammals", legend.title = "Mammals' longevity", width = 0.5)
dev.off()
pdf("../../Body/4Figures/WholeGenomeAnalyses.NoOverlap.AGSkew.R.05.pdf", height = 10, width = 20)
ggboxplot(M, "Gene", "CTSkew",
fill = "GT", palette = c("#2f3ead", "#ad2f2f"), xlab="Genes", ylab="AG skew", title = "AG skew in long- vs shortlived mammals", legend.title = "Mammals' longevity", width = 0.8)
dev.off()
pdf("../../Body/4Figures/WholeGenomeAnalyses.NoOverlap.AGSkew.R.06.pdf", height = 10, width = 20)
ggboxplot(M, "Gene", "CTSkew",
fill = "GT", palette = c("#2f3ead", "#ad2f2f"), xlab="Genes", ylab="AG skew", title = "AG skew in long- vs shortlived mammals", legend.title = "Mammals' longevity", width = 0.6)
dev.off()
pdf("../../Body/4Figures/WholeGenomeAnalyses.NoOverlap.AGSkew.R.07.pdf", height = 10, width = 20)
ggboxplot(M, "Gene", "CTSkew",
fill = "GT", palette = c("#2f3ead", "#ad2f2f"), xlab="Genes", ylab="AG skew", title = "AG skew in long- vs shortlived mammals", legend.title = "Mammals' longevity", width = 0.7)
dev.off()
pdf("../../Body/4Figures/WholeGenomeAnalyses.NoOverlap.AGSkew.R.02.pdf", height = 10, width = 20)
ggboxplot(M, "Gene", "CTSkew",
fill = "GT", palette = c("#5c76d6", "#d65c5c"), xlab="Genes", ylab="AG skew", title = "AG skew in long- vs shortlived mammals", legend.title = "Mammals' longevity", width = 0.7)
dev.off()
ggboxplot(M, "Gene", "CTSkew",
fill = "GT", palette = c("#5c76d6", "#d65c5c"), xlab="Genes", ylab="AG skew", title = "AG skew in long- vs shortlived mammals", legend.title = "Mammals' longevity", width = 0.7)
View(GT)
rm(list=ls(all=TRUE))
############ Syn mut
unzip("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt.zip")
SynNuc = read.table("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt", header = TRUE, sep = '\t')
if (file.exists("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt")){file.remove("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt")}
names(SynNuc)
### make ND6 complementary:
NotND6 = SynNuc[SynNuc$Gene != 'ND6',]
ND6 = SynNuc[SynNuc$Gene == 'ND6',]
A = ND6$NeutralT
T = ND6$NeutralA
G = ND6$NeutralC
C = ND6$NeutralG
ND6$NeutralA = A
ND6$NeutralT = T
ND6$NeutralG = G
ND6$NeutralC = C
SynNuc = rbind(NotND6,ND6)
VecOfTaxa = unique(SynNuc$Class)
table(SynNuc$Class)/13
########################################## GENOME WIDE SKEW FOR EACH SPECIES
AGG = aggregate(list(SynNuc$NeutralA,SynNuc$NeutralT,SynNuc$NeutralG,SynNuc$NeutralC), by = list(SynNuc$Species,SynNuc$Class), FUN = sum)
names(AGG) = c('Species','Class','NeutralA','NeutralT','NeutralG','NeutralC')
## all six different skews
AGG$CTSkew = (AGG$NeutralC - AGG$NeutralT)/(AGG$NeutralC + AGG$NeutralT); summary(AGG$CTSkew) # GA on heavy
AGG$CGSkew = (AGG$NeutralC - AGG$NeutralG)/(AGG$NeutralC + AGG$NeutralG); summary(AGG$CGSkew) #
AGG$CASkew = (AGG$NeutralC - AGG$NeutralA)/(AGG$NeutralC + AGG$NeutralA); summary(AGG$CASkew) #
AGG$TGSkew = (AGG$NeutralT - AGG$NeutralG)/(AGG$NeutralT + AGG$NeutralG); summary(AGG$TGSkew) #
AGG$TASkew = (AGG$NeutralT - AGG$NeutralA)/(AGG$NeutralT + AGG$NeutralA); summary(AGG$TASkew) #
AGG$GASkew = (AGG$NeutralG - AGG$NeutralA)/(AGG$NeutralG + AGG$NeutralA); summary(AGG$GASkew) #
AGG$TCSkew = (AGG$NeutralT - AGG$NeutralC)/(AGG$NeutralT + AGG$NeutralC); summary(AGG$CTSkew) # AG on heavy. Added it for fun, just to be sure, that it is opposite to CT (GA on heavy)
GT = read.table("../../Body/1Raw/GenerationLenghtforMammals.xlsx.txt", header = TRUE, sep = '\t')
GT$Species = gsub(' ','_',GT$Scientific_name)
length(unique(GT$Species))
summary(GT$AdultBodyMass_g)     # 2        21        71    136058       614 154321304
summary(GT$GenerationLength_d)  # 129.0   624.4  1101.1  1578.8  2064.3 18980.0 # max = 18980 days => 52 years. ok
GT = GT[,c(11,13)]
summary(GT$GenerationLength_d)
Mam = merge(AGG,GT, by ='Species')
############### generation length versus all six skews: 6 rank correlations and one multiple model:
###### pairwise rank corr:
cor.test(log2(Mam$GenerationLength_d),Mam$CTSkew, method = 'spearman')  # rho = 0.4117201; p-value < 2.2e-16. I would add PIC
cor.test(log2(Mam$GenerationLength_d),Mam$CGSkew, method = 'spearman')  # rho = 0.05774663, p = 0.1414
cor.test(log2(Mam$GenerationLength_d),Mam$CASkew, method = 'spearman')  # rho = 0.4691996,  p-value < 2.2e-16
cor.test(log2(Mam$GenerationLength_d),Mam$TGSkew, method = 'spearman')  # rho = -0.24,  p-value = 5.183e-10
cor.test(log2(Mam$GenerationLength_d),Mam$TASkew, method = 'spearman')  # rho = -0.1183936,  p-value = 0.0025
cor.test(log2(Mam$GenerationLength_d),Mam$GASkew, method = 'spearman')  # rho = 0.2176591,  p-value = 2.072e-08
######### multiple Linear Model (it is reasonable to add only 4 significant parameters - without CG and TA. But If I add everything, results are unusual and close to opposite...). Interactions?
A<-lm(log2(Mam$GenerationLength_d) ~ Mam$CTSkew + Mam$CGSkew + Mam$CASkew + Mam$TGSkew + Mam$TASkew + Mam$GASkew); summary(A)
# (Intercept)   10.394      1.192   8.722  < 2e-16 ***
# Mam$CTSkew     2.076      3.054   0.680   0.4969
# Mam$CGSkew   -10.172      2.391  -4.254 2.42e-05 ***
# Mam$CASkew     7.169      3.450   2.078   0.0381 *
# Mam$TGSkew     3.531      1.567   2.253   0.0246 *
# Mam$TASkew    -1.858      3.502  -0.531   0.5958
# Mam$GASkew    -7.859      4.083  -1.925   0.0547 .
A<-lm(log2(Mam$GenerationLength_d) ~ Mam$CTSkew +  Mam$CASkew + Mam$TGSkew + Mam$TASkew + Mam$GASkew); summary(A)
A<-lm(log2(Mam$GenerationLength_d) ~ Mam$CTSkew +  Mam$CASkew + Mam$TGSkew + Mam$GASkew); summary(A)
#  Estimate Std. Error t value Pr(>|t|)
# (Intercept)   12.917      1.047  12.342  < 2e-16 ***
#  Mam$CTSkew     3.187      1.045   3.049  0.00239 **
#  Mam$CASkew     1.268      1.116   1.136  0.25619
# Mam$TGSkew     2.700      1.558   1.733  0.08361 .
# Mam$GASkew     4.658      2.874   1.621  0.10559
# ---
#  Signif. codes:  0 вЂ***вЂ™ 0.001 вЂ**вЂ™ 0.01 вЂ*вЂ™ 0.05 вЂ.вЂ™ 0.1 вЂ вЂ™ 1
#
# Residual standard error: 0.9818 on 645 degrees of freedom
# Multiple R-squared:  0.2435,	Adjusted R-squared:  0.2388
# F-statistic: 51.91 on 4 and 645 DF,  p-value: < 2.2e-16
plot(log2(Mam$GenerationLength_d),Mam$CTSkew, main = 'Mammalia', xlab = 'log2(Generation Length)', ylab = 'GA skew')
a<-lm(Mam$CTSkew ~ log2(Mam$GenerationLength_d)); summary(a)
abline(a, col = 'red', lwd = 4)
abline(h=0, col = 'grey', lwd = 2, lt = 2)
#################################### GENE_SPECIFIC SKEW FOR EACH SPECIES
AGG = aggregate(list(SynNuc$NeutralA,SynNuc$NeutralT,SynNuc$NeutralG,SynNuc$NeutralC), by = list(SynNuc$Species,SynNuc$Class,SynNuc$Gene), FUN = sum)
names(AGG) = c('Species','Class','Gene','NeutralA','NeutralT','NeutralG','NeutralC')
AGG$CTSkew = (AGG$NeutralC - AGG$NeutralT)/(AGG$NeutralC + AGG$NeutralT); summary(AGG$TCSkew) # GA on heavy
############# GENERATION LENGTH FOR MAMMALS
GT = read.table("../../Body/1Raw/GenerationLenghtforMammals.xlsx.txt", header = TRUE, sep = '\t')
GT$Species = gsub(' ','_',GT$Scientific_name)
length(unique(GT$Species))
summary(GT$AdultBodyMass_g)     # 2        21        71    136058       614 154321304
summary(GT$GenerationLength_d)  # 129.0   624.4  1101.1  1578.8  2064.3 18980.0 # max = 18980 days => 52 years. ok
GT = GT[,c(11,13)]
summary(GT$GenerationLength_d)
M = merge(AGG,GT, by ='Species')
summary(M$GenerationLength_d) # median = 2190.0
ShortLived = unique(M[M$GenerationLength_d <= median(M$GenerationLength_d),]$Species); length(ShortLived)
LongLived = unique(M[M$GenerationLength_d  > median(M$GenerationLength_d),]$Species);  length(LongLived)
MShort = M[M$Species %in% ShortLived,]; MShort$GT = 'short lived mammal'; MLong = M[M$Species %in% LongLived,]; MLong$GT = 'long lived mammal';
M = rbind(MShort,MLong)
M$Gene =  ordered(M$Gene, levels = c('COX1','COX2','ATP8','ATP6','COX3','ND3','ND4L','ND4','ND5','ND6','CytB', 'ND1','ND2'))
# M$Gene =  ordered(M$Gene, levels = c('COX1','COX2','ATP8','ATP6','COX3','ND3','ND4L','ND4','ND5','CytB'))
M = M[order(M$Gene),]
# par(mfrow=c(2,1), oma = c(3, 1, 1, 1), cex = 2)
boxplot(CTSkew ~ GT*Gene, data = M,  notch = TRUE, outline = FALSE, las = 2, col = c('red','green'), main = 'Mammalia, GA skew')
M = M[!M$Gene %in% c('ND6','ND1','ND2'),]
M$Gene =  ordered(M$Gene, levels = c('COX1','COX2','ATP8','ATP6','COX3','ND3','ND4L','ND4','ND5','CytB'))
library("ggpubr")
pdf("../../Body/4Figures/WholeGenomeAnalyses.NoOverlap.AGSkew.R.03.pdf", height = 10, width = 20)
ggboxplot(M, "Gene", "CTSkew",
fill = "GT", palette = c("#5c76d6", "#d65c5c"), xlab="Genes", ylab="GA skew", title = "GA skew in long- vs shortlived mammals", legend.title = "Mammals", width = 0.7, notch = TRUE)
dev.off()
################################
################################
rm(list=ls(all=TRUE))
############ Syn mut
unzip("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt.zip")
SynNuc = read.table("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt", header = TRUE, sep = '\t')
if (file.exists("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt")){file.remove("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt")}
names(SynNuc)
### make ND6 complementary:
NotND6 = SynNuc[SynNuc$Gene != 'ND6',]
ND6 = SynNuc[SynNuc$Gene == 'ND6',]
A = ND6$NeutralT
T = ND6$NeutralA
G = ND6$NeutralC
C = ND6$NeutralG
ND6$NeutralA = A
ND6$NeutralT = T
ND6$NeutralG = G
ND6$NeutralC = C
SynNuc = rbind(NotND6,ND6)
VecOfTaxa = unique(SynNuc$Class)
table(SynNuc$Class)/13
########################################## GENOME WIDE SKEW FOR EACH SPECIES
AGG = aggregate(list(SynNuc$NeutralA,SynNuc$NeutralT,SynNuc$NeutralG,SynNuc$NeutralC), by = list(SynNuc$Species,SynNuc$Class), FUN = sum)
names(AGG) = c('Species','Class','NeutralA','NeutralT','NeutralG','NeutralC')
## all six different skews
AGG$CTSkew = (AGG$NeutralC - AGG$NeutralT)/(AGG$NeutralC + AGG$NeutralT); summary(AGG$CTSkew) # GA on heavy
AGG$CGSkew = (AGG$NeutralC - AGG$NeutralG)/(AGG$NeutralC + AGG$NeutralG); summary(AGG$CGSkew) #
AGG$CASkew = (AGG$NeutralC - AGG$NeutralA)/(AGG$NeutralC + AGG$NeutralA); summary(AGG$CASkew) #
AGG$TGSkew = (AGG$NeutralT - AGG$NeutralG)/(AGG$NeutralT + AGG$NeutralG); summary(AGG$TGSkew) #
AGG$TASkew = (AGG$NeutralT - AGG$NeutralA)/(AGG$NeutralT + AGG$NeutralA); summary(AGG$TASkew) #
AGG$GASkew = (AGG$NeutralG - AGG$NeutralA)/(AGG$NeutralG + AGG$NeutralA); summary(AGG$GASkew) #
AGG$TCSkew = (AGG$NeutralT - AGG$NeutralC)/(AGG$NeutralT + AGG$NeutralC); summary(AGG$CTSkew) # AG on heavy. Added it for fun, just to be sure, that it is opposite to CT (GA on heavy)
GT = read.table("../../Body/1Raw/GenerationLenghtforMammals.xlsx.txt", header = TRUE, sep = '\t')
GT$Species = gsub(' ','_',GT$Scientific_name)
length(unique(GT$Species))
summary(GT$AdultBodyMass_g)     # 2        21        71    136058       614 154321304
summary(GT$GenerationLength_d)  # 129.0   624.4  1101.1  1578.8  2064.3 18980.0 # max = 18980 days => 52 years. ok
GT = GT[,c(11,13)]
summary(GT$GenerationLength_d)
Mam = merge(AGG,GT, by ='Species')
############### generation length versus all six skews: 6 rank correlations and one multiple model:
###### pairwise rank corr:
cor.test(log2(Mam$GenerationLength_d),Mam$CTSkew, method = 'spearman')  # rho = 0.4117201; p-value < 2.2e-16. I would add PIC
cor.test(log2(Mam$GenerationLength_d),Mam$CGSkew, method = 'spearman')  # rho = 0.05774663, p = 0.1414
cor.test(log2(Mam$GenerationLength_d),Mam$CASkew, method = 'spearman')  # rho = 0.4691996,  p-value < 2.2e-16
cor.test(log2(Mam$GenerationLength_d),Mam$TGSkew, method = 'spearman')  # rho = -0.24,  p-value = 5.183e-10
cor.test(log2(Mam$GenerationLength_d),Mam$TASkew, method = 'spearman')  # rho = -0.1183936,  p-value = 0.0025
cor.test(log2(Mam$GenerationLength_d),Mam$GASkew, method = 'spearman')  # rho = 0.2176591,  p-value = 2.072e-08
######### multiple Linear Model (it is reasonable to add only 4 significant parameters - without CG and TA. But If I add everything, results are unusual and close to opposite...). Interactions?
A<-lm(log2(Mam$GenerationLength_d) ~ Mam$CTSkew + Mam$CGSkew + Mam$CASkew + Mam$TGSkew + Mam$TASkew + Mam$GASkew); summary(A)
# (Intercept)   10.394      1.192   8.722  < 2e-16 ***
# Mam$CTSkew     2.076      3.054   0.680   0.4969
# Mam$CGSkew   -10.172      2.391  -4.254 2.42e-05 ***
# Mam$CASkew     7.169      3.450   2.078   0.0381 *
# Mam$TGSkew     3.531      1.567   2.253   0.0246 *
# Mam$TASkew    -1.858      3.502  -0.531   0.5958
# Mam$GASkew    -7.859      4.083  -1.925   0.0547 .
A<-lm(log2(Mam$GenerationLength_d) ~ Mam$CTSkew +  Mam$CASkew + Mam$TGSkew + Mam$TASkew + Mam$GASkew); summary(A)
A<-lm(log2(Mam$GenerationLength_d) ~ Mam$CTSkew +  Mam$CASkew + Mam$TGSkew + Mam$GASkew); summary(A)
#  Estimate Std. Error t value Pr(>|t|)
# (Intercept)   12.917      1.047  12.342  < 2e-16 ***
#  Mam$CTSkew     3.187      1.045   3.049  0.00239 **
#  Mam$CASkew     1.268      1.116   1.136  0.25619
# Mam$TGSkew     2.700      1.558   1.733  0.08361 .
# Mam$GASkew     4.658      2.874   1.621  0.10559
# ---
#  Signif. codes:  0 вЂ***вЂ™ 0.001 вЂ**вЂ™ 0.01 вЂ*вЂ™ 0.05 вЂ.вЂ™ 0.1 вЂ вЂ™ 1
#
# Residual standard error: 0.9818 on 645 degrees of freedom
# Multiple R-squared:  0.2435,	Adjusted R-squared:  0.2388
# F-statistic: 51.91 on 4 and 645 DF,  p-value: < 2.2e-16
AGG = aggregate(list(SynNuc$NeutralA,SynNuc$NeutralT,SynNuc$NeutralG,SynNuc$NeutralC), by = list(SynNuc$Species,SynNuc$Class,SynNuc$Gene), FUN = sum)
names(AGG) = c('Species','Class','Gene','NeutralA','NeutralT','NeutralG','NeutralC')
AGG$CTSkew = (AGG$NeutralC - AGG$NeutralT)/(AGG$NeutralC + AGG$NeutralT); summary(AGG$TCSkew) # GA on heavy
############# GENERATION LENGTH FOR MAMMALS
GT = read.table("../../Body/1Raw/GenerationLenghtforMammals.xlsx.txt", header = TRUE, sep = '\t')
GT$Species = gsub(' ','_',GT$Scientific_name)
length(unique(GT$Species))
summary(GT$AdultBodyMass_g)     # 2        21        71    136058       614 154321304
summary(GT$GenerationLength_d)  # 129.0   624.4  1101.1  1578.8  2064.3 18980.0 # max = 18980 days => 52 years. ok
GT = GT[,c(11,13)]
summary(GT$GenerationLength_d)
M = merge(AGG,GT, by ='Species')
summary(M$GenerationLength_d) # median = 2190.0
ShortLived = unique(M[M$GenerationLength_d <= median(M$GenerationLength_d),]$Species); length(ShortLived)
LongLived = unique(M[M$GenerationLength_d  > median(M$GenerationLength_d),]$Species);  length(LongLived)
MShort = M[M$Species %in% ShortLived,]; MShort$GT = 'short lived'; MLong = M[M$Species %in% LongLived,]; MLong$GT = 'long lived';
M = rbind(MShort,MLong)
M$Gene =  ordered(M$Gene, levels = c('COX1','COX2','ATP8','ATP6','COX3','ND3','ND4L','ND4','ND5','ND6','CytB', 'ND1','ND2'))
# M$Gene =  ordered(M$Gene, levels = c('COX1','COX2','ATP8','ATP6','COX3','ND3','ND4L','ND4','ND5','CytB'))
M = M[order(M$Gene),]
M = M[!M$Gene %in% c('ND6','ND1','ND2'),]
M$Gene =  ordered(M$Gene, levels = c('COX1','COX2','ATP8','ATP6','COX3','ND3','ND4L','ND4','ND5','CytB'))
boxplot(CTSkew ~ GT*Gene, data = M,  notch = TRUE, outline = FALSE, las = 2, col = c('red','green'), main = 'Mammalia, GA skew')
library("ggpubr")
pdf("../../Body/4Figures/WholeGenomeAnalyses.NoOverlap.AGSkew.R.02.pdf", height = 10, width = 20)
ggboxplot(M, "Gene", "CTSkew",
fill = "GT", palette = c("#5c76d6", "#d65c5c"), xlab="Genes", ylab="GA skew", title = "GA skew in long- vs shortlived mammals", legend.title = "Mammals", width = 0.7, notch = TRUE)
dev.off()
