LateTv = nrow(TempLate[TempLate$Subs %in% VecOfTransversionSubstitutions,])
Line = c(Tissue,EarlyTs,EarlyTv,LateTs,LateTv,LateMed,EarlyMed);
Final = rbind(Final,Line)
}
Final = data.frame(Final); names(Final)=c('Tissue','EarlyTs','EarlyTv','LateTs','LateTv','LateMed','EarlyMed')
for (i in 2:7) {Final[,i] = as.numeric(as.character(Final[,i]))}
Final$EarlyTsTv = Final$EarlyTs/Final$EarlyTv
Final$LateTsTv = Final$LateTs/Final$LateTv
Final$AllTsTv = (Final$LateTs+Final$EarlyTs)/(Final$LateTv + Final$EarlyTv)
Final$OddsRatio = Final$LateTsTv/Final$EarlyTsTv
FinalShort = Final[!is.na(Final$OddsRatio) & Final$OddsRatio != Inf,]  # 36 instead of 40
wilcox.test(FinalShort$LateTsTv,FinalShort$EarlyTsTv, paired = TRUE) # 0.0006272
## plot segments: dev.off() one cancer is missing here
plot(NA, xlim=c(-0.2,1.2), ylim=c(0,72), xlab='', ylab="TsTv")
for (Tissue in CancerType)
{
Temp = FinalShort[FinalShort$Tissue == Tissue,]
segments(Temp$LateMed, Temp$LateTsTv, Temp$EarlyMed, Temp$EarlyTsTv, col = rgb(0.1,0.1,0.1,0.2), lwd = 3) # rgb(red, green, blue, alpha, names = NULL, maxColorValue = 1)
}
CancerTypeSpecificData = Final
##### APPROACH PATIENT-WISE: rank all mutations according to VAF and check probability to have transition as a function of the order.
length(unique(ALL$index))
length(unique(ALL$sample))
ALL$Number = 1
AGG = aggregate(ALL$Number, by = list(ALL$sample), FUN = sum); names(AGG)=c('sample','NumberOfMut'); summary(AGG$NumberOfMut) # median = 3
VecOfPatientsWithManyMut = AGG[AGG$NumberOfMut>=2,]$sample; length(VecOfPatientsWithManyMut) # 1253 1715
Final = c()
for (i in 1:length(VecOfPatientsWithManyMut))
{  # i = 3
Temp = ALL[ALL$sample == VecOfPatientsWithManyMut[i],]
if (nrow(Temp[Temp$Subs %in% VecOfTransitionSubstitutions,]) > 0 & nrow(Temp[Temp$Subs %in% VecOfTransversionSubstitutions,]) > 0)
{
VafTs = mean(Temp[Temp$Subs %in% VecOfTransitionSubstitutions,]$TumorVarFreq);
VafTv = mean(Temp[Temp$Subs %in% VecOfTransversionSubstitutions,]$TumorVarFreq);
Final=rbind(Final,c(VecOfPatientsWithManyMut[i],VafTs,VafTv))
}
}
Final = data.frame(Final); names(Final)=c('sample','VafTs','VafTv')
Final$RatioVafTsVafTv = log2(Final$VafTs/Final$VafTv); summary(Final$RatioVafTsVafTv) # higher than zero!!!
hist(Final$RatioVafTsVafTv, breaks = 50, main = '', xlab = 'log2(VAF(Ts)/VAF(Tv))') # I can color or plot separately different types of cancers
abline(v = 0, col = 'red', lwd = 3)
wilcox.test(Final$VafTs,Final$VafTv, paired = TRUE) # p = p-value = 5.109e-15 (419 observations)
######## glycolisis:
#### from Andrey Yurchenko and https://www.nature.com/articles/s41467-018-07232-8#MOESM5
Tissue =c('PRAD','LUNG','COAD','BRCA','KIRC','BLAD','CESC','CHOL','COADREAD','ESCA','GBM','HNSC','THCA','THYM','STAD','SKCM','SARC','READ','PCPG','PAAD','LUSC','LUAD','LIHC','KIRP','KICH','UCEC','MSKCCTvN')
Glycolysis=c(12.38978,21.35984,59.51087,129.9068,99.2046,12.13424,14.89038,49.08608,26.55547,7.960641,3.820559,60.00785,46.08075,20.28906,19.16362,3.914527,10.47275,25.35386,43.00674,0.5165879,64.19461,25.59793,14.61152,77.26818,74.4774,29.7614,3.739063)
Glyc = data.frame(Tissue,Glycolysis)
Glyc = merge(CancerTypeSpecificData,Glyc, by = 'Tissue')
cor.test(Glyc$AllTsTv,Glyc$Glycolysis, method = 'spearman') # p = 0.014, rho 0.5706914
plot(Glyc$AllTsTv,Glyc$Glycolysis,pch = '.')
text(Glyc$AllTsTv,Glyc$Glycolysis,Glyc$Tissue, cex = )
cor.test(Glyc$LateTsTv,Glyc$Glycolysis, method = 'spearman')  # p = 0.003583, -0.6487607
cor.test(Glyc$EarlyTsTv,Glyc$Glycolysis, method = 'spearman') # p = 0.05017,  -0.4679755
Glyc = Glyc[order(Glyc$Glycolysis),]
boxplot(Glyc$AllTsTv[1:5],Glyc$AllTsTv[14:18], names = c('oxidative','glycolitic'), ylab = 'Ts/Tv')
wilcox.test(Glyc$AllTsTv[1:5],Glyc$AllTsTv[14:18], alternative = 'greater')
Tissue =c('PRAD','LUNG','COAD','BRCA','KIRC','BLAD','CESC','CHOL','COADREAD','ESCA','GBM','HNSC','THCA','THYM','STAD','SKCM','SARC','READ','PCPG','PAAD','LUSC','LUAD','LIHC','KIRP','KICH','UCEC','MSKCCTvN')
Glycolysis=c(12.38978,21.35984,59.51087,129.9068,99.2046,12.13424,14.89038,49.08608,26.55547,7.960641,3.820559,60.00785,46.08075,20.28906,19.16362,3.914527,10.47275,25.35386,43.00674,0.5165879,64.19461,25.59793,14.61152,77.26818,74.4774,29.7614,3.739063)
Glycolysis = data.frame(Tissue,Glycolysis)
ALL = merge(ALL,Glycolysis, by = 'Tissue')
View(ALL)
tissue =c('PRAD','LUNG','COAD','BRCA','KIRC','BLAD','CESC','CHOL','COADREAD','ESCA','GBM','HNSC','THCA','THYM','STAD','SKCM','SARC','READ','PCPG','PAAD','LUSC','LUAD','LIHC','KIRP','KICH','UCEC','MSKCCTvN')
Glycolysis=c(12.38978,21.35984,59.51087,129.9068,99.2046,12.13424,14.89038,49.08608,26.55547,7.960641,3.820559,60.00785,46.08075,20.28906,19.16362,3.914527,10.47275,25.35386,43.00674,0.5165879,64.19461,25.59793,14.61152,77.26818,74.4774,29.7614,3.739063)
Glycolysis = data.frame(tissue,Glycolysis)
ALL = merge(ALL,Glycolysis, by = 'tissue')
ALL_T_C = ALL[ALL$Subs == 'T_C',]
ALL_not_T_C = ALL[ALL$Subs != 'T_C',]  # 936
ALL_not_T_C$T_C = 0
ALL = rbind(ALL_T_C,ALL_not_T_C)
ALL_not_T_C$T_C = 0
ALL = rbind(ALL_T_C,ALL_not_T_C)
ALL_T_C$T_C = 1
ALL = rbind(ALL_T_C,ALL_not_T_C)
View(ALL)
View(ALL)
View(ALL)
glm_1 <-glm(ALL$T_C ~ ALL$Glycolysis + ALL$TumorVarFreq, family = binomial())
summary(glm_1)
ALL$prob <- predict(glm_1, type = 'response') # sqrt(P-EN/pi)
ALL$area = sqrt(ALL$prob/pi)   # area instead of squares!!!
plot(ALL[ALL$T_C == 0,]$Glycolysis ~ ALL[ALL$T_C == 0,]$TumorVarFreq, pch = '', xlim = c(0,1), ylim = c(0,100), xlab = 'VAF', ylab = 'Glykolisis')
# dev.off()
dev.off()
dev.off()
dev.off()
plot(ALL[ALL$T_C == 0,]$Glycolysis ~ ALL[ALL$T_C == 0,]$TumorVarFreq, pch = '', xlim = c(0,1), ylim = c(0,100), xlab = 'VAF', ylab = 'Glykolisis')
plot(ALL[ALL$T_C == 0,]$Glycolysis ~ ALL[ALL$T_C == 0,]$TumorVarFreq, pch = '', xlim = c(0,1), ylim = c(0,100), xlab = 'VAF', ylab = 'Glykolisis')
symbols(ALL[ALL$T_C == 0,]$TumorVarFreq, ALL[ALL$T_C == 0,]$Glycolysis, circles = ALL[ALL$T_C == 0,]$prob, add = TRUE)
plot(ALL[ALL$T_C == 0,]$Glycolysis ~ ALL[ALL$T_C == 0,]$TumorVarFreq, pch = '', xlim = c(0,1), ylim = c(0,100), xlab = 'VAF', ylab = 'Glykolisis')
symbols(ALL[ALL$T_C == 0,]$TumorVarFreq, ALL[ALL$T_C == 0,]$Glycolysis, circles = ALL[ALL$T_C == 0,]$area, add = TRUE)
ALL$area = sqrt(ALL$prob/pi)/10   # area instead of squares!!!
plot(ALL[ALL$T_C == 0,]$Glycolysis ~ ALL[ALL$T_C == 0,]$TumorVarFreq, pch = '', xlim = c(0,1), ylim = c(0,100), xlab = 'VAF', ylab = 'Glykolisis')
symbols(ALL[ALL$T_C == 0,]$TumorVarFreq, ALL[ALL$T_C == 0,]$Glycolysis, circles = ALL[ALL$T_C == 0,]$area, add = TRUE)
plot(ALL[ALL$T_C == 0,]$Glycolysis ~ ALL[ALL$T_C == 0,]$TumorVarFreq, pch = '', xlim = c(0,1), ylim = c(0,100), xlab = 'VAF', ylab = 'Glykolisis')
symbols(ALL[ALL$T_C == 0,]$TumorVarFreq, ALL[ALL$T_C == 0,]$Glycolysis, circles = ALL[ALL$T_C == 0,]$area, add = TRUE)
ALL$prob <- predict(glm_1, type = 'response') # sqrt(P-EN/pi)
ALL$area = sqrt(ALL$prob/pi)/100   # area instead of squares!!!
plot(ALL[ALL$T_C == 0,]$Glycolysis ~ ALL[ALL$T_C == 0,]$TumorVarFreq, pch = '', xlim = c(0,1), ylim = c(0,100), xlab = 'VAF', ylab = 'Glykolisis')
symbols(ALL[ALL$T_C == 0,]$TumorVarFreq, ALL[ALL$T_C == 0,]$Glycolysis, circles = ALL[ALL$T_C == 0,]$area, add = TRUE)
ALL$prob <- predict(glm_1, type = 'response') # sqrt(P-EN/pi)
ALL$area = sqrt(ALL$prob/pi)/500   # area instead of squares!!!
# dev.off()
plot(ALL[ALL$T_C == 0,]$Glycolysis ~ ALL[ALL$T_C == 0,]$TumorVarFreq, pch = '', xlim = c(0,1), ylim = c(0,100), xlab = 'VAF', ylab = 'Glykolisis')
symbols(ALL[ALL$T_C == 0,]$TumorVarFreq, ALL[ALL$T_C == 0,]$Glycolysis, circles = ALL[ALL$T_C == 0,]$area, add = TRUE)
plot(ALL[ALL$T_C == 0,]$Glycolysis ~ ALL[ALL$T_C == 0,]$TumorVarFreq, pch = '', xlim = c(0,1), ylim = c(0,200), xlab = 'VAF', ylab = 'Glykolisis')
symbols(ALL[ALL$T_C == 0,]$TumorVarFreq, ALL[ALL$T_C == 0,]$Glycolysis, circles = ALL[ALL$T_C == 0,]$area, add = TRUE)
glm_1 <-glm(ALL$T_C ~ ALL$Glycolysis + ALL$TumorVarFreq, family = binomial())
summary(glm_1)
ALL$T_C
glm_1 <-glm(ALL$T_C ~ ALL$Glycolysis + ALL$TumorVarFreq, family = binomial())
summary(glm_1)
pdf(file = 'LOG_REGR.1.SUPER_NEW_WITH_AREA.pdf', width = 19, height = 10)
ALL$prob <- predict(glm_1, type = 'response') # sqrt(P-EN/pi)
ALL$area = sqrt(ALL$prob/pi)/500   # area instead of squares!!!
# dev.off()
plot(ALL[ALL$T_C == 0,]$Glycolysis ~ ALL[ALL$T_C == 0,]$TumorVarFreq, pch = '', xlim = c(0,1), ylim = c(0,100), xlab = 'VAF', ylab = 'Glykolisis')
symbols(ALL[ALL$T_C == 0,]$TumorVarFreq, ALL[ALL$T_C == 0,]$Glycolysis, circles = ALL[ALL$T_C == 0,]$area, add = TRUE)
dev.off()
###################################
###### 26.03.2018: Cancer mut Spectrum - before and after tumorogenesis (05.06.2018)
###################################
#### nucleotide content of the human genome: A T G C: 4993	3871	2159	5357
rm(list=ls(all=TRUE))
ALL = read.table("../../Body/1Raw/mtDNA_snv_Oct2016.txt", head = TRUE, sep = '\t')  # 7611
### DERIVE NECESSARY TRAITS:
ALL$TumorVarFreq = ALL$tumor_reads2/(ALL$tumor_reads1 + ALL$tumor_reads2); summary(ALL$TumorVarFreq)  # 0.01000 0.01738 0.04540 0.20268 0.26278 0.99864
ALL$NormalVarFreq = ALL$normal_reads2/(ALL$normal_reads1 + ALL$normal_reads2); summary(ALL$NormalVarFreq)
table(ALL$Levin2012)
#### pdf out
pdf('../../Body/4Figures/CancerTimeOfTumoregenesis01.pdf', height = 15, width = 15)
par(mfrow=c(2,2))
#### DO VAF IN CANCER APPROXIMATE THE TIME OF ORIGIN?
#### if there is a correlation between frequency in normal tissue and in cancer? yes
nrow(ALL)                           # 7611
nrow(ALL[ALL$NormalVarFreq == 0,])  # 2265
nrow(ALL[ALL$NormalVarFreq >  0,])  # 5436
wilcox.test(ALL[ALL$NormalVarFreq >  0,]$TumorVarFreq,ALL[ALL$NormalVarFreq == 0,]$TumorVarFreq) # 0.005325
boxplot(ALL[ALL$NormalVarFreq ==  0,]$TumorVarFreq,ALL[ALL$NormalVarFreq > 0,]$TumorVarFreq, outline = FALSE, notch = TRUE, names = c("ZeroInNormal\nN=2265","NonZeroInNormal\nN=5436"), ylab = 'VafInCancer')
cor.test(ALL$NormalVarFreq,ALL$TumorVarFreq,method = 'spearman') # Rho = 0.06958285, p =  1.226e-09
cor.test(ALL[ALL$NormalVarFreq >  0,]$NormalVarFreq,ALL[ALL$NormalVarFreq >  0,]$TumorVarFreq, method = 'spearman') # Rho = 0.0883715, p =  9.638e-11
# Ts/Tv => three levels.
ALL$Subs = paste(ALL$ref,ALL$var, sep = '_'); table(ALL$Subs)
VecOfTransitionSubstitutions = c('A_G','G_A','C_T','T_C') # all tr
VecOfTransversionSubstitutions = c('C_A','A_C','C_G','G_C','G_T','T_G','T_A','A_T') # ALL Tv
# CancerType = unique(ALL$Tier2); length(CancerType)
CancerType = unique(ALL$tissue); length(CancerType)
####### APPROACH 1:
str(ALL$Subs)
str(VecOfTransitionSubstitutions)
summary(ALL$TumorVarFreq) # 0.01000 0.01738 0.04540 0.20268 0.26278 0.99864
A = nrow(ALL[ALL$TumorVarFreq <= 0.04540 & ALL$Subs %in% VecOfTransitionSubstitutions,])
B = nrow(ALL[ALL$TumorVarFreq <= 0.04540 & ALL$Subs %in% VecOfTransversionSubstitutions,])
C = nrow(ALL[ALL$TumorVarFreq > 0.04540 & ALL$Subs %in% VecOfTransitionSubstitutions,])
D = nrow(ALL[ALL$TumorVarFreq > 0.04540 & ALL$Subs %in% VecOfTransversionSubstitutions,])
X = rbind(c(A,B),c(C,D))
fisher.test(X) # 0.689, p = 2.524e-05
mosaicplot(X)
# X
# 3469  337
# [2,] 3566  239
####### APPROACH 2: do it separately for each cancer type: median in each case should be cancer- specific!!!!
Final = c();
for (Tissue in CancerType)
{  # Tissue = 'Bladder'
# Temp = ALL[ALL$Tier2 == Tissue,]
Temp = ALL[ALL$tissue == Tissue,]
TempLate = Temp[Temp$TumorVarFreq <= median(Temp$TumorVarFreq),]
TempEarly = Temp[Temp$TumorVarFreq  > median(Temp$TumorVarFreq),]
LateMed = median(TempLate$TumorVarFreq)
EarlyMed = median(TempEarly$TumorVarFreq)
EarlyTs = nrow(TempEarly[TempEarly$Subs %in% VecOfTransitionSubstitutions,])
EarlyTv = nrow(TempEarly[TempEarly$Subs %in% VecOfTransversionSubstitutions,])
LateTs = nrow(TempLate[TempLate$Subs %in% VecOfTransitionSubstitutions,])
LateTv = nrow(TempLate[TempLate$Subs %in% VecOfTransversionSubstitutions,])
Line = c(Tissue,EarlyTs,EarlyTv,LateTs,LateTv,LateMed,EarlyMed);
Final = rbind(Final,Line)
}
Final = data.frame(Final); names(Final)=c('Tissue','EarlyTs','EarlyTv','LateTs','LateTv','LateMed','EarlyMed')
for (i in 2:7) {Final[,i] = as.numeric(as.character(Final[,i]))}
Final$EarlyTsTv = Final$EarlyTs/Final$EarlyTv
Final$LateTsTv = Final$LateTs/Final$LateTv
Final$AllTsTv = (Final$LateTs+Final$EarlyTs)/(Final$LateTv + Final$EarlyTv)
Final$OddsRatio = Final$LateTsTv/Final$EarlyTsTv
FinalShort = Final[!is.na(Final$OddsRatio) & Final$OddsRatio != Inf,]  # 36 instead of 40
wilcox.test(FinalShort$LateTsTv,FinalShort$EarlyTsTv, paired = TRUE) # 0.0006272
## plot segments: dev.off() one cancer is missing here
plot(NA, xlim=c(-0.2,1.2), ylim=c(0,72), xlab='', ylab="TsTv")
for (Tissue in CancerType)
{
Temp = FinalShort[FinalShort$Tissue == Tissue,]
segments(Temp$LateMed, Temp$LateTsTv, Temp$EarlyMed, Temp$EarlyTsTv, col = rgb(0.1,0.1,0.1,0.2), lwd = 3) # rgb(red, green, blue, alpha, names = NULL, maxColorValue = 1)
}
CancerTypeSpecificData = Final
##### APPROACH PATIENT-WISE: rank all mutations according to VAF and check probability to have transition as a function of the order.
length(unique(ALL$index))
length(unique(ALL$sample))
ALL$Number = 1
AGG = aggregate(ALL$Number, by = list(ALL$sample), FUN = sum); names(AGG)=c('sample','NumberOfMut'); summary(AGG$NumberOfMut) # median = 3
VecOfPatientsWithManyMut = AGG[AGG$NumberOfMut>=2,]$sample; length(VecOfPatientsWithManyMut) # 1253 1715
Final = c()
for (i in 1:length(VecOfPatientsWithManyMut))
{  # i = 3
Temp = ALL[ALL$sample == VecOfPatientsWithManyMut[i],]
if (nrow(Temp[Temp$Subs %in% VecOfTransitionSubstitutions,]) > 0 & nrow(Temp[Temp$Subs %in% VecOfTransversionSubstitutions,]) > 0)
{
VafTs = mean(Temp[Temp$Subs %in% VecOfTransitionSubstitutions,]$TumorVarFreq);
VafTv = mean(Temp[Temp$Subs %in% VecOfTransversionSubstitutions,]$TumorVarFreq);
Final=rbind(Final,c(VecOfPatientsWithManyMut[i],VafTs,VafTv))
}
}
Final = data.frame(Final); names(Final)=c('sample','VafTs','VafTv')
Final$RatioVafTsVafTv = log2(Final$VafTs/Final$VafTv); summary(Final$RatioVafTsVafTv) # higher than zero!!!
hist(Final$RatioVafTsVafTv, breaks = 50, main = '', xlab = 'log2(VAF(Ts)/VAF(Tv))') # I can color or plot separately different types of cancers
abline(v = 0, col = 'red', lwd = 3)
wilcox.test(Final$VafTs,Final$VafTv, paired = TRUE) # p = p-value = 5.109e-15 (419 observations)
######## glycolisis:
#### from Andrey Yurchenko and https://www.nature.com/articles/s41467-018-07232-8#MOESM5
Tissue =c('PRAD','LUNG','COAD','BRCA','KIRC','BLAD','CESC','CHOL','COADREAD','ESCA','GBM','HNSC','THCA','THYM','STAD','SKCM','SARC','READ','PCPG','PAAD','LUSC','LUAD','LIHC','KIRP','KICH','UCEC','MSKCCTvN')
Glycolysis=c(12.38978,21.35984,59.51087,129.9068,99.2046,12.13424,14.89038,49.08608,26.55547,7.960641,3.820559,60.00785,46.08075,20.28906,19.16362,3.914527,10.47275,25.35386,43.00674,0.5165879,64.19461,25.59793,14.61152,77.26818,74.4774,29.7614,3.739063)
Glyc = data.frame(Tissue,Glycolysis)
Glyc = merge(CancerTypeSpecificData,Glyc, by = 'Tissue')
cor.test(Glyc$AllTsTv,Glyc$Glycolysis, method = 'spearman') # p = 0.014, rho 0.5706914
plot(Glyc$AllTsTv,Glyc$Glycolysis,pch = '.')
text(Glyc$AllTsTv,Glyc$Glycolysis,Glyc$Tissue, cex = )
cor.test(Glyc$LateTsTv,Glyc$Glycolysis, method = 'spearman')  # p = 0.003583, -0.6487607
cor.test(Glyc$EarlyTsTv,Glyc$Glycolysis, method = 'spearman') # p = 0.05017,  -0.4679755
Glyc = Glyc[order(Glyc$Glycolysis),]
boxplot(Glyc$AllTsTv[1:5],Glyc$AllTsTv[14:18], names = c('oxidative','glycolitic'), ylab = 'Ts/Tv')
wilcox.test(Glyc$AllTsTv[1:5],Glyc$AllTsTv[14:18], alternative = 'greater')
### do it better = sort each variant by VAF and calculate Ts/Tv based on the last 20 substitutions
#### logistic regression: T>C as a function of CancerGlycolisis and VAF
tissue =c('PRAD','LUNG','COAD','BRCA','KIRC','BLAD','CESC','CHOL','COADREAD','ESCA','GBM','HNSC','THCA','THYM','STAD','SKCM','SARC','READ','PCPG','PAAD','LUSC','LUAD','LIHC','KIRP','KICH','UCEC','MSKCCTvN')
Glycolysis=c(12.38978,21.35984,59.51087,129.9068,99.2046,12.13424,14.89038,49.08608,26.55547,7.960641,3.820559,60.00785,46.08075,20.28906,19.16362,3.914527,10.47275,25.35386,43.00674,0.5165879,64.19461,25.59793,14.61152,77.26818,74.4774,29.7614,3.739063)
Glycolysis = data.frame(tissue,Glycolysis)
ALL = merge(ALL,Glycolysis, by = 'tissue')  # 3348
ALL_T_C = ALL[ALL$Subs == 'T_C',]  # 936
ALL_T_C$T_C = 1
ALL_not_T_C = ALL[ALL$Subs != 'T_C',]  # 2412
ALL_not_T_C$T_C = 0
ALL = rbind(ALL_T_C,ALL_not_T_C)
### logistic regression:
glm_1 <-glm(ALL$T_C ~ ALL$Glycolysis + ALL$TumorVarFreq, family = binomial())
summary(glm_1)
ALL$prob <- predict(glm_1, type = 'response') # sqrt(P-EN/pi)
ALL$area = sqrt(ALL$prob/pi)/500   # area instead of squares!!!
# dev.off()
plot(ALL[ALL$T_C == 0,]$Glycolysis ~ ALL[ALL$T_C == 0,]$TumorVarFreq, pch = '', xlim = c(0,1), ylim = c(0,100), xlab = 'VAF', ylab = 'Glykolisis')
symbols(ALL[ALL$T_C == 0,]$TumorVarFreq, ALL[ALL$T_C == 0,]$Glycolysis, circles = ALL[ALL$T_C == 0,]$area, add = TRUE)
par(new = TRUE)
plot(RL[RL$EN_1_LC_0 == 1,]$lnDN_DS ~ RL[RL$EN_1_LC_0 == 1,]$lnBM_g, pch = '', xlim = c(2,20), ylim = c(-5.5,-1.4), xlab = 'ln(Body mass(gramm))', ylab = 'ln(Kn/Ks)')
symbols(RL[RL$EN_1_LC_0 == 1,]$lnBM_g, RL[RL$EN_1_LC_0 == 1,]$lnDN_DS, circles = RL[RL$EN_1_LC_0 == 1,]$prob, add = TRUE, fg = 'red', lwd = 2)  # , bg = 'red'
dev.off()
###################################
###### 26.03.2018: Cancer mut Spectrum - before and after tumorogenesis (05.06.2018)
###################################
#### nucleotide content of the human genome: A T G C: 4993	3871	2159	5357
rm(list=ls(all=TRUE))
ALL = read.table("../../Body/1Raw/mtDNA_snv_Oct2016.txt", head = TRUE, sep = '\t')  # 7611
### DERIVE NECESSARY TRAITS:
ALL$TumorVarFreq = ALL$tumor_reads2/(ALL$tumor_reads1 + ALL$tumor_reads2); summary(ALL$TumorVarFreq)  # 0.01000 0.01738 0.04540 0.20268 0.26278 0.99864
ALL$NormalVarFreq = ALL$normal_reads2/(ALL$normal_reads1 + ALL$normal_reads2); summary(ALL$NormalVarFreq)
table(ALL$Levin2012)
#### pdf out
pdf('../../Body/4Figures/CancerTimeOfTumoregenesis01.pdf', height = 15, width = 15)
par(mfrow=c(2,2))
#### DO VAF IN CANCER APPROXIMATE THE TIME OF ORIGIN?
#### if there is a correlation between frequency in normal tissue and in cancer? yes
nrow(ALL)                           # 7611
nrow(ALL[ALL$NormalVarFreq == 0,])  # 2265
nrow(ALL[ALL$NormalVarFreq >  0,])  # 5436
wilcox.test(ALL[ALL$NormalVarFreq >  0,]$TumorVarFreq,ALL[ALL$NormalVarFreq == 0,]$TumorVarFreq) # 0.005325
boxplot(ALL[ALL$NormalVarFreq ==  0,]$TumorVarFreq,ALL[ALL$NormalVarFreq > 0,]$TumorVarFreq, outline = FALSE, notch = TRUE, names = c("ZeroInNormal\nN=2265","NonZeroInNormal\nN=5436"), ylab = 'VafInCancer')
cor.test(ALL$NormalVarFreq,ALL$TumorVarFreq,method = 'spearman') # Rho = 0.06958285, p =  1.226e-09
cor.test(ALL[ALL$NormalVarFreq >  0,]$NormalVarFreq,ALL[ALL$NormalVarFreq >  0,]$TumorVarFreq, method = 'spearman') # Rho = 0.0883715, p =  9.638e-11
# Ts/Tv => three levels.
ALL$Subs = paste(ALL$ref,ALL$var, sep = '_'); table(ALL$Subs)
VecOfTransitionSubstitutions = c('A_G','G_A','C_T','T_C') # all tr
VecOfTransversionSubstitutions = c('C_A','A_C','C_G','G_C','G_T','T_G','T_A','A_T') # ALL Tv
# CancerType = unique(ALL$Tier2); length(CancerType)
CancerType = unique(ALL$tissue); length(CancerType)
####### APPROACH 1:
str(ALL$Subs)
str(VecOfTransitionSubstitutions)
summary(ALL$TumorVarFreq) # 0.01000 0.01738 0.04540 0.20268 0.26278 0.99864
A = nrow(ALL[ALL$TumorVarFreq <= 0.04540 & ALL$Subs %in% VecOfTransitionSubstitutions,])
B = nrow(ALL[ALL$TumorVarFreq <= 0.04540 & ALL$Subs %in% VecOfTransversionSubstitutions,])
C = nrow(ALL[ALL$TumorVarFreq > 0.04540 & ALL$Subs %in% VecOfTransitionSubstitutions,])
D = nrow(ALL[ALL$TumorVarFreq > 0.04540 & ALL$Subs %in% VecOfTransversionSubstitutions,])
X = rbind(c(A,B),c(C,D))
fisher.test(X) # 0.689, p = 2.524e-05
mosaicplot(X)
# X
# 3469  337
# [2,] 3566  239
####### APPROACH 2: do it separately for each cancer type: median in each case should be cancer- specific!!!!
Final = c();
for (Tissue in CancerType)
{  # Tissue = 'Bladder'
# Temp = ALL[ALL$Tier2 == Tissue,]
Temp = ALL[ALL$tissue == Tissue,]
TempLate = Temp[Temp$TumorVarFreq <= median(Temp$TumorVarFreq),]
TempEarly = Temp[Temp$TumorVarFreq  > median(Temp$TumorVarFreq),]
LateMed = median(TempLate$TumorVarFreq)
EarlyMed = median(TempEarly$TumorVarFreq)
EarlyTs = nrow(TempEarly[TempEarly$Subs %in% VecOfTransitionSubstitutions,])
EarlyTv = nrow(TempEarly[TempEarly$Subs %in% VecOfTransversionSubstitutions,])
LateTs = nrow(TempLate[TempLate$Subs %in% VecOfTransitionSubstitutions,])
LateTv = nrow(TempLate[TempLate$Subs %in% VecOfTransversionSubstitutions,])
Line = c(Tissue,EarlyTs,EarlyTv,LateTs,LateTv,LateMed,EarlyMed);
Final = rbind(Final,Line)
}
Final = data.frame(Final); names(Final)=c('Tissue','EarlyTs','EarlyTv','LateTs','LateTv','LateMed','EarlyMed')
for (i in 2:7) {Final[,i] = as.numeric(as.character(Final[,i]))}
Final$EarlyTsTv = Final$EarlyTs/Final$EarlyTv
Final$LateTsTv = Final$LateTs/Final$LateTv
Final$AllTsTv = (Final$LateTs+Final$EarlyTs)/(Final$LateTv + Final$EarlyTv)
Final$OddsRatio = Final$LateTsTv/Final$EarlyTsTv
FinalShort = Final[!is.na(Final$OddsRatio) & Final$OddsRatio != Inf,]  # 36 instead of 40
wilcox.test(FinalShort$LateTsTv,FinalShort$EarlyTsTv, paired = TRUE) # 0.0006272
## plot segments: dev.off() one cancer is missing here
plot(NA, xlim=c(-0.2,1.2), ylim=c(0,72), xlab='', ylab="TsTv")
for (Tissue in CancerType)
{
Temp = FinalShort[FinalShort$Tissue == Tissue,]
segments(Temp$LateMed, Temp$LateTsTv, Temp$EarlyMed, Temp$EarlyTsTv, col = rgb(0.1,0.1,0.1,0.2), lwd = 3) # rgb(red, green, blue, alpha, names = NULL, maxColorValue = 1)
}
CancerTypeSpecificData = Final
##### APPROACH PATIENT-WISE: rank all mutations according to VAF and check probability to have transition as a function of the order.
length(unique(ALL$index))
length(unique(ALL$sample))
ALL$Number = 1
AGG = aggregate(ALL$Number, by = list(ALL$sample), FUN = sum); names(AGG)=c('sample','NumberOfMut'); summary(AGG$NumberOfMut) # median = 3
VecOfPatientsWithManyMut = AGG[AGG$NumberOfMut>=2,]$sample; length(VecOfPatientsWithManyMut) # 1253 1715
Final = c()
for (i in 1:length(VecOfPatientsWithManyMut))
{  # i = 3
Temp = ALL[ALL$sample == VecOfPatientsWithManyMut[i],]
if (nrow(Temp[Temp$Subs %in% VecOfTransitionSubstitutions,]) > 0 & nrow(Temp[Temp$Subs %in% VecOfTransversionSubstitutions,]) > 0)
{
VafTs = mean(Temp[Temp$Subs %in% VecOfTransitionSubstitutions,]$TumorVarFreq);
VafTv = mean(Temp[Temp$Subs %in% VecOfTransversionSubstitutions,]$TumorVarFreq);
Final=rbind(Final,c(VecOfPatientsWithManyMut[i],VafTs,VafTv))
}
}
Final = data.frame(Final); names(Final)=c('sample','VafTs','VafTv')
Final$RatioVafTsVafTv = log2(Final$VafTs/Final$VafTv); summary(Final$RatioVafTsVafTv) # higher than zero!!!
hist(Final$RatioVafTsVafTv, breaks = 50, main = '', xlab = 'log2(VAF(Ts)/VAF(Tv))') # I can color or plot separately different types of cancers
abline(v = 0, col = 'red', lwd = 3)
wilcox.test(Final$VafTs,Final$VafTv, paired = TRUE) # p = p-value = 5.109e-15 (419 observations)
######## glycolisis:
#### from Andrey Yurchenko and https://www.nature.com/articles/s41467-018-07232-8#MOESM5
Tissue =c('PRAD','LUNG','COAD','BRCA','KIRC','BLAD','CESC','CHOL','COADREAD','ESCA','GBM','HNSC','THCA','THYM','STAD','SKCM','SARC','READ','PCPG','PAAD','LUSC','LUAD','LIHC','KIRP','KICH','UCEC','MSKCCTvN')
Glycolysis=c(12.38978,21.35984,59.51087,129.9068,99.2046,12.13424,14.89038,49.08608,26.55547,7.960641,3.820559,60.00785,46.08075,20.28906,19.16362,3.914527,10.47275,25.35386,43.00674,0.5165879,64.19461,25.59793,14.61152,77.26818,74.4774,29.7614,3.739063)
Glyc = data.frame(Tissue,Glycolysis)
Glyc = merge(CancerTypeSpecificData,Glyc, by = 'Tissue')
cor.test(Glyc$AllTsTv,Glyc$Glycolysis, method = 'spearman') # p = 0.014, rho 0.5706914
plot(Glyc$AllTsTv,Glyc$Glycolysis,pch = '.')
text(Glyc$AllTsTv,Glyc$Glycolysis,Glyc$Tissue, cex = )
cor.test(Glyc$LateTsTv,Glyc$Glycolysis, method = 'spearman')  # p = 0.003583, -0.6487607
cor.test(Glyc$EarlyTsTv,Glyc$Glycolysis, method = 'spearman') # p = 0.05017,  -0.4679755
Glyc = Glyc[order(Glyc$Glycolysis),]
boxplot(Glyc$AllTsTv[1:5],Glyc$AllTsTv[14:18], names = c('oxidative','glycolitic'), ylab = 'Ts/Tv')
wilcox.test(Glyc$AllTsTv[1:5],Glyc$AllTsTv[14:18], alternative = 'greater')
### do it better = sort each variant by VAF and calculate Ts/Tv based on the last 20 substitutions
#### logistic regression: T>C as a function of CancerGlycolisis and VAF
tissue =c('PRAD','LUNG','COAD','BRCA','KIRC','BLAD','CESC','CHOL','COADREAD','ESCA','GBM','HNSC','THCA','THYM','STAD','SKCM','SARC','READ','PCPG','PAAD','LUSC','LUAD','LIHC','KIRP','KICH','UCEC','MSKCCTvN')
Glycolysis=c(12.38978,21.35984,59.51087,129.9068,99.2046,12.13424,14.89038,49.08608,26.55547,7.960641,3.820559,60.00785,46.08075,20.28906,19.16362,3.914527,10.47275,25.35386,43.00674,0.5165879,64.19461,25.59793,14.61152,77.26818,74.4774,29.7614,3.739063)
Glycolysis = data.frame(tissue,Glycolysis)
ALL = merge(ALL,Glycolysis, by = 'tissue')  # 3348
ALL_T_C = ALL[ALL$Subs == 'T_C',]  # 936
ALL_T_C$T_C = 1
ALL_not_T_C = ALL[ALL$Subs != 'T_C',]  # 2412
ALL_not_T_C$T_C = 0
ALL = rbind(ALL_T_C,ALL_not_T_C)
### logistic regression:
glm_1 <-glm(ALL$T_C ~ ALL$Glycolysis + ALL$TumorVarFreq, family = binomial())
summary(glm_1)
ALL$prob <- predict(glm_1, type = 'response') # sqrt(P-EN/pi)
ALL$area = sqrt(ALL$prob/pi)/500   # area instead of squares!!!
plot(ALL[ALL$T_C == 0,]$Glycolysis ~ ALL[ALL$T_C == 0,]$TumorVarFreq, pch = '', xlim = c(0,1), ylim = c(0,100), xlab = 'VAF', ylab = 'Glykolisis')
symbols(ALL[ALL$T_C == 0,]$TumorVarFreq, ALL[ALL$T_C == 0,]$Glycolysis, circles = ALL[ALL$T_C == 0,]$area, add = TRUE)
dev.off()
###################################
###### 26.03.2018: Cancer mut Spectrum - before and after tumorogenesis (05.06.2018)
###################################
#### nucleotide content of the human genome: A T G C: 4993	3871	2159	5357
rm(list=ls(all=TRUE))
ALL = read.table("../../Body/1Raw/mtDNA_snv_Oct2016.txt", head = TRUE, sep = '\t')  # 7611
### DERIVE NECESSARY TRAITS:
ALL$TumorVarFreq = ALL$tumor_reads2/(ALL$tumor_reads1 + ALL$tumor_reads2); summary(ALL$TumorVarFreq)  # 0.01000 0.01738 0.04540 0.20268 0.26278 0.99864
ALL$NormalVarFreq = ALL$normal_reads2/(ALL$normal_reads1 + ALL$normal_reads2); summary(ALL$NormalVarFreq)
table(ALL$Levin2012)
#### pdf out
pdf('../../Body/4Figures/CancerTimeOfTumoregenesis01.pdf', height = 30, width = 30)
par(mfrow=c(2,2))
#### DO VAF IN CANCER APPROXIMATE THE TIME OF ORIGIN?
#### if there is a correlation between frequency in normal tissue and in cancer? yes
nrow(ALL)                           # 7611
nrow(ALL[ALL$NormalVarFreq == 0,])  # 2265
nrow(ALL[ALL$NormalVarFreq >  0,])  # 5436
wilcox.test(ALL[ALL$NormalVarFreq >  0,]$TumorVarFreq,ALL[ALL$NormalVarFreq == 0,]$TumorVarFreq) # 0.005325
boxplot(ALL[ALL$NormalVarFreq ==  0,]$TumorVarFreq,ALL[ALL$NormalVarFreq > 0,]$TumorVarFreq, outline = FALSE, notch = TRUE, names = c("ZeroInNormal\nN=2265","NonZeroInNormal\nN=5436"), ylab = 'VafInCancer')
cor.test(ALL$NormalVarFreq,ALL$TumorVarFreq,method = 'spearman') # Rho = 0.06958285, p =  1.226e-09
cor.test(ALL[ALL$NormalVarFreq >  0,]$NormalVarFreq,ALL[ALL$NormalVarFreq >  0,]$TumorVarFreq, method = 'spearman') # Rho = 0.0883715, p =  9.638e-11
# Ts/Tv => three levels.
ALL$Subs = paste(ALL$ref,ALL$var, sep = '_'); table(ALL$Subs)
VecOfTransitionSubstitutions = c('A_G','G_A','C_T','T_C') # all tr
VecOfTransversionSubstitutions = c('C_A','A_C','C_G','G_C','G_T','T_G','T_A','A_T') # ALL Tv
# CancerType = unique(ALL$Tier2); length(CancerType)
CancerType = unique(ALL$tissue); length(CancerType)
####### APPROACH 1:
str(ALL$Subs)
str(VecOfTransitionSubstitutions)
summary(ALL$TumorVarFreq) # 0.01000 0.01738 0.04540 0.20268 0.26278 0.99864
A = nrow(ALL[ALL$TumorVarFreq <= 0.04540 & ALL$Subs %in% VecOfTransitionSubstitutions,])
B = nrow(ALL[ALL$TumorVarFreq <= 0.04540 & ALL$Subs %in% VecOfTransversionSubstitutions,])
C = nrow(ALL[ALL$TumorVarFreq > 0.04540 & ALL$Subs %in% VecOfTransitionSubstitutions,])
D = nrow(ALL[ALL$TumorVarFreq > 0.04540 & ALL$Subs %in% VecOfTransversionSubstitutions,])
X = rbind(c(A,B),c(C,D))
fisher.test(X) # 0.689, p = 2.524e-05
mosaicplot(X)
# X
# 3469  337
# [2,] 3566  239
####### APPROACH 2: do it separately for each cancer type: median in each case should be cancer- specific!!!!
Final = c();
for (Tissue in CancerType)
{  # Tissue = 'Bladder'
# Temp = ALL[ALL$Tier2 == Tissue,]
Temp = ALL[ALL$tissue == Tissue,]
TempLate = Temp[Temp$TumorVarFreq <= median(Temp$TumorVarFreq),]
TempEarly = Temp[Temp$TumorVarFreq  > median(Temp$TumorVarFreq),]
LateMed = median(TempLate$TumorVarFreq)
EarlyMed = median(TempEarly$TumorVarFreq)
EarlyTs = nrow(TempEarly[TempEarly$Subs %in% VecOfTransitionSubstitutions,])
EarlyTv = nrow(TempEarly[TempEarly$Subs %in% VecOfTransversionSubstitutions,])
LateTs = nrow(TempLate[TempLate$Subs %in% VecOfTransitionSubstitutions,])
LateTv = nrow(TempLate[TempLate$Subs %in% VecOfTransversionSubstitutions,])
Line = c(Tissue,EarlyTs,EarlyTv,LateTs,LateTv,LateMed,EarlyMed);
Final = rbind(Final,Line)
}
Final = data.frame(Final); names(Final)=c('Tissue','EarlyTs','EarlyTv','LateTs','LateTv','LateMed','EarlyMed')
for (i in 2:7) {Final[,i] = as.numeric(as.character(Final[,i]))}
Final$EarlyTsTv = Final$EarlyTs/Final$EarlyTv
Final$LateTsTv = Final$LateTs/Final$LateTv
Final$AllTsTv = (Final$LateTs+Final$EarlyTs)/(Final$LateTv + Final$EarlyTv)
Final$OddsRatio = Final$LateTsTv/Final$EarlyTsTv
FinalShort = Final[!is.na(Final$OddsRatio) & Final$OddsRatio != Inf,]  # 36 instead of 40
wilcox.test(FinalShort$LateTsTv,FinalShort$EarlyTsTv, paired = TRUE) # 0.0006272
## plot segments: dev.off() one cancer is missing here
plot(NA, xlim=c(-0.2,1.2), ylim=c(0,72), xlab='', ylab="TsTv")
for (Tissue in CancerType)
{
Temp = FinalShort[FinalShort$Tissue == Tissue,]
segments(Temp$LateMed, Temp$LateTsTv, Temp$EarlyMed, Temp$EarlyTsTv, col = rgb(0.1,0.1,0.1,0.2), lwd = 3) # rgb(red, green, blue, alpha, names = NULL, maxColorValue = 1)
}
CancerTypeSpecificData = Final
##### APPROACH PATIENT-WISE: rank all mutations according to VAF and check probability to have transition as a function of the order.
length(unique(ALL$index))
length(unique(ALL$sample))
ALL$Number = 1
AGG = aggregate(ALL$Number, by = list(ALL$sample), FUN = sum); names(AGG)=c('sample','NumberOfMut'); summary(AGG$NumberOfMut) # median = 3
VecOfPatientsWithManyMut = AGG[AGG$NumberOfMut>=2,]$sample; length(VecOfPatientsWithManyMut) # 1253 1715
Final = c()
for (i in 1:length(VecOfPatientsWithManyMut))
{  # i = 3
Temp = ALL[ALL$sample == VecOfPatientsWithManyMut[i],]
if (nrow(Temp[Temp$Subs %in% VecOfTransitionSubstitutions,]) > 0 & nrow(Temp[Temp$Subs %in% VecOfTransversionSubstitutions,]) > 0)
{
VafTs = mean(Temp[Temp$Subs %in% VecOfTransitionSubstitutions,]$TumorVarFreq);
VafTv = mean(Temp[Temp$Subs %in% VecOfTransversionSubstitutions,]$TumorVarFreq);
Final=rbind(Final,c(VecOfPatientsWithManyMut[i],VafTs,VafTv))
}
}
Final = data.frame(Final); names(Final)=c('sample','VafTs','VafTv')
Final$RatioVafTsVafTv = log2(Final$VafTs/Final$VafTv); summary(Final$RatioVafTsVafTv) # higher than zero!!!
hist(Final$RatioVafTsVafTv, breaks = 50, main = '', xlab = 'log2(VAF(Ts)/VAF(Tv))') # I can color or plot separately different types of cancers
abline(v = 0, col = 'red', lwd = 3)
wilcox.test(Final$VafTs,Final$VafTv, paired = TRUE) # p = p-value = 5.109e-15 (419 observations)
######## glycolisis:
#### from Andrey Yurchenko and https://www.nature.com/articles/s41467-018-07232-8#MOESM5
Tissue =c('PRAD','LUNG','COAD','BRCA','KIRC','BLAD','CESC','CHOL','COADREAD','ESCA','GBM','HNSC','THCA','THYM','STAD','SKCM','SARC','READ','PCPG','PAAD','LUSC','LUAD','LIHC','KIRP','KICH','UCEC','MSKCCTvN')
Glycolysis=c(12.38978,21.35984,59.51087,129.9068,99.2046,12.13424,14.89038,49.08608,26.55547,7.960641,3.820559,60.00785,46.08075,20.28906,19.16362,3.914527,10.47275,25.35386,43.00674,0.5165879,64.19461,25.59793,14.61152,77.26818,74.4774,29.7614,3.739063)
Glyc = data.frame(Tissue,Glycolysis)
Glyc = merge(CancerTypeSpecificData,Glyc, by = 'Tissue')
cor.test(Glyc$AllTsTv,Glyc$Glycolysis, method = 'spearman') # p = 0.014, rho 0.5706914
plot(Glyc$AllTsTv,Glyc$Glycolysis,pch = '.')
text(Glyc$AllTsTv,Glyc$Glycolysis,Glyc$Tissue, cex = )
cor.test(Glyc$LateTsTv,Glyc$Glycolysis, method = 'spearman')  # p = 0.003583, -0.6487607
cor.test(Glyc$EarlyTsTv,Glyc$Glycolysis, method = 'spearman') # p = 0.05017,  -0.4679755
Glyc = Glyc[order(Glyc$Glycolysis),]
boxplot(Glyc$AllTsTv[1:5],Glyc$AllTsTv[14:18], names = c('oxidative','glycolitic'), ylab = 'Ts/Tv')
wilcox.test(Glyc$AllTsTv[1:5],Glyc$AllTsTv[14:18], alternative = 'greater')
### do it better = sort each variant by VAF and calculate Ts/Tv based on the last 20 substitutions
#### logistic regression: T>C as a function of CancerGlycolisis and VAF
tissue =c('PRAD','LUNG','COAD','BRCA','KIRC','BLAD','CESC','CHOL','COADREAD','ESCA','GBM','HNSC','THCA','THYM','STAD','SKCM','SARC','READ','PCPG','PAAD','LUSC','LUAD','LIHC','KIRP','KICH','UCEC','MSKCCTvN')
Glycolysis=c(12.38978,21.35984,59.51087,129.9068,99.2046,12.13424,14.89038,49.08608,26.55547,7.960641,3.820559,60.00785,46.08075,20.28906,19.16362,3.914527,10.47275,25.35386,43.00674,0.5165879,64.19461,25.59793,14.61152,77.26818,74.4774,29.7614,3.739063)
Glycolysis = data.frame(tissue,Glycolysis)
ALL = merge(ALL,Glycolysis, by = 'tissue')  # 3348
ALL_T_C = ALL[ALL$Subs == 'T_C',]  # 936
ALL_T_C$T_C = 1
ALL_not_T_C = ALL[ALL$Subs != 'T_C',]  # 2412
ALL_not_T_C$T_C = 0
ALL = rbind(ALL_T_C,ALL_not_T_C)
### logistic regression:
glm_1 <-glm(ALL$T_C ~ ALL$Glycolysis + ALL$TumorVarFreq, family = binomial())
summary(glm_1)
ALL$prob <- predict(glm_1, type = 'response') # sqrt(P-EN/pi)
ALL$area = sqrt(ALL$prob/pi)/500   # area instead of squares!!!
plot(ALL[ALL$T_C == 0,]$Glycolysis ~ ALL[ALL$T_C == 0,]$TumorVarFreq, pch = '', xlim = c(0,1), ylim = c(0,100), xlab = 'VAF', ylab = 'Glykolisis')
symbols(ALL[ALL$T_C == 0,]$TumorVarFreq, ALL[ALL$T_C == 0,]$Glycolysis, circles = ALL[ALL$T_C == 0,]$area, add = TRUE)
dev.off()
