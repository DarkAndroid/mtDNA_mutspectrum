TempData = data[, -c('Species', 'Tax')]
TempData = data[, -c(1, 5)]
contrasts <- apply(TempData, 2, pic, tree2)
names(contrasts) = names(TempData)
View(contrasts)
cor.test(contrasts$T..oC.,fish$FrA, method = 'spearman') # a bit positive:                                   # 0.2095367, 0.05283
contrasts <- as.data.frame(apply(TempData, 2, pic, tree2))
names(contrasts) = names(TempData)
cor.test(contrasts$T..oC.,fish$FrA, method = 'spearman') # a bit positive:                                   # 0.2095367, 0.05283
cor.test(contrasts$T..oC., contrasts$FrA, method = 'spearman') # a bit positive:                                   # 0.2095367, 0.05283
cor.test(contrasts$T..oC., contrasts$FrT, method = 'spearman') # a bit negative. Warm fishes live longer!?         # -0.2669443; 0.01297
cor.test(contrasts$T..oC., contrasts$FrA, method = 'spearman') # rho 0.3002067                                 # 0.2095367, 0.05283
cor.test(contrasts$T..oC., contrasts$FrT, method = 'spearman') # -0.2361942         # -0.2669443; 0.01297
cor.test(contrasts$T..oC., contrasts$FrG, method = 'spearman') # a bit negative. Effect of the temperature alone!? # -0.2170128; 0.04475
cor.test(contrasts$T..oC., contrasts$FrC, method = 'spearman') # nothing
c<-lm(contrasts$T..oC. ~ scale(contrasts$FrA) + scale(contrasts$FrT) + scale(contrasts$FrG)); summary(c); # similar negative coefficients -> either T is also partially driven by temperature, or it is indurectly linked through ecology.
b<-lm(contrasts$T..oC. ~ scale(contrasts$FrT) + scale(contrasts$FrG)); summary(b) # similar negative coefficients -> either T is also partially driven by temperature, or it is indurectly linked through ecology.
###################################
###################################
rm(list=ls(all=TRUE))
pdf("../../Body/4Figures/VertebratePolymorphisms.BetweenClassesWithoutNormalization.R.01.pdf", width = 30, height = 20)
ColG = rgb(0.1,0.1,0.1,0.5)
ColT = rgb(0.1,0.1,1,0.5)
ColC = rgb(0.1,1,0.1,0.5)
ColA = rgb(1,0.1,0.1,0.5)
MUT = read.table("../../Body/3Results/Mutational_spectra_in_Chordata_ML.txt", header = TRUE)
length(unique(MUT$Species)) # 2404  SOME SPECIES HAVE THREE WORDS => CUT THE LAST AND MERGE WITH TAXA, OR EVEN CUT TWO LAST AND LEAVE JUST GENUS
Taxa = read.table("../../Body/1Raw/TaxaFromKostya.Names.stat", sep = '\t',header = FALSE)
Taxa$Species = gsub(";.*",'',Taxa$V1); Taxa$Species = gsub(" ",'_',Taxa$Species);
Taxa$Class = gsub(";Chordata;.*",'',Taxa$V1); Taxa$Class = gsub(".*;",'',Taxa$Class); table(Taxa$Class)
Taxa$Class = gsub('Actinopteri','Actinopterygii',Taxa$Class)
Taxa$Class = gsub("Testudines|Squamata|Crocodylia|Sphenodontia",'Reptilia',Taxa$Class)
length(unique(Taxa$Species)) # 1708
table(Taxa$Class)
SpeciesWithoutTaxonomy = setdiff(unique(MUT$Species),unique(Taxa$Species)); length(SpeciesWithoutTaxonomy)
write.table(SpeciesWithoutTaxonomy, "../../Body/2Derived/NeedTaxa.txt", row.names = FALSE, quote = FALSE, col.names = FALSE)
##### FILTER 1: to take only normal substitutions and filter out species with too high fraction (> 5%) of unnormal substitutions
VecOfNormalSubstitutions <- c('A_C','C_A',
'A_G','G_A',
'C_G','G_C',
'C_T','T_C',
'G_T','T_G',
'T_A','A_T')
nrow(MUT)
table(MUT$Subs)   # MANY CRAPPY SUBSTITUTIONS!!!!!!!!!!!!!!!!!! WHY?????????????????????
SP = data.frame(table(MUT$Species)); names(SP) = c('Species','NumberOfAllSubst')
SPN = data.frame(table(MUT[MUT$Subs %in% VecOfNormalSubstitutions,]$Species)); names(SPN) = c('Species','NumberOfNormalSubst')
SP = merge(SP,SPN); SP$FractionOfNormal = SP$NumberOfNormalSubst/SP$NumberOfAllSubst
hist(SP$FractionOfNormal)
summary(SP$FractionOfNormal) # how many to delete? ask to have more than 95% of substitutions as normal
SpeciesToDelete = SP[SP$FractionOfNormal <=0.95,]$Species; length(SpeciesToDelete) # 279 - delete
MUT = MUT[!MUT$Species %in% SpeciesToDelete,]
MUT = MUT[MUT$Subs %in% VecOfNormalSubstitutions,]
##### FILTER 2: Synonymous Substitutions
nrow(MUT) # 461215
MUT = MUT[MUT$AncestralAA == MUT$DescendantAA,]; nrow(MUT) # 395157
##### FILTER 3: fourfold degenerate sites:
VecOfSynFourFoldDegenerateSites <- c('CTT', 'CTC', 'CTA', 'CTG',
'GTT', 'GTC', 'GTA', 'GTG',
'TCT', 'TCC', 'TCA', 'TCG',
'CCT', 'CCC', 'CCA', 'CCG',
'ACT', 'ACC', 'ACA', 'ACG',
'GCT', 'GCC', 'GCA', 'GCG',
'CGT', 'CGC', 'CGA', 'CGG',
'GGT', 'GGC', 'GGA', 'GGG')
length(unique(VecOfSynFourFoldDegenerateSites)) # 32
nrow(MUT) # 395157
MUT = MUT[MUT$AncestorCodon %in% VecOfSynFourFoldDegenerateSites & MUT$DescendantCodon %in% VecOfSynFourFoldDegenerateSites,]; nrow(MUT) # 209120
##### FILTER: Gene
table(MUT$Gene)
# ATP6   ATP8   COX1   COX2   COX3   CytB    ND1    ND2    ND3    ND4   ND4L
# 9752    625  13233   4264   4873 109049  14314  33809   2635  14511   2055  # there are quite many genes - do I need to analyse all of them focus on CYTB? Better - all and from time to time to check that results based on CYTB only are robust!!!
MUT = merge(MUT,Taxa, all.x = TRUE)  ##### NOT ALL SPECIES HAVE TAXONOMY!!!!
##### derive class specific spectra without normalization
Equil = c()
par(mfrow = c(1,5))
VecOfClasses = c('Actinopterygii','Amphibia','Reptilia','Mammalia','Aves')
for (i in 1:length(VecOfClasses))
{ # i = 1
Temp = MUT[MUT$Class == VecOfClasses[i],]
NumberOfSpecies = length(unique(Temp$Species))
title = paste(VecOfClasses[i],', N = ',NumberOfSpecies, sep = '')
Temp$number = 1
Agg = aggregate(Temp$number, by = list(Temp$Subs), FUN = sum); names(Agg) = c('Subs','Number')
Agg$Number = Agg$Number/sum(Agg$Number)
sum(Agg$Number) # 1 - 100%
pie(Agg$Number, labels = Agg$Subs, main = title, col=rainbow(length(Agg$Subs)))
ToGFromG = sum(Agg[Agg$Subs %in% c('A_G','T_G','C_G'),]$Number) /  sum(Agg[Agg$Subs %in% c('G_A','G_T','G_C'),]$Number)
ToTFromT = sum(Agg[Agg$Subs %in% c('A_T','G_T','C_T'),]$Number) /  sum(Agg[Agg$Subs %in% c('T_A','T_G','T_C'),]$Number)
ToAFromA = sum(Agg[Agg$Subs %in% c('T_A','G_A','C_A'),]$Number) /  sum(Agg[Agg$Subs %in% c('A_T','A_G','A_C'),]$Number)
ToCFromC =  sum(Agg[Agg$Subs %in% c('T_C','G_C','A_C'),]$Number) / sum(Agg[Agg$Subs %in% c('C_T','C_G','C_A'),]$Number)
Equil = rbind(Equil,c(i,VecOfClasses[i],ToGFromG,ToTFromT,ToAFromA,ToCFromC))
}
Equil = data.frame(Equil); names(Equil) = c('i','Classes','G','T','C','A')
# i        Classes                 G                 T                C                 A
# 1 Actinopterygii 0.594741697416974  0.88695652173913 1.64319645994664  1.04326864396436
# 2       Amphibia   0.5125284738041  1.04096989966555 1.76627712854758 0.917777777777778
# 3       Reptilia 0.532318741450068 0.869721115537849 1.69920494699647   1.0426957687153
# 4       Mammalia 0.538739462063428 0.899331180811808 1.77489626556017  1.02578796561605
# 5           Aves 0.569868001820665 0.766223612197029  1.8578811369509  1.08779093507554
### equilibrium for each species:
Equilibrium = c()
MUT$number = 1
AGG = aggregate(MUT$number, by = list(MUT$Subs,MUT$Species,MUT$Class), FUN = sum); names(AGG) = c('Subs','Species','Class','Number')
VecOfSpecies = unique(MUT$Species)
for (i in 1:length(VecOfSpecies))
{ # i = 1
Agg = AGG[AGG$Species == VecOfSpecies[i],]
if (sum(Agg$Number) >= 15)
{
ToGFromG = log2(sum(Agg[Agg$Subs %in% c('A_G','T_G','C_G'),]$Number) /  sum(Agg[Agg$Subs %in% c('G_A','G_T','G_C'),]$Number))
ToTFromT = log2(sum(Agg[Agg$Subs %in% c('A_T','G_T','C_T'),]$Number) /  sum(Agg[Agg$Subs %in% c('T_A','T_G','T_C'),]$Number))
ToAFromA = log2(sum(Agg[Agg$Subs %in% c('T_A','G_A','C_A'),]$Number) /  sum(Agg[Agg$Subs %in% c('A_T','A_G','A_C'),]$Number))
ToCFromC =  log2(sum(Agg[Agg$Subs %in% c('T_C','G_C','A_C'),]$Number) / sum(Agg[Agg$Subs %in% c('C_T','C_G','C_A'),]$Number))
Equilibrium = rbind(Equilibrium,c(as.character(VecOfSpecies[i]),Agg$Class[1],ToGFromG,ToTFromT,ToAFromA,ToCFromC))
}
}
Equilibrium = data.frame(Equilibrium); names(Equilibrium)=c('Species','Class','G','T','A','C')
Equilibrium[,3:6] <- sapply(Equilibrium[,3:6], function(x) as.numeric(as.character(x)))
par(mfrow=c(1,1))
Equilibrium = Equilibrium[Equilibrium$Class %in% VecOfClasses,]
boxplot(
Equilibrium[Equilibrium$Class == 'Actinopterygii',]$G,Equilibrium[Equilibrium$Class == 'Actinopterygii',]$T, Equilibrium[Equilibrium$Class == 'Actinopterygii',]$C, Equilibrium[Equilibrium$Class == 'Actinopterygii',]$A,
Equilibrium[Equilibrium$Class == 'Amphibia',]$G,Equilibrium[Equilibrium$Class == 'Amphibia',]$T, Equilibrium[Equilibrium$Class == 'Amphibia',]$C, Equilibrium[Equilibrium$Class == 'Amphibia',]$A,
Equilibrium[Equilibrium$Class == 'Reptilia',]$G,Equilibrium[Equilibrium$Class == 'Reptilia',]$T, Equilibrium[Equilibrium$Class == 'Reptilia',]$C, Equilibrium[Equilibrium$Class == 'Reptilia',]$A,
Equilibrium[Equilibrium$Class == 'Mammalia',]$G,Equilibrium[Equilibrium$Class == 'Mammalia',]$T, Equilibrium[Equilibrium$Class == 'Mammalia',]$C, Equilibrium[Equilibrium$Class == 'Mammalia',]$A,
Equilibrium[Equilibrium$Class == 'Aves',]$G,Equilibrium[Equilibrium$Class == 'Aves',]$T, Equilibrium[Equilibrium$Class == 'Aves',]$C, Equilibrium[Equilibrium$Class == 'Aves',]$A,
outline = FALSE, notch = TRUE, col = c(ColG,ColT,ColC,ColA), names = rep(c('G','T','C','A'),5))
abline(h = 0, col = 'red')
dev.off()
# TO DO:
#####  ADD TAXA => MORE SPECIES
#####  COUNT NUCLEOTIDE CONTENT CAREFULLY (BODY/2Derived/polarizedbr_data => external + More Shallow => codons, 4fold nucl, FrA,T,G,C) => barplot?
#####  notmalized average MutSpec (pie charts or 12 boxplots for each class)?
rm(list=ls(all=TRUE))
ColG = rgb(0.1,0.1,0.1,0.5)
ColT = rgb(0.1,0.1,1,0.5)
ColC = rgb(0.1,1,0.1,0.5)
ColA = rgb(1,0.1,0.1,0.5)
MUT = read.table("../../Body/3Results/Mutational_spectra_in_Chordata_ML.txt", header = TRUE)
length(unique(MUT$Species)) # 2404  SOME SPECIES HAVE THREE WORDS => CUT THE LAST AND MERGE WITH TAXA, OR EVEN CUT TWO LAST AND LEAVE JUST GENUS
Taxa = read.table("../../Body/1Raw/TaxaFromKostya.Names.stat", sep = '\t',header = FALSE)
Taxa$Species = gsub(";.*",'',Taxa$V1); Taxa$Species = gsub(" ",'_',Taxa$Species);
Taxa$Class = gsub(";Chordata;.*",'',Taxa$V1); Taxa$Class = gsub(".*;",'',Taxa$Class); table(Taxa$Class)
Taxa$Class = gsub('Actinopteri','Actinopterygii',Taxa$Class)
Taxa$Class = gsub("Testudines|Squamata|Crocodylia|Sphenodontia",'Reptilia',Taxa$Class)
length(unique(Taxa$Species)) # 1708
table(Taxa$Class)
###################################
###################################
rm(list=ls(all=TRUE))
pdf("../../Body/4Figures/VertebratePolymorphisms.BetweenClassesWithoutNormalization.R.01.pdf", width = 30, height = 20)
ColG = rgb(0.1,0.1,0.1,0.5)
ColT = rgb(0.1,0.1,1,0.5)
ColC = rgb(0.1,1,0.1,0.5)
ColA = rgb(1,0.1,0.1,0.5)
MUT = read.table("../../Body/3Results/Mutational_spectra_in_Chordata_ML.txt", header = TRUE)
length(unique(MUT$Species)) # 2404  SOME SPECIES HAVE THREE WORDS => CUT THE LAST AND MERGE WITH TAXA, OR EVEN CUT TWO LAST AND LEAVE JUST GENUS
### Taxa 1
Taxa = read.table("../../Body/1Raw/TaxaFromKostya.Names.stat", sep = '\t',header = FALSE)
Taxa$Species = gsub(";.*",'',Taxa$V1); Taxa$Species = gsub(" ",'_',Taxa$Species);
Taxa$Class = gsub(";Chordata;.*",'',Taxa$V1); Taxa$Class = gsub(".*;",'',Taxa$Class); table(Taxa$Class)
Taxa$Class = gsub('Actinopteri','Actinopterygii',Taxa$Class)
Taxa$Class = gsub("Testudines|Squamata|Crocodylia|Sphenodontia",'Reptilia',Taxa$Class)
length(unique(Taxa$Species)) # 1708
table(Taxa$Class)
TaxaMore = read.table("../../Body/1Raw/TaxaFromKostya.2NeedTaxa.tax.txt", sep = '\t',header = FALSE)
View(TaxaMore)
View(TaxaMore)
names(TaxaMore)=c('Species','Taxa')
strsplit(TaxaMore$Species[1],' ')
TaxaMore$Species[1]
strsplit(as.character(TaxaMore$Species[1],' '))
strsplit(as.character(TaxaMore$Species[1],split = ' '))
strsplit(as.character(TaxaMore$Species[1]),split = ' ')
unlist(strsplit(as.character(TaxaMore$Species[1]),split = ' '))
length(unlist(strsplit(as.character(TaxaMore$Species[1]),split = ' ')))
unlist(strsplit(as.character(TaxaMore$Species[1]),split = ' '))[1]
paste(unlist(strsplit(as.character(TaxaMore$Species[1]),split = ' '))[1],unlist(strsplit(as.character(TaxaMore$Species[1]),split = ' '))[2], sep = '_')
TaxaMore = read.table("../../Body/1Raw/TaxaFromKostya.2NeedTaxa.tax.txt", sep = '\t',header = FALSE)
TaxaMore = read.table("../../Body/1Raw/TaxaFromKostya.2NeedTaxa.tax.txt", sep = '\t',header = FALSE)
for (i in 1:nrow(TaxaMore))  {TaxaMore$Species[i] = paste(unlist(strsplit(as.character(TaxaMore$V1[i]),split = ' '))[i],unlist(strsplit(as.character(TaxaMore$V1[1]),split = ' '))[i], sep = '_')}
TaxaMore$Species = ()
TaxaMore = read.table("../../Body/1Raw/TaxaFromKostya.2NeedTaxa.tax.txt", sep = '\t',header = FALSE)
TaxaMore$Species = ''
for (i in 1:nrow(TaxaMore))  {TaxaMore$Species[i] = paste(unlist(strsplit(as.character(TaxaMore$V1[i]),split = ' '))[i],unlist(strsplit(as.character(TaxaMore$V1[1]),split = ' '))[i], sep = '_')}
View(TaxaMore)
TaxaMore = read.table("../../Body/1Raw/TaxaFromKostya.2NeedTaxa.tax.txt", sep = '\t',header = FALSE)
TaxaMore$Species = ''
for (i in 1:nrow(TaxaMore))  {TaxaMore$Species[i] = paste(unlist(strsplit(as.character(TaxaMore$V1[i]),split = ' '))[i],unlist(strsplit(as.character(TaxaMore$V1[i]),split = ' '))[i], sep = '_')}
View(Taxa)
View(TaxaMore)
for (i in 1:nrow(TaxaMore))  {TaxaMore$Species[i] = paste(unlist(strsplit(as.character(TaxaMore$V1[i]),split = ' '))[i],unlist(strsplit(as.character(TaxaMore$V1[i]),split = ' '))[i], sep = '_')}
View(TaxaMore)
TaxaMore = read.table("../../Body/1Raw/TaxaFromKostya.2NeedTaxa.tax.txt", sep = '\t',header = FALSE)
TaxaMore$Species = ''
for (i in (1:nrow(TaxaMore)))
{TaxaMore$Species[i] = paste(unlist(strsplit(as.character(TaxaMore$V1[i]),split = ' '))[i],unlist(strsplit(as.character(TaxaMore$V1[i]),split = ' '))[i], sep = '_')}
View(TaxaMore)
rm(list=ls(all=TRUE))
TaxaMore = read.table("../../Body/1Raw/TaxaFromKostya.2NeedTaxa.tax.txt", sep = '\t',header = FALSE)
TaxaMore$Species = ''
for (i in (1:nrow(TaxaMore)))
{TaxaMore$Species[i] = paste(unlist(strsplit(as.character(TaxaMore$V1[i]),split = ' '))[i],unlist(strsplit(as.character(TaxaMore$V1[i]),split = ' '))[i], sep = '_')}
View(TaxaMore)
TaxaMore = read.table("../../Body/1Raw/TaxaFromKostya.2NeedTaxa.tax.txt", sep = '\t',header = FALSE)
TaxaMore$Species = ''
for (i in (1:nrow(TaxaMore)))
{TaxaMore$Species[i] = paste(unlist(strsplit(as.character(TaxaMore$V1[i]),split = ' '))[1],unlist(strsplit(as.character(TaxaMore$V1[i]),split = ' '))[2], sep = '_')}
View(TaxaMore)
TaxaMore$Class = gsub(";Chordata;.*",'',TaxaMore$V2);
View(TaxaMore)
TaxaMore$Class = gsub(".*;",'',Taxa$Class);
TaxaMore$Class = gsub(".*;",'',TaxaMore$Class);
table(TaxaMore$Class)
TaxaMore = read.table("../../Body/1Raw/TaxaFromKostya.2NeedTaxa.tax.txt", sep = '\t',header = FALSE)
TaxaMore$Species = ''
for (i in (1:nrow(TaxaMore)))
{TaxaMore$Species[i] = paste(unlist(strsplit(as.character(TaxaMore$V1[i]),split = ' '))[1],unlist(strsplit(as.character(TaxaMore$V1[i]),split = ' '))[2], sep = '_')}
TaxaMore$Class = gsub(";Chordata;.*",'',TaxaMore$V2);
TaxaMore = read.table("../../Body/1Raw/TaxaFromKostya.2NeedTaxa.tax.txt", sep = '\t',header = FALSE)
TaxaMore$Species = ''
for (i in (1:nrow(TaxaMore)))
{TaxaMore$Species[i] = paste(unlist(strsplit(as.character(TaxaMore$V1[i]),split = ' '))[1],unlist(strsplit(as.character(TaxaMore$V1[i]),split = ' '))[2], sep = '_')}
TaxaMore$Class = gsub("; Chordata;.*",'',TaxaMore$V2);
TaxaMore$Class
TaxaMore$Class = gsub(".*;",'',TaxaMore$Class); table(TaxaMore$Class)
TaxaMore = read.table("../../Body/1Raw/TaxaFromKostya.2NeedTaxa.tax.txt", sep = '\t',header = FALSE)
TaxaMore$Species = ''
for (i in (1:nrow(TaxaMore)))
{TaxaMore$Species[i] = paste(unlist(strsplit(as.character(TaxaMore$V1[i]),split = ' '))[1],unlist(strsplit(as.character(TaxaMore$V1[i]),split = ' '))[2], sep = '_')}
TaxaMore$Class = gsub("; Chordata;.*",'',TaxaMore$V2);
TaxaMore$Class = gsub(".*; ",'',TaxaMore$Class); table(TaxaMore$Class)
TaxaMore$Class = gsub('Actinopteri','Actinopterygii',Taxa$Class)
TaxaMore$Class = gsub("Testudines|Squamata|Crocodylia",'Reptilia',TaxaMore$Class)
TaxaMore$Class = gsub('Actinopteri','Actinopterygii',TaxaMore$Class)
table(TaxaMore$Class)
Taxa = read.table("../../Body/1Raw/TaxaFromKostya.Names.stat", sep = '\t',header = FALSE)
View(Taxa)
Taxa$Species = gsub(";.*",'',Taxa$V1);
View(Taxa)
for (i in (1:nrow(Taxa)))
{Taxa$Species[i] = paste(unlist(strsplit(as.character(Taxa$Species[i]),split = ' '))[1],unlist(strsplit(as.character(Taxa$Species[i]),split = ' '))[2], sep = '_')}
View(Taxa)
Taxa$Class = gsub(";Chordata;.*",'',Taxa$V1); Taxa$Class = gsub(".*;",'',Taxa$Class); table(Taxa$Class)
Taxa$Class = gsub('Actinopteri','Actinopterygii',Taxa$Class)
Taxa$Class = gsub("Testudines|Squamata|Crocodylia|Sphenodontia",'Reptilia',Taxa$Class)
length(unique(Taxa$Species)) # 1708
table(Taxa$Class)
TaxaMore = read.table("../../Body/1Raw/TaxaFromKostya.2NeedTaxa.tax.txt", sep = '\t',header = FALSE)
TaxaMore$Species = ''
for (i in (1:nrow(TaxaMore)))
{TaxaMore$Species[i] = paste(unlist(strsplit(as.character(TaxaMore$V1[i]),split = ' '))[1],unlist(strsplit(as.character(TaxaMore$V1[i]),split = ' '))[2], sep = '_')}
TaxaMore$Class = gsub("; Chordata;.*",'',TaxaMore$V2);
TaxaMore$Class = gsub(".*; ",'',TaxaMore$Class); table(TaxaMore$Class)
TaxaMore$Class = gsub('Actinopteri','Actinopterygii',TaxaMore$Class)
TaxaMore$Class = gsub("Testudines|Squamata|Crocodylia",'Reptilia',TaxaMore$Class)
table(TaxaMore$Class)
View(Taxa)
View(Taxa)
Taxa = Taxa[,-1]
View(Taxa)
View(Taxa)
View(TaxaMore)
TaxaMore = TaxaMore[,-c(1,2)]
View(TaxaMore)
####### associate species name with Class
### Taxa 1, Cut out the third world!!!!!!!!!!!!!!!!!
Taxa = read.table("../../Body/1Raw/TaxaFromKostya.Names.stat", sep = '\t',header = FALSE)
Taxa$Species = gsub(";.*",'',Taxa$V1);
for (i in (1:nrow(Taxa)))  {Taxa$Species[i] = paste(unlist(strsplit(as.character(Taxa$Species[i]),split = ' '))[1],unlist(strsplit(as.character(Taxa$Species[i]),split = ' '))[2], sep = '_')}
Taxa$Class = gsub(";Chordata;.*",'',Taxa$V1); Taxa$Class = gsub(".*;",'',Taxa$Class); table(Taxa$Class)
Taxa$Class = gsub('Actinopteri','Actinopterygii',Taxa$Class)
Taxa$Class = gsub("Testudines|Squamata|Crocodylia|Sphenodontia",'Reptilia',Taxa$Class)
length(unique(Taxa$Species)) # 1708
table(Taxa$Class)
Taxa = Taxa[,-1]
### Taxa 2, Cut out the third world!!!!!!!!!!!!!!!!!
TaxaMore = read.table("../../Body/1Raw/TaxaFromKostya.2NeedTaxa.tax.txt", sep = '\t',header = FALSE)
TaxaMore$Species = ''
for (i in (1:nrow(TaxaMore)))
{TaxaMore$Species[i] = paste(unlist(strsplit(as.character(TaxaMore$V1[i]),split = ' '))[1],unlist(strsplit(as.character(TaxaMore$V1[i]),split = ' '))[2], sep = '_')}
TaxaMore$Class = gsub("; Chordata;.*",'',TaxaMore$V2);
TaxaMore$Class = gsub(".*; ",'',TaxaMore$Class);
TaxaMore$Class = gsub('Actinopteri','Actinopterygii',TaxaMore$Class)
TaxaMore$Class = gsub("Testudines|Squamata|Crocodylia",'Reptilia',TaxaMore$Class)
table(TaxaMore$Class)
TaxaMore = TaxaMore[,-c(1,2)]
Taxa = rbind(Taxa,TaxaMore)
Taxa = unique(Taxa)
SpeciesWithoutTaxonomy = setdiff(unique(MUT$Species),unique(Taxa$Species)); length(SpeciesWithoutTaxonomy)
rm(list=ls(all=TRUE))
pdf("../../Body/4Figures/VertebratePolymorphisms.BetweenClassesWithoutNormalization.R.01.pdf", width = 30, height = 20)
ColG = rgb(0.1,0.1,0.1,0.5)
ColT = rgb(0.1,0.1,1,0.5)
ColC = rgb(0.1,1,0.1,0.5)
ColA = rgb(1,0.1,0.1,0.5)
MUT = read.table("../../Body/3Results/Mutational_spectra_in_Chordata_ML.txt", header = TRUE)
length(unique(MUT$Species)) # 2404  SOME SPECIES HAVE THREE WORDS => CUT THE LAST AND MERGE WITH TAXA, OR EVEN CUT TWO LAST AND LEAVE JUST GENUS
####### associate species name with Class
### Taxa 1, Cut out the third world!!!!!!!!!!!!!!!!!
Taxa = read.table("../../Body/1Raw/TaxaFromKostya.Names.stat", sep = '\t',header = FALSE)
Taxa$Species = gsub(";.*",'',Taxa$V1);
for (i in (1:nrow(Taxa)))  {Taxa$Species[i] = paste(unlist(strsplit(as.character(Taxa$Species[i]),split = ' '))[1],unlist(strsplit(as.character(Taxa$Species[i]),split = ' '))[2], sep = '_')}
Taxa$Class = gsub(";Chordata;.*",'',Taxa$V1); Taxa$Class = gsub(".*;",'',Taxa$Class); table(Taxa$Class)
Taxa$Class = gsub('Actinopteri','Actinopterygii',Taxa$Class)
Taxa$Class = gsub("Testudines|Squamata|Crocodylia|Sphenodontia",'Reptilia',Taxa$Class)
length(unique(Taxa$Species)) # 1708
table(Taxa$Class)
Taxa = Taxa[,-1]
### Taxa 2, Cut out the third world!!!!!!!!!!!!!!!!!
TaxaMore = read.table("../../Body/1Raw/TaxaFromKostya.2NeedTaxa.tax.txt", sep = '\t',header = FALSE)
TaxaMore$Species = ''
for (i in (1:nrow(TaxaMore)))
{TaxaMore$Species[i] = paste(unlist(strsplit(as.character(TaxaMore$V1[i]),split = ' '))[1],unlist(strsplit(as.character(TaxaMore$V1[i]),split = ' '))[2], sep = '_')}
TaxaMore$Class = gsub("; Chordata;.*",'',TaxaMore$V2);
TaxaMore$Class = gsub(".*; ",'',TaxaMore$Class);
TaxaMore$Class = gsub('Actinopteri','Actinopterygii',TaxaMore$Class)
TaxaMore$Class = gsub("Testudines|Squamata|Crocodylia",'Reptilia',TaxaMore$Class)
table(TaxaMore$Class)
TaxaMore = TaxaMore[,-c(1,2)]
Taxa = rbind(Taxa,TaxaMore); Taxa = unique(Taxa)
table(TaxaMore$Class)
SpeciesWithoutTaxonomy = setdiff(unique(MUT$Species),unique(Taxa$Species)); length(SpeciesWithoutTaxonomy)
write.table(SpeciesWithoutTaxonomy, "../../Body/2Derived/NeedTaxa.txt", row.names = FALSE, quote = FALSE, col.names = FALSE)
VecOfNormalSubstitutions <- c('A_C','C_A',
'A_G','G_A',
'C_G','G_C',
'C_T','T_C',
'G_T','T_G',
'T_A','A_T')
nrow(MUT)
table(MUT$Subs)   # MANY CRAPPY SUBSTITUTIONS!!!!!!!!!!!!!!!!!! WHY?????????????????????
SP = data.frame(table(MUT$Species)); names(SP) = c('Species','NumberOfAllSubst')
SPN = data.frame(table(MUT[MUT$Subs %in% VecOfNormalSubstitutions,]$Species)); names(SPN) = c('Species','NumberOfNormalSubst')
SP = merge(SP,SPN); SP$FractionOfNormal = SP$NumberOfNormalSubst/SP$NumberOfAllSubst
hist(SP$FractionOfNormal)
summary(SP$FractionOfNormal) # how many to delete? ask to have more than 95% of substitutions as normal
SpeciesToDelete = SP[SP$FractionOfNormal <=0.95,]$Species; length(SpeciesToDelete) # 279 - delete
MUT = MUT[!MUT$Species %in% SpeciesToDelete,]
MUT = MUT[MUT$Subs %in% VecOfNormalSubstitutions,]
nrow(MUT) # 461215
MUT = MUT[MUT$AncestralAA == MUT$DescendantAA,]; nrow(MUT) # 395157
VecOfSynFourFoldDegenerateSites <- c('CTT', 'CTC', 'CTA', 'CTG',
'GTT', 'GTC', 'GTA', 'GTG',
'TCT', 'TCC', 'TCA', 'TCG',
'CCT', 'CCC', 'CCA', 'CCG',
'ACT', 'ACC', 'ACA', 'ACG',
'GCT', 'GCC', 'GCA', 'GCG',
'CGT', 'CGC', 'CGA', 'CGG',
'GGT', 'GGC', 'GGA', 'GGG')
length(unique(VecOfSynFourFoldDegenerateSites)) # 32
nrow(MUT) # 395157
MUT = MUT[MUT$AncestorCodon %in% VecOfSynFourFoldDegenerateSites & MUT$DescendantCodon %in% VecOfSynFourFoldDegenerateSites,]; nrow(MUT) # 209120
table(MUT$Gene)
MUT = merge(MUT,Taxa, all.x = TRUE)  ##### NOT ALL SPECIES HAVE TAXONOMY!!!!
Equil = c()
par(mfrow = c(1,5))
VecOfClasses = c('Actinopterygii','Amphibia','Reptilia','Mammalia','Aves')
VecOfClasses = c('Actinopterygii','Amphibia','Reptilia','Mammalia','Aves')
for (i in 1:length(VecOfClasses))
{ # i = 1
Temp = MUT[MUT$Class == VecOfClasses[i],]
NumberOfSpecies = length(unique(Temp$Species))
title = paste(VecOfClasses[i],', N = ',NumberOfSpecies, sep = '')
Temp$number = 1
Agg = aggregate(Temp$number, by = list(Temp$Subs), FUN = sum); names(Agg) = c('Subs','Number')
Agg$Number = Agg$Number/sum(Agg$Number)
sum(Agg$Number) # 1 - 100%
pie(Agg$Number, labels = Agg$Subs, main = title, col=rainbow(length(Agg$Subs)))
ToGFromG = sum(Agg[Agg$Subs %in% c('A_G','T_G','C_G'),]$Number) /  sum(Agg[Agg$Subs %in% c('G_A','G_T','G_C'),]$Number)
ToTFromT = sum(Agg[Agg$Subs %in% c('A_T','G_T','C_T'),]$Number) /  sum(Agg[Agg$Subs %in% c('T_A','T_G','T_C'),]$Number)
ToAFromA = sum(Agg[Agg$Subs %in% c('T_A','G_A','C_A'),]$Number) /  sum(Agg[Agg$Subs %in% c('A_T','A_G','A_C'),]$Number)
ToCFromC =  sum(Agg[Agg$Subs %in% c('T_C','G_C','A_C'),]$Number) / sum(Agg[Agg$Subs %in% c('C_T','C_G','C_A'),]$Number)
Equil = rbind(Equil,c(i,VecOfClasses[i],ToGFromG,ToTFromT,ToAFromA,ToCFromC))
}
Equil = data.frame(Equil); names(Equil) = c('i','Classes','G','T','C','A')
View(Equil)
###################################
###################################
rm(list=ls(all=TRUE))
pdf("../../Body/4Figures/VertebratePolymorphisms.BetweenClassesWithoutNormalization.R.01.pdf", width = 30, height = 20)
ColG = rgb(0.1,0.1,0.1,0.5)
ColT = rgb(0.1,0.1,1,0.5)
ColC = rgb(0.1,1,0.1,0.5)
ColA = rgb(1,0.1,0.1,0.5)
MUT = read.table("../../Body/3Results/Mutational_spectra_in_Chordata_ML.txt", header = TRUE)
length(unique(MUT$Species)) # 2404  SOME SPECIES HAVE THREE WORDS => CUT THE LAST AND MERGE WITH TAXA, OR EVEN CUT TWO LAST AND LEAVE JUST GENUS
####### associate species name with Class
### Taxa 1, Cut out the third world!!!!!!!!!!!!!!!!!
Taxa = read.table("../../Body/1Raw/TaxaFromKostya.Names.stat", sep = '\t',header = FALSE)
Taxa$Species = gsub(";.*",'',Taxa$V1);
for (i in (1:nrow(Taxa)))  {Taxa$Species[i] = paste(unlist(strsplit(as.character(Taxa$Species[i]),split = ' '))[1],unlist(strsplit(as.character(Taxa$Species[i]),split = ' '))[2], sep = '_')}
Taxa$Class = gsub(";Chordata;.*",'',Taxa$V1); Taxa$Class = gsub(".*;",'',Taxa$Class); table(Taxa$Class)
Taxa$Class = gsub('Actinopteri','Actinopterygii',Taxa$Class)
Taxa$Class = gsub("Testudines|Squamata|Crocodylia|Sphenodontia",'Reptilia',Taxa$Class)
length(unique(Taxa$Species)) # 1708
table(Taxa$Class)
Taxa = Taxa[,-1]
### Taxa 2, Cut out the third world!!!!!!!!!!!!!!!!!
TaxaMore = read.table("../../Body/1Raw/TaxaFromKostya.2NeedTaxa.tax.txt", sep = '\t',header = FALSE)
TaxaMore$Species = ''
for (i in (1:nrow(TaxaMore)))
{TaxaMore$Species[i] = paste(unlist(strsplit(as.character(TaxaMore$V1[i]),split = ' '))[1],unlist(strsplit(as.character(TaxaMore$V1[i]),split = ' '))[2], sep = '_')}
TaxaMore$Class = gsub("; Chordata;.*",'',TaxaMore$V2);
TaxaMore$Class = gsub(".*; ",'',TaxaMore$Class);
TaxaMore$Class = gsub('Actinopteri','Actinopterygii',TaxaMore$Class)
TaxaMore$Class = gsub("Testudines|Squamata|Crocodylia",'Reptilia',TaxaMore$Class)
table(TaxaMore$Class)
TaxaMore = TaxaMore[,-c(1,2)]
Taxa = rbind(Taxa,TaxaMore); Taxa = unique(Taxa)
table(TaxaMore$Class)
SpeciesWithoutTaxonomy = setdiff(unique(MUT$Species),unique(Taxa$Species)); length(SpeciesWithoutTaxonomy) # 63
write.table(SpeciesWithoutTaxonomy, "../../Body/2Derived/NeedTaxa.txt", row.names = FALSE, quote = FALSE, col.names = FALSE)
##### FILTER 1: to take only normal substitutions and filter out species with too high fraction (> 5%) of unnormal substitutions
VecOfNormalSubstitutions <- c('A_C','C_A',
'A_G','G_A',
'C_G','G_C',
'C_T','T_C',
'G_T','T_G',
'T_A','A_T')
nrow(MUT)
table(MUT$Subs)   # MANY CRAPPY SUBSTITUTIONS!!!!!!!!!!!!!!!!!! WHY?????????????????????
SP = data.frame(table(MUT$Species)); names(SP) = c('Species','NumberOfAllSubst')
SPN = data.frame(table(MUT[MUT$Subs %in% VecOfNormalSubstitutions,]$Species)); names(SPN) = c('Species','NumberOfNormalSubst')
SP = merge(SP,SPN); SP$FractionOfNormal = SP$NumberOfNormalSubst/SP$NumberOfAllSubst
hist(SP$FractionOfNormal)
summary(SP$FractionOfNormal) # how many to delete? ask to have more than 95% of substitutions as normal
SpeciesToDelete = SP[SP$FractionOfNormal <=0.95,]$Species; length(SpeciesToDelete) # 279 - delete
MUT = MUT[!MUT$Species %in% SpeciesToDelete,]
MUT = MUT[MUT$Subs %in% VecOfNormalSubstitutions,]
##### FILTER 2: Synonymous Substitutions
nrow(MUT) # 461215
MUT = MUT[MUT$AncestralAA == MUT$DescendantAA,]; nrow(MUT) # 395157
##### FILTER 3: fourfold degenerate sites:
VecOfSynFourFoldDegenerateSites <- c('CTT', 'CTC', 'CTA', 'CTG',
'GTT', 'GTC', 'GTA', 'GTG',
'TCT', 'TCC', 'TCA', 'TCG',
'CCT', 'CCC', 'CCA', 'CCG',
'ACT', 'ACC', 'ACA', 'ACG',
'GCT', 'GCC', 'GCA', 'GCG',
'CGT', 'CGC', 'CGA', 'CGG',
'GGT', 'GGC', 'GGA', 'GGG')
length(unique(VecOfSynFourFoldDegenerateSites)) # 32
nrow(MUT) # 395157
MUT = MUT[MUT$AncestorCodon %in% VecOfSynFourFoldDegenerateSites & MUT$DescendantCodon %in% VecOfSynFourFoldDegenerateSites,]; nrow(MUT) # 209120
##### FILTER: Gene
table(MUT$Gene)
# ATP6   ATP8   COX1   COX2   COX3   CytB    ND1    ND2    ND3    ND4   ND4L
# 9752    625  13233   4264   4873 109049  14314  33809   2635  14511   2055  # there are quite many genes - do I need to analyse all of them focus on CYTB? Better - all and from time to time to check that results based on CYTB only are robust!!!
MUT = merge(MUT,Taxa, all.x = TRUE)  ##### NOT ALL SPECIES HAVE TAXONOMY!!!!
##### derive observed number of mutations for each class (no normalization)
Equil = c()
par(mfrow = c(1,5))
VecOfClasses = c('Actinopterygii','Amphibia','Reptilia','Mammalia','Aves')
for (i in 1:length(VecOfClasses))
{ # i = 1
Temp = MUT[MUT$Class == VecOfClasses[i],]
NumberOfSpecies = length(unique(Temp$Species))
title = paste(VecOfClasses[i],', N = ',NumberOfSpecies, sep = '')
Temp$number = 1
Agg = aggregate(Temp$number, by = list(Temp$Subs), FUN = sum); names(Agg) = c('Subs','Number')
Agg$Number = Agg$Number/sum(Agg$Number)
sum(Agg$Number) # 1 - 100%
pie(Agg$Number, labels = Agg$Subs, main = title, col=rainbow(length(Agg$Subs)))
ToGFromG = sum(Agg[Agg$Subs %in% c('A_G','T_G','C_G'),]$Number) /  sum(Agg[Agg$Subs %in% c('G_A','G_T','G_C'),]$Number)
ToTFromT = sum(Agg[Agg$Subs %in% c('A_T','G_T','C_T'),]$Number) /  sum(Agg[Agg$Subs %in% c('T_A','T_G','T_C'),]$Number)
ToAFromA = sum(Agg[Agg$Subs %in% c('T_A','G_A','C_A'),]$Number) /  sum(Agg[Agg$Subs %in% c('A_T','A_G','A_C'),]$Number)
ToCFromC =  sum(Agg[Agg$Subs %in% c('T_C','G_C','A_C'),]$Number) / sum(Agg[Agg$Subs %in% c('C_T','C_G','C_A'),]$Number)
Equil = rbind(Equil,c(i,VecOfClasses[i],ToGFromG,ToTFromT,ToAFromA,ToCFromC))
}
Equil = data.frame(Equil); names(Equil) = c('i','Classes','G','T','C','A')
# i        Classes                 G                 T                C                 A
# 1 Actinopterygii 0.594741697416974  0.88695652173913 1.64319645994664  1.04326864396436
# 2       Amphibia   0.5125284738041  1.04096989966555 1.76627712854758 0.917777777777778
# 3       Reptilia 0.532318741450068 0.869721115537849 1.69920494699647   1.0426957687153
# 4       Mammalia 0.538739462063428 0.899331180811808 1.77489626556017  1.02578796561605
# 5           Aves 0.569868001820665 0.766223612197029  1.8578811369509  1.08779093507554
### equilibrium for each species:
Equilibrium = c()
MUT$number = 1
AGG = aggregate(MUT$number, by = list(MUT$Subs,MUT$Species,MUT$Class), FUN = sum); names(AGG) = c('Subs','Species','Class','Number')
VecOfSpecies = unique(MUT$Species)
for (i in 1:length(VecOfSpecies))
{ # i = 1
Agg = AGG[AGG$Species == VecOfSpecies[i],]
if (sum(Agg$Number) >= 15)
{
ToGFromG = log2(sum(Agg[Agg$Subs %in% c('A_G','T_G','C_G'),]$Number) /  sum(Agg[Agg$Subs %in% c('G_A','G_T','G_C'),]$Number))
ToTFromT = log2(sum(Agg[Agg$Subs %in% c('A_T','G_T','C_T'),]$Number) /  sum(Agg[Agg$Subs %in% c('T_A','T_G','T_C'),]$Number))
ToAFromA = log2(sum(Agg[Agg$Subs %in% c('T_A','G_A','C_A'),]$Number) /  sum(Agg[Agg$Subs %in% c('A_T','A_G','A_C'),]$Number))
ToCFromC =  log2(sum(Agg[Agg$Subs %in% c('T_C','G_C','A_C'),]$Number) / sum(Agg[Agg$Subs %in% c('C_T','C_G','C_A'),]$Number))
Equilibrium = rbind(Equilibrium,c(as.character(VecOfSpecies[i]),Agg$Class[1],ToGFromG,ToTFromT,ToAFromA,ToCFromC))
}
}
Equilibrium = data.frame(Equilibrium); names(Equilibrium)=c('Species','Class','G','T','A','C')
Equilibrium[,3:6] <- sapply(Equilibrium[,3:6], function(x) as.numeric(as.character(x)))
par(mfrow=c(1,1))
Equilibrium = Equilibrium[Equilibrium$Class %in% VecOfClasses,]
boxplot(
Equilibrium[Equilibrium$Class == 'Actinopterygii',]$G,Equilibrium[Equilibrium$Class == 'Actinopterygii',]$T, Equilibrium[Equilibrium$Class == 'Actinopterygii',]$C, Equilibrium[Equilibrium$Class == 'Actinopterygii',]$A,
Equilibrium[Equilibrium$Class == 'Amphibia',]$G,Equilibrium[Equilibrium$Class == 'Amphibia',]$T, Equilibrium[Equilibrium$Class == 'Amphibia',]$C, Equilibrium[Equilibrium$Class == 'Amphibia',]$A,
Equilibrium[Equilibrium$Class == 'Reptilia',]$G,Equilibrium[Equilibrium$Class == 'Reptilia',]$T, Equilibrium[Equilibrium$Class == 'Reptilia',]$C, Equilibrium[Equilibrium$Class == 'Reptilia',]$A,
Equilibrium[Equilibrium$Class == 'Mammalia',]$G,Equilibrium[Equilibrium$Class == 'Mammalia',]$T, Equilibrium[Equilibrium$Class == 'Mammalia',]$C, Equilibrium[Equilibrium$Class == 'Mammalia',]$A,
Equilibrium[Equilibrium$Class == 'Aves',]$G,Equilibrium[Equilibrium$Class == 'Aves',]$T, Equilibrium[Equilibrium$Class == 'Aves',]$C, Equilibrium[Equilibrium$Class == 'Aves',]$A,
outline = FALSE, notch = TRUE, col = c(ColG,ColT,ColC,ColA), names = rep(c('G','T','C','A'),5))
abline(h = 0, col = 'red')
dev.off()
# TO DO:
#####  ADD TAXA => MORE SPECIES
#####  COUNT NUCLEOTIDE CONTENT CAREFULLY (BODY/2Derived/polarizedbr_data => external + More Shallow => codons, 4fold nucl, FrA,T,G,C) => barplot?
#####  notmalized average MutSpec (pie charts or 12 boxplots for each class)?
