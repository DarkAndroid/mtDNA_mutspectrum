rm(list=ls(all=TRUE))
VecOfSynFourFoldDegenerateSites <- c('CTT', 'CTC', 'CTA', 'CTG',
'GTT', 'GTC', 'GTA', 'GTG',
'TCT', 'TCC', 'TCA', 'TCG',
'CCT', 'CCC', 'CCA', 'CCG',
'ACT', 'ACC', 'ACA', 'ACG',
'GCT', 'GCC', 'GCA', 'GCG',
'CGT', 'CGC', 'CGA', 'CGG',
'GGT', 'GGC', 'GGA', 'GGG')
length(unique(VecOfSynFourFoldDegenerateSites)) # 32
unzip("../../Body/2Derived/POLARIZEDBR_DATA.zip", exdir= "../../Body/2Derived/")
List = list.files("../../Body/2Derived/POLARIZEDBR_DATA/")
unzip("../../Body/2Derived/POLARIZEDBR_DATA.zip", exdir= "../../Body/2Derived/")
unzip("../../Body/2Derived/POLARIZEDBR_DATA.zip")
List = list.files("../../Body/2Derived/POLARIZEDBR_DATA/")
List
List = list.files("../../Body/2Derived/POLARIZEDBR_DATA/")
List
List = list.files("../../Body/2Derived/POLARIZEDBR_DATA")
List = list.files("../../Body/2Derived/POLARIZEDBR_DATA/POLARIZEDBR_DATA/")
List
for (i in 1:length(List))
for (i in 1:length(List)){ # i = 1303
infile = paste("../../Body/2Derived/POLARIZEDBR_DATA/",as.character(List[i]),sep='')
if (length(grep('POLARISED',infile)) > 0)
{
Species = gsub('\\..*','',as.character(List[i]))
Gene = gsub(Species,'',as.character(List[i])); Gene = gsub('.POLARISED.txt','',Gene); Gene = gsub('\\.POLARISED.txt','',Gene); Gene = gsub('\\.','',Gene);
GeneSpecies = read.table(infile, header = TRUE)
GeneSpecies = GeneSpecies[GeneSpecies$BranchPosition == 'External',]
ExternalSeqsTogether = paste(GeneSpecies$MoreShallowNodeSeq,collapse = '')
ExternalSeqsTogether = unlist(strsplit(ExternalSeqsTogether,'')) # 5700/3
CodonsVec = c(); StartNuc = 1
if (length(ExternalSeqsTogether)/3 == round(length(ExternalSeqsTogether)/3))  # if divide by 3 without the rest
{
for (j in 1:(length(ExternalSeqsTogether)/3))
{
CodonsVec = c(CodonsVec,paste(ExternalSeqsTogether[StartNuc : (StartNuc+2)],collapse = ''))
StartNuc = StartNuc+3
}
AllCodons = length(CodonsVec)        # 1021
CodonsVecNeutral = CodonsVec[CodonsVec %in% VecOfSynFourFoldDegenerateSites]
NeutralCodons = length(CodonsVecNeutral) # 1900
data.frame(table(CodonsVecNeutral))
CodonsVecNeutral = gsub("CTA|GTA|TCA|CCA|ACA|GCA|CGA|GGA",'A',CodonsVecNeutral)
CodonsVecNeutral = gsub("CTT|GTT|TCT|CCT|ACT|GCT|CGT|GGT",'T',CodonsVecNeutral)
CodonsVecNeutral = gsub("CTG|GTG|TCG|CCG|ACG|GCG|CGG|GGG",'G',CodonsVecNeutral)
CodonsVecNeutral = gsub("CTC|GTC|TCC|CCC|ACC|GCC|CGC|GGC",'C',CodonsVecNeutral)
Line=c(Species,Gene,length(CodonsVecNeutral[CodonsVecNeutral == 'A']),length(CodonsVecNeutral[CodonsVecNeutral == 'T']),length(CodonsVecNeutral[CodonsVecNeutral == 'G']),length(CodonsVecNeutral[CodonsVecNeutral == 'C']), AllCodons, NeutralCodons)
if (i == 1) {Final = Line}
if (i >  1) {Final = rbind(Final,Line)}
}
}
}
for (i in 1:length(List)){ # i = 1303
infile = paste("../../Body/2Derived/POLARIZEDBR_DATA/POLARIZEDBR_DATA/",as.character(List[i]),sep='')
if (length(grep('POLARISED',infile)) > 0)
{
Species = gsub('\\..*','',as.character(List[i]))
Gene = gsub(Species,'',as.character(List[i])); Gene = gsub('.POLARISED.txt','',Gene); Gene = gsub('\\.POLARISED.txt','',Gene); Gene = gsub('\\.','',Gene);
GeneSpecies = read.table(infile, header = TRUE)
GeneSpecies = GeneSpecies[GeneSpecies$BranchPosition == 'External',]
ExternalSeqsTogether = paste(GeneSpecies$MoreShallowNodeSeq,collapse = '')
ExternalSeqsTogether = unlist(strsplit(ExternalSeqsTogether,'')) # 5700/3
CodonsVec = c(); StartNuc = 1
if (length(ExternalSeqsTogether)/3 == round(length(ExternalSeqsTogether)/3))  # if divide by 3 without the rest
{
for (j in 1:(length(ExternalSeqsTogether)/3))
{
CodonsVec = c(CodonsVec,paste(ExternalSeqsTogether[StartNuc : (StartNuc+2)],collapse = ''))
StartNuc = StartNuc+3
}
AllCodons = length(CodonsVec)        # 1021
CodonsVecNeutral = CodonsVec[CodonsVec %in% VecOfSynFourFoldDegenerateSites]
NeutralCodons = length(CodonsVecNeutral) # 1900
data.frame(table(CodonsVecNeutral))
CodonsVecNeutral = gsub("CTA|GTA|TCA|CCA|ACA|GCA|CGA|GGA",'A',CodonsVecNeutral)
CodonsVecNeutral = gsub("CTT|GTT|TCT|CCT|ACT|GCT|CGT|GGT",'T',CodonsVecNeutral)
CodonsVecNeutral = gsub("CTG|GTG|TCG|CCG|ACG|GCG|CGG|GGG",'G',CodonsVecNeutral)
CodonsVecNeutral = gsub("CTC|GTC|TCC|CCC|ACC|GCC|CGC|GGC",'C',CodonsVecNeutral)
Line=c(Species,Gene,length(CodonsVecNeutral[CodonsVecNeutral == 'A']),length(CodonsVecNeutral[CodonsVecNeutral == 'T']),length(CodonsVecNeutral[CodonsVecNeutral == 'G']),length(CodonsVecNeutral[CodonsVecNeutral == 'C']), AllCodons, NeutralCodons)
if (i == 1) {Final = Line}
if (i >  1) {Final = rbind(Final,Line)}
}
}
}
Final
rm(list=ls(all=TRUE))
VecOfSynFourFoldDegenerateSites <- c('CTT', 'CTC', 'CTA', 'CTG',
'GTT', 'GTC', 'GTA', 'GTG',
'TCT', 'TCC', 'TCA', 'TCG',
'CCT', 'CCC', 'CCA', 'CCG',
'ACT', 'ACC', 'ACA', 'ACG',
'GCT', 'GCC', 'GCA', 'GCG',
'CGT', 'CGC', 'CGA', 'CGG',
'GGT', 'GGC', 'GGA', 'GGG')
length(unique(VecOfSynFourFoldDegenerateSites)) # 32
List = list.files("../../Body/2Derived/POLARIZEDBR_DATA/POLARIZEDBR_DATA/")
for (i in 1:length(List)){ # i = 1303
infile = paste("../../Body/2Derived/POLARIZEDBR_DATA/",as.character(List[i]),sep='')
if (length(grep('POLARISED',infile)) > 0)
{
Species = gsub('\\..*','',as.character(List[i]))
Gene = gsub(Species,'',as.character(List[i])); Gene = gsub('.POLARISED.txt','',Gene); Gene = gsub('\\.POLARISED.txt','',Gene); Gene = gsub('\\.','',Gene);
GeneSpecies = read.table(infile, header = TRUE)
GeneSpecies = GeneSpecies[GeneSpecies$BranchPosition == 'External',]
ExternalSeqsTogether = paste(GeneSpecies$MoreShallowNodeSeq,collapse = '')
ExternalSeqsTogether = unlist(strsplit(ExternalSeqsTogether,'')) # 5700/3
CodonsVec = c(); StartNuc = 1
if (length(ExternalSeqsTogether)/3 == round(length(ExternalSeqsTogether)/3))  # if divide by 3 without the rest
{
for (j in 1:(length(ExternalSeqsTogether)/3))
{
CodonsVec = c(CodonsVec,paste(ExternalSeqsTogether[StartNuc : (StartNuc+2)],collapse = ''))
StartNuc = StartNuc+3
}
AllCodons = length(CodonsVec)        # 1021
CodonsVecNeutral = CodonsVec[CodonsVec %in% VecOfSynFourFoldDegenerateSites]
NeutralCodons = length(CodonsVecNeutral) # 1900
data.frame(table(CodonsVecNeutral))
CodonsVecNeutral = gsub("CTA|GTA|TCA|CCA|ACA|GCA|CGA|GGA",'A',CodonsVecNeutral)
CodonsVecNeutral = gsub("CTT|GTT|TCT|CCT|ACT|GCT|CGT|GGT",'T',CodonsVecNeutral)
CodonsVecNeutral = gsub("CTG|GTG|TCG|CCG|ACG|GCG|CGG|GGG",'G',CodonsVecNeutral)
CodonsVecNeutral = gsub("CTC|GTC|TCC|CCC|ACC|GCC|CGC|GGC",'C',CodonsVecNeutral)
Line=c(Species,Gene,length(CodonsVecNeutral[CodonsVecNeutral == 'A']),length(CodonsVecNeutral[CodonsVecNeutral == 'T']),length(CodonsVecNeutral[CodonsVecNeutral == 'G']),length(CodonsVecNeutral[CodonsVecNeutral == 'C']), AllCodons, NeutralCodons)
if (i == 1) {Final = Line}
if (i >  1) {Final = rbind(Final,Line)}
}
}
}
Final = as.data.frame(Final); names(Final)=c('Species','Gene','A','T','G','C','NumberOfAllCodons',"NumberOfFourFoldDegenCodons")
write.table(Final, "../../Body/3Results/VertebratePolymorphisms.Normalization.NeutralATGC.txt", quote = FALSE, row.names = FALSE)
rm(list=ls(all=TRUE))
VecOfSynFourFoldDegenerateSites <- c('CTT', 'CTC', 'CTA', 'CTG',
'GTT', 'GTC', 'GTA', 'GTG',
'TCT', 'TCC', 'TCA', 'TCG',
'CCT', 'CCC', 'CCA', 'CCG',
'ACT', 'ACC', 'ACA', 'ACG',
'GCT', 'GCC', 'GCA', 'GCG',
'CGT', 'CGC', 'CGA', 'CGG',
'GGT', 'GGC', 'GGA', 'GGG')
List = list.files("../../Body/2Derived/POLARIZEDBR_DATA/POLARIZEDBR_DATA/")
for (i in 1:length(List)){ # i = 1303
infile = paste("../../Body/2Derived/POLARIZEDBR_DATA/",as.character(List[i]),sep='')
if (length(grep('POLARISED',infile)) > 0)
{
Species = gsub('\\..*','',as.character(List[i]))
Gene = gsub(Species,'',as.character(List[i])); Gene = gsub('.POLARISED.txt','',Gene); Gene = gsub('\\.POLARISED.txt','',Gene); Gene = gsub('\\.','',Gene);
GeneSpecies = read.table(infile, header = TRUE)
GeneSpecies = GeneSpecies[GeneSpecies$BranchPosition == 'External',]
ExternalSeqsTogether = paste(GeneSpecies$MoreShallowNodeSeq,collapse = '')
ExternalSeqsTogether = unlist(strsplit(ExternalSeqsTogether,'')) # 5700/3
CodonsVec = c(); StartNuc = 1
if (length(ExternalSeqsTogether)/3 == round(length(ExternalSeqsTogether)/3))  # if divide by 3 without the rest
{
for (j in 1:(length(ExternalSeqsTogether)/3))
{
CodonsVec = c(CodonsVec,paste(ExternalSeqsTogether[StartNuc : (StartNuc+2)],collapse = ''))
StartNuc = StartNuc+3
}
AllCodons = length(CodonsVec)        # 1021
CodonsVecNeutral = CodonsVec[CodonsVec %in% VecOfSynFourFoldDegenerateSites]
NeutralCodons = length(CodonsVecNeutral) # 1900
data.frame(table(CodonsVecNeutral))
CodonsVecNeutral = gsub("CTA|GTA|TCA|CCA|ACA|GCA|CGA|GGA",'A',CodonsVecNeutral)
CodonsVecNeutral = gsub("CTT|GTT|TCT|CCT|ACT|GCT|CGT|GGT",'T',CodonsVecNeutral)
CodonsVecNeutral = gsub("CTG|GTG|TCG|CCG|ACG|GCG|CGG|GGG",'G',CodonsVecNeutral)
CodonsVecNeutral = gsub("CTC|GTC|TCC|CCC|ACC|GCC|CGC|GGC",'C',CodonsVecNeutral)
Line=c(Species,Gene,length(CodonsVecNeutral[CodonsVecNeutral == 'A']),length(CodonsVecNeutral[CodonsVecNeutral == 'T']),length(CodonsVecNeutral[CodonsVecNeutral == 'G']),length(CodonsVecNeutral[CodonsVecNeutral == 'C']), AllCodons, NeutralCodons)
if (i == 1) {Final = Line}
if (i >  1) {Final = rbind(Final,Line)}
}
}
}
rm(list=ls(all=TRUE))
VecOfSynFourFoldDegenerateSites <- c('CTT', 'CTC', 'CTA', 'CTG',
'GTT', 'GTC', 'GTA', 'GTG',
'TCT', 'TCC', 'TCA', 'TCG',
'CCT', 'CCC', 'CCA', 'CCG',
'ACT', 'ACC', 'ACA', 'ACG',
'GCT', 'GCC', 'GCA', 'GCG',
'CGT', 'CGC', 'CGA', 'CGG',
'GGT', 'GGC', 'GGA', 'GGG')
List = list.files("../../Body/2Derived/POLARIZEDBR_DATA/POLARIZEDBR_DATA/")
for (i in 1:length(List)){ # i = 1303
infile = paste("../../Body/2Derived/POLARIZEDBR_DATA/POLARIZEDBR_DATA/",as.character(List[i]),sep='')
if (length(grep('POLARISED',infile)) > 0)
{
Species = gsub('\\..*','',as.character(List[i]))
Gene = gsub(Species,'',as.character(List[i])); Gene = gsub('.POLARISED.txt','',Gene); Gene = gsub('\\.POLARISED.txt','',Gene); Gene = gsub('\\.','',Gene);
GeneSpecies = read.table(infile, header = TRUE)
GeneSpecies = GeneSpecies[GeneSpecies$BranchPosition == 'External',]
ExternalSeqsTogether = paste(GeneSpecies$MoreShallowNodeSeq,collapse = '')
ExternalSeqsTogether = unlist(strsplit(ExternalSeqsTogether,'')) # 5700/3
CodonsVec = c(); StartNuc = 1
if (length(ExternalSeqsTogether)/3 == round(length(ExternalSeqsTogether)/3))  # if divide by 3 without the rest
{
for (j in 1:(length(ExternalSeqsTogether)/3))
{
CodonsVec = c(CodonsVec,paste(ExternalSeqsTogether[StartNuc : (StartNuc+2)],collapse = ''))
StartNuc = StartNuc+3
}
AllCodons = length(CodonsVec)        # 1021
CodonsVecNeutral = CodonsVec[CodonsVec %in% VecOfSynFourFoldDegenerateSites]
NeutralCodons = length(CodonsVecNeutral) # 1900
data.frame(table(CodonsVecNeutral))
CodonsVecNeutral = gsub("CTA|GTA|TCA|CCA|ACA|GCA|CGA|GGA",'A',CodonsVecNeutral)
CodonsVecNeutral = gsub("CTT|GTT|TCT|CCT|ACT|GCT|CGT|GGT",'T',CodonsVecNeutral)
CodonsVecNeutral = gsub("CTG|GTG|TCG|CCG|ACG|GCG|CGG|GGG",'G',CodonsVecNeutral)
CodonsVecNeutral = gsub("CTC|GTC|TCC|CCC|ACC|GCC|CGC|GGC",'C',CodonsVecNeutral)
Line=c(Species,Gene,length(CodonsVecNeutral[CodonsVecNeutral == 'A']),length(CodonsVecNeutral[CodonsVecNeutral == 'T']),length(CodonsVecNeutral[CodonsVecNeutral == 'G']),length(CodonsVecNeutral[CodonsVecNeutral == 'C']), AllCodons, NeutralCodons)
if (i == 1) {Final = Line}
if (i >  1) {Final = rbind(Final,Line)}
}
}
}
rm(list=ls(all=TRUE))
##########barplots########
NormFrac = read.table("../../Body/3Results/VertebratePolymorphisms.Normalization.Normalized12Fractions.txt", header = TRUE)
View(NormFrac)
View(NormFrac)
NormFracMamm = NormFrac[NormFrac$Class %in% "Mammalia",]
NormFracMamm
library("ggpubr")
View(NormFracMamm)
ggbarplot(NormFracMamm, "Subs", "Normalised2Number",
fill = "Subs")
ggbarplot(NormFracMamm, "Subs", "Normalised2Number",
fill = "Subs", color = "Subs", palette = c("#bb1300", "#f2e800", "#74c500", "#0080ce", "#7748ec", "#ce23e3", "#ffc6ee", "#cbbcee", "#9acae7", "#bace9e", "#e5e3b9", "#c56e64"))
ggbarplot(NormFracMamm, "Subs", "Normalised2Number",
fill = "Subs", color = "Subs", palette = c("#bb1300", "#e5e3b9", "#74c500", "#0080ce", "#7748ec", "#ffc6ee", "#ce23e3", "#cbbcee", "#9acae7", "#bace9e", "#f2e800", "#c56e64"))
ggbarplot(NormFracMamm, "Subs", "Normalised2Number", xlab="Substitution types", ylab="Normalised frequencies"
fill = "Subs", color = "Subs", palette = c("#bb1300", "#e5e3b9", "#74c500", "#0080ce", "#7748ec", "#ffc6ee", "#ce23e3", "#cbbcee", "#9acae7", "#bace9e", "#f2e800", "#c56e64"))
ggbarplot(NormFracMamm, "Subs", "Normalised2Number", xlab="Substitution types", ylab="Normalised frequencies",
fill = "Subs", color = "Subs", palette = c("#bb1300", "#e5e3b9", "#74c500", "#0080ce", "#7748ec", "#ffc6ee", "#ce23e3", "#cbbcee", "#9acae7", "#bace9e", "#f2e800", "#c56e64"))
ggbarplot(NormFracMamm, "Subs", "Normalised2Number", xlab="Substitution types", ylab="Normalised frequencies",
fill = "Subs", color = "Subs", palette = c("#bb1300", "#e5e3b9", "#74c500", "#0080ce", "#7748ec", "#ffc6ee", "#ce23e3", "#cbbcee", "#9acae7", "#bace9e", "#f2e800", "#c56e64"),
panel.labs = list(subs=c("T_G", "T_C", "T_A", "G_T", "G_C", "G_A", "C_T", "C_G" , "C_A", "A_T", "A_G", "A_C")))
ggbarplot(NormFracMamm, "Subs", "Normalised2Number", xlab="Substitution types", ylab="Normalised frequencies",
fill = "Subs", color = "Subs", palette = c("#bb1300", "#e5e3b9", "#74c500", "#0080ce", "#7748ec", "#ffc6ee", "#ce23e3", "#cbbcee", "#9acae7", "#bace9e", "#f2e800", "#c56e64"),
panel.labs = list(Subs=c("T_G", "T_C", "T_A", "G_T", "G_C", "G_A", "C_T", "C_G" , "C_A", "A_T", "A_G", "A_C")))
ggbarplot(NormFracMamm, "Subs", "Normalised2Number", xlab="Substitution types", ylab="Normalised frequencies",
fill = "Subs", color = "Subs", palette = c("#bb1300", "#e5e3b9", "#74c500", "#0080ce", "#7748ec", "#ffc6ee", "#ce23e3", "#cbbcee", "#9acae7", "#bace9e", "#f2e800", "#c56e64"),
panel.labs = c("T_G", "T_C", "T_A", "G_T", "G_C", "G_A", "C_T", "C_G" , "C_A", "A_T", "A_G", "A_C"))
ggbarplot(NormFracMamm, "Subs", "Normalised2Number", xlab="Substitution types", ylab="Normalised frequencies",
ggbarplot(NormFracMamm, "Subs", "Normalised2Number", xlab="Substitution types", ylab="Normalised frequencies",
rm(list=ls(all=TRUE))
NormFrac = read.table("../../Body/3Results/VertebratePolymorphisms.Normalization.Normalized12Fractions.txt", header = TRUE)
NormFracMamm = NormFrac[NormFrac$Class %in% "Mammalia",]
if (NormFracMamm$Subs == "A_C") {NormFracMamm$SubsHCh = "T_G"}
if (NormFracMamm$Subs == "A_G") {NormFracMamm$SubsHCh = "T_C"}
if (NormFracMamm$Subs == "A_T") {NormFracMamm$SubsHCh = "T_A"}
if (NormFracMamm$Subs == "C_A") {NormFracMamm$SubsHCh = "G_T"}
if (NormFracMamm$Subs == "C_G") {NormFracMamm$SubsHCh = "G_C"}
if (NormFracMamm$Subs == "C_T") {NormFracMamm$SubsHCh = "G_A"}
if (NormFracMamm$Subs == "G_A") {NormFracMamm$SubsHCh = "C_T"}
if (NormFracMamm$Subs == "G_C") {NormFracMamm$SubsHCh = "C_G"}
if (NormFracMamm$Subs == "G_T") {NormFracMamm$SubsHCh = "C_A"}
if (NormFracMamm$Subs == "T_A") {NormFracMamm$SubsHCh = "A_T"}
if (NormFracMamm$Subs == "T_C") {NormFracMamm$SubsHCh = "A_G"}
rm(list=ls(all=TRUE))
NormFrac = read.table("../../Body/3Results/VertebratePolymorphisms.Normalization.Normalized12Fractions.txt", header = TRUE)
NormFracMamm = NormFrac[NormFrac$Class %in% "Mammalia",]
NormFracMamm$SubsHCh = 1
View(NormFracMamm)
for ( i in 1:lenght(NormFracMamm)){
if (NormFracMamm$Subs[i] == "A_C") {NormFracMamm$SubsHCh[i] = "T_G"}
if (NormFracMamm$Subs[i] == "A_G") {NormFracMamm$SubsHCh[i] = "T_C"}
if (NormFracMamm$Subs[i] == "A_T") {NormFracMamm$SubsHCh[i] = "T_A"}
if (NormFracMamm$Subs[i] == "C_A") {NormFracMamm$SubsHCh[i] = "G_T"}
if (NormFracMamm$Subs[i] == "C_G") {NormFracMamm$SubsHCh[i] = "G_C"}
if (NormFracMamm$Subs[i] == "C_T") {NormFracMamm$SubsHCh[i] = "G_A"}
if (NormFracMamm$Subs[i] == "G_A") {NormFracMamm$SubsHCh[i] = "C_T"}
if (NormFracMamm$Subs[i] == "G_C") {NormFracMamm$SubsHCh[i] = "C_G"}
if (NormFracMamm$Subs[i] == "G_T") {NormFracMamm$SubsHCh[i] = "C_A"}
if (NormFracMamm$Subs[i] == "T_A") {NormFracMamm$SubsHCh[i] = "A_T"}
if (NormFracMamm$Subs[i] == "T_C") {NormFracMamm$SubsHCh[i] = "A_G"}
if (NormFracMamm$Subs[i] == "T_G") {NormFracMamm$SubsHCh[i] = "A_C"}
}
for ( i in 1:lengh(NormFracMamm)){
if (NormFracMamm$Subs[i] == "A_C") {NormFracMamm$SubsHCh[i] = "T_G"}
if (NormFracMamm$Subs[i] == "A_G") {NormFracMamm$SubsHCh[i] = "T_C"}
if (NormFracMamm$Subs[i] == "A_T") {NormFracMamm$SubsHCh[i] = "T_A"}
if (NormFracMamm$Subs[i] == "C_A") {NormFracMamm$SubsHCh[i] = "G_T"}
if (NormFracMamm$Subs[i] == "C_G") {NormFracMamm$SubsHCh[i] = "G_C"}
if (NormFracMamm$Subs[i] == "C_T") {NormFracMamm$SubsHCh[i] = "G_A"}
if (NormFracMamm$Subs[i] == "G_A") {NormFracMamm$SubsHCh[i] = "C_T"}
if (NormFracMamm$Subs[i] == "G_C") {NormFracMamm$SubsHCh[i] = "C_G"}
if (NormFracMamm$Subs[i] == "G_T") {NormFracMamm$SubsHCh[i] = "C_A"}
if (NormFracMamm$Subs[i] == "T_A") {NormFracMamm$SubsHCh[i] = "A_T"}
if (NormFracMamm$Subs[i] == "T_C") {NormFracMamm$SubsHCh[i] = "A_G"}
if (NormFracMamm$Subs[i] == "T_G") {NormFracMamm$SubsHCh[i] = "A_C"}
}
for ( i in 1:length(NormFracMamm)){
if (NormFracMamm$Subs[i] == "A_C") {NormFracMamm$SubsHCh[i] = "T_G"}
if (NormFracMamm$Subs[i] == "A_G") {NormFracMamm$SubsHCh[i] = "T_C"}
if (NormFracMamm$Subs[i] == "A_T") {NormFracMamm$SubsHCh[i] = "T_A"}
if (NormFracMamm$Subs[i] == "C_A") {NormFracMamm$SubsHCh[i] = "G_T"}
if (NormFracMamm$Subs[i] == "C_G") {NormFracMamm$SubsHCh[i] = "G_C"}
if (NormFracMamm$Subs[i] == "C_T") {NormFracMamm$SubsHCh[i] = "G_A"}
if (NormFracMamm$Subs[i] == "G_A") {NormFracMamm$SubsHCh[i] = "C_T"}
if (NormFracMamm$Subs[i] == "G_C") {NormFracMamm$SubsHCh[i] = "C_G"}
if (NormFracMamm$Subs[i] == "G_T") {NormFracMamm$SubsHCh[i] = "C_A"}
if (NormFracMamm$Subs[i] == "T_A") {NormFracMamm$SubsHCh[i] = "A_T"}
if (NormFracMamm$Subs[i] == "T_C") {NormFracMamm$SubsHCh[i] = "A_G"}
if (NormFracMamm$Subs[i] == "T_G") {NormFracMamm$SubsHCh[i] = "A_C"}
}
ggbarplot(NormFracMamm, "SubsHCh", "Normalised2Number", xlab="Substitution types", ylab="Normalised frequencies",
fill = "Subs", color = "Subs", palette = c("#bb1300", "#e5e3b9", "#74c500", "#0080ce", "#7748ec", "#ffc6ee", "#ce23e3", "#cbbcee", "#9acae7", "#bace9e", "#f2e800", "#c56e64"))
pdf("../../Body/4Figures/VertebratePolymorphisms.Normalization.R.02.Bars.pdf", width = 30, height = 20)
dev.off()
rm(list=ls(all=TRUE))
NormFrac = read.table("../../Body/3Results/VertebratePolymorphisms.Normalization.Normalized12Fractions.txt", header = TRUE)
NormFracMamm = NormFrac[NormFrac$Class %in% "Mammalia",]
NormFracMamm$SubsHCh = 1
for ( i in 1:length(NormFracMamm)){
if (NormFracMamm$Subs[i] == "A_C") {NormFracMamm$SubsHCh[i] = "T_G"}
if (NormFracMamm$Subs[i] == "A_G") {NormFracMamm$SubsHCh[i] = "T_C"}
if (NormFracMamm$Subs[i] == "A_T") {NormFracMamm$SubsHCh[i] = "T_A"}
if (NormFracMamm$Subs[i] == "C_A") {NormFracMamm$SubsHCh[i] = "G_T"}
if (NormFracMamm$Subs[i] == "C_G") {NormFracMamm$SubsHCh[i] = "G_C"}
if (NormFracMamm$Subs[i] == "C_T") {NormFracMamm$SubsHCh[i] = "G_A"}
if (NormFracMamm$Subs[i] == "G_A") {NormFracMamm$SubsHCh[i] = "C_T"}
if (NormFracMamm$Subs[i] == "G_C") {NormFracMamm$SubsHCh[i] = "C_G"}
if (NormFracMamm$Subs[i] == "G_T") {NormFracMamm$SubsHCh[i] = "C_A"}
if (NormFracMamm$Subs[i] == "T_A") {NormFracMamm$SubsHCh[i] = "A_T"}
if (NormFracMamm$Subs[i] == "T_C") {NormFracMamm$SubsHCh[i] = "A_G"}
if (NormFracMamm$Subs[i] == "T_G") {NormFracMamm$SubsHCh[i] = "A_C"}
}
pdf("../../Body/4Figures/VertebratePolymorphisms.Normalization.R.02.Bars.pdf", width = 30, height = 20)
ggbarplot(NormFracMamm, "SubsHCh", "Normalised2Number", xlab="Substitution types", ylab="Normalised frequencies",
fill = "Subs", color = "Subs", palette = c("#bb1300", "#e5e3b9", "#74c500", "#0080ce", "#7748ec", "#ffc6ee", "#ce23e3", "#cbbcee", "#9acae7", "#bace9e", "#f2e800", "#c56e64"))
dev.off()
pdf("../../Body/4Figures/VertebratePolymorphisms.Normalization.R.02.Bars.pdf")
ggbarplot(NormFracMamm, "SubsHCh", "Normalised2Number", xlab="Substitution types", ylab="Normalised frequencies",
fill = "Subs", color = "Subs", palette = c("#bb1300", "#e5e3b9", "#74c500", "#0080ce", "#7748ec", "#ffc6ee", "#ce23e3", "#cbbcee", "#9acae7", "#bace9e", "#f2e800", "#c56e64"))
dev.off()
rm(list=ls(all=TRUE))
NormFrac = read.table("../../Body/3Results/VertebratePolymorphisms.Normalization.Normalized12Fractions.txt", header = TRUE)
NormFracMamm = NormFrac[NormFrac$Class %in% "Mammalia",]
NormFracMamm$SubsHCh = 1
for ( i in 1:length(NormFracMamm)){
if (NormFracMamm$Subs[i] == "A_C") {NormFracMamm$SubsHCh[i] = "T_G"}
if (NormFracMamm$Subs[i] == "A_G") {NormFracMamm$SubsHCh[i] = "T_C"}
if (NormFracMamm$Subs[i] == "A_T") {NormFracMamm$SubsHCh[i] = "T_A"}
if (NormFracMamm$Subs[i] == "C_A") {NormFracMamm$SubsHCh[i] = "G_T"}
if (NormFracMamm$Subs[i] == "C_G") {NormFracMamm$SubsHCh[i] = "G_C"}
if (NormFracMamm$Subs[i] == "C_T") {NormFracMamm$SubsHCh[i] = "G_A"}
if (NormFracMamm$Subs[i] == "G_A") {NormFracMamm$SubsHCh[i] = "C_T"}
if (NormFracMamm$Subs[i] == "G_C") {NormFracMamm$SubsHCh[i] = "C_G"}
if (NormFracMamm$Subs[i] == "G_T") {NormFracMamm$SubsHCh[i] = "C_A"}
if (NormFracMamm$Subs[i] == "T_A") {NormFracMamm$SubsHCh[i] = "A_T"}
if (NormFracMamm$Subs[i] == "T_C") {NormFracMamm$SubsHCh[i] = "A_G"}
if (NormFracMamm$Subs[i] == "T_G") {NormFracMamm$SubsHCh[i] = "A_C"}
}
pdf("../../Body/4Figures/VertebratePolymorphisms.Normalization.R.02.Bars.pdf")
ggbarplot(NormFracMamm, "SubsHCh", "Normalised2Number", xlab="Substitution types", ylab="Normalised frequencies",
fill = "Subs", color = "Subs", palette = c("#bb1300", "#e5e3b9", "#74c500", "#0080ce", "#7748ec", "#ffc6ee", "#ce23e3", "#cbbcee", "#9acae7", "#bace9e", "#f2e800", "#c56e64"))
dev.off()
pdf("../../Body/4Figures/VertebratePolymorphisms.Normalization.R.02.Bars.pdf")
ggbarplot(NormFracMamm, "SubsHCh", "Normalised2Number", xlab="Substitution types", ylab="Normalised frequencies",
fill = "Subs", color = "Subs", palette = c("#bb1300", "#e5e3b9", "#74c500", "#0080ce", "#7748ec", "#ffc6ee", "#ffc6ee ", "#cbbcee", "#9acae7", "#bace9e", "#f2e800", "#c56e64"))
dev.off()
pdf("../../Body/4Figures/VertebratePolymorphisms.Normalization.R.02.Bars.pdf")
ggbarplot(NormFracMamm, "SubsHCh", "Normalised2Number", xlab="Substitution types", ylab="Normalised frequencies",
fill = "Subs", color = "Subs", palette = c("#bb1300", "#e5e3b9", "#74c500", "#0080ce", "#7748ec", "#ffc6ee", "#ffc6ee", "#cbbcee", "#9acae7", "#bace9e", "#f2e800", "#c56e64"))
dev.off()
rm(list=ls(all=TRUE))
NormFrac = read.table("../../Body/3Results/VertebratePolymorphisms.Normalization.Normalized12Fractions.txt", header = TRUE)
NormFracMamm = NormFrac[NormFrac$Class %in% "Mammalia",]
NormFracMamm$SubsHCh = 1
for ( i in 1:length(NormFracMamm)){
if (NormFracMamm$Subs[i] == "A_C") {NormFracMamm$SubsHCh[i] = "T_G"}
if (NormFracMamm$Subs[i] == "A_G") {NormFracMamm$SubsHCh[i] = "T_C"}
if (NormFracMamm$Subs[i] == "A_T") {NormFracMamm$SubsHCh[i] = "T_A"}
if (NormFracMamm$Subs[i] == "C_A") {NormFracMamm$SubsHCh[i] = "G_T"}
if (NormFracMamm$Subs[i] == "C_G") {NormFracMamm$SubsHCh[i] = "G_C"}
if (NormFracMamm$Subs[i] == "C_T") {NormFracMamm$SubsHCh[i] = "G_A"}
if (NormFracMamm$Subs[i] == "G_A") {NormFracMamm$SubsHCh[i] = "C_T"}
if (NormFracMamm$Subs[i] == "G_C") {NormFracMamm$SubsHCh[i] = "C_G"}
if (NormFracMamm$Subs[i] == "G_T") {NormFracMamm$SubsHCh[i] = "C_A"}
if (NormFracMamm$Subs[i] == "T_A") {NormFracMamm$SubsHCh[i] = "A_T"}
if (NormFracMamm$Subs[i] == "T_C") {NormFracMamm$SubsHCh[i] = "A_G"}
if (NormFracMamm$Subs[i] == "T_G") {NormFracMamm$SubsHCh[i] = "A_C"}
}
pdf("../../Body/4Figures/VertebratePolymorphisms.Normalization.R.02.Bars.pdf")
ggbarplot(NormFracMamm, "SubsHCh", "Normalised2Number", xlab="Substitution types", ylab="Normalised frequencies",
fill = "Subs", color = "Subs", palette = c("#bb1300", "#e5e3b9", "#74c500", "#0080ce", "#7748ec", "#ffc6ee", "#ffc6ee", "#cbbcee", "#9acae7", "#bace9e", "#f2e800", "#c56e64"))
dev.off()
rm(list=ls(all=TRUE))
NormFrac = read.table("../../Body/3Results/VertebratePolymorphisms.Normalization.Normalized12Fractions.txt", header = TRUE)
NormFracMamm = NormFrac[NormFrac$Class %in% "Mammalia",]
NormFracMamm$SubsHCh = 1
for ( i in 1:length(NormFracMamm)){
if (NormFracMamm$Subs[i] == "A_C") {NormFracMamm$SubsHCh[i] = "T_G"}
if (NormFracMamm$Subs[i] == "A_G") {NormFracMamm$SubsHCh[i] = "T_C"}
if (NormFracMamm$Subs[i] == "A_T") {NormFracMamm$SubsHCh[i] = "T_A"}
if (NormFracMamm$Subs[i] == "C_A") {NormFracMamm$SubsHCh[i] = "G_T"}
if (NormFracMamm$Subs[i] == "C_G") {NormFracMamm$SubsHCh[i] = "G_C"}
if (NormFracMamm$Subs[i] == "C_T") {NormFracMamm$SubsHCh[i] = "G_A"}
if (NormFracMamm$Subs[i] == "G_A") {NormFracMamm$SubsHCh[i] = "C_T"}
if (NormFracMamm$Subs[i] == "G_C") {NormFracMamm$SubsHCh[i] = "C_G"}
if (NormFracMamm$Subs[i] == "G_T") {NormFracMamm$SubsHCh[i] = "C_A"}
if (NormFracMamm$Subs[i] == "T_A") {NormFracMamm$SubsHCh[i] = "A_T"}
if (NormFracMamm$Subs[i] == "T_C") {NormFracMamm$SubsHCh[i] = "A_G"}
if (NormFracMamm$Subs[i] == "T_G") {NormFracMamm$SubsHCh[i] = "A_C"}
}
pdf("../../Body/4Figures/VertebratePolymorphisms.Normalization.R.02.Bars.pdf")
ggbarplot(NormFracMamm, "SubsHCh", "Normalised2Number", xlab="Substitution types", ylab="Normalised frequencies",
fill = "Subs", color = "Subs", palette = c("#bb1300", "#e5e3b9", "#74c500", "#0080ce", "#7748ec", "#ffc6ee", "#ff00b3", "#cbbcee", "#9acae7", "#bace9e", "#f2e800", "#c56e64"))
dev.off()
