summary(a)
plot(log2(MamGt$GenerationLength_d),log2(MamGt$TsTv))
abline(a)
plot(log2(MamGt$GenerationLength_d),log2(MamGt$TsTv))
abline(a, col = 'red', lwd = 2)
plot(log2(MamGt$GenerationLength_d),MamGt$T_C)
cor.test(MamGt$GenerationLength_d,MamGt$T_C, method = 'spearman') # positive, rhp = 0.25
plot(log2(MamGt$GenerationLength_d),MamGt$T_C)
a<-lm(MamGt$T_C ~ log2(MamGt$GenerationLength_d))
summary(a)
plot(log2(MamGt$GenerationLength_d),MamGt$T_C)
abline(a, col = 'red', lwd = 2)
rm(list=ls(all=TRUE))
pdf('../../Body/4Figures/VertebratePolymorphisms.MutSpecComparisons.Analyses.Ecology.Mammals.R.01.pdf')
MUT = read.table('../../Body/3Results/VertebratePolymorphisms.MutSpecData.OnlyFourFoldDegCytb.txt', header = TRUE) # OnlyFourFoldDegCytb
MUT$TsTv = (MUT$T_C + MUT$C_T + MUT$G_A + MUT$A_G) / (MUT$T_A + MUT$A_T + MUT$G_C + MUT$C_G + MUT$G_T + MUT$T_G + MUT$C_A + MUT$A_C)
summary(MUT$TsTv)
MUT = MUT[MUT$TsTv < Inf,]
GT = read.table('../../Body/1Raw/GenerationLenghtforMammals.xlsx.txt', sep = '\t', header = TRUE)
GT$Species = gsub(' ','_',GT$Scientific_name)
Temper = read.table('../../Body/1Raw/BodyParametersForAllClasses.txt', header = TRUE)
MamGt = merge(GT,MUT, by = 'Species') # 426
Qual = data.frame(table(MamGt$Species))
UniqueSpecies = Qual[Qual$Freq == 1,]$Var1; length(UniqueSpecies);
MamGt = MamGt[MamGt$Species %in% UniqueSpecies,]
MamGt$TC_TCGA = MamGt$T_C / (MamGt$T_C + MamGt$G_A) #  424
######## add the number of mutations per species
Number = read.table('../../Body/3Results/VertebratePolymorphisms.MutSpecData.txt')
Number = data.frame(Number$Species,Number$NumOfFourFoldMutInCytB); names(Number)=c('Species','NumOfFourFoldMutInCytB')
Number = unique(Number) # 2118
nrow(MamGt) # 424
MamGt = merge(MamGt,Number, by ='Species')
nrow(MamGt) # 424
######## TC_TCGA and Generation length
summary(MamGt$TC_TCGA) #  0.0000  0.1335  0.2007  0.2196  0.2815  1.0000
cor.test(MamGt$TC_TCGA,MamGt$GenerationLength_d, method = 'spearman') # rho = 0.21, p = 8.441e-06 PAPER
######## TsTv and Generation length - significant
nrow(MamGt)  # 424
cor.test(MamGt$TsTv,MamGt$GenerationLength_d, method = 'spearman') # rho = 0.228, p = 2.021e-06
a <- lm(log2(MamGt$TsTv) ~ log2(MamGt$GenerationLength_d));
summary(a)
# (Intercept)                     0.97246    0.56084   1.734   0.0837 .
# log2(MamGt$GenerationLength_d)  0.23602    0.05361   4.402 1.36e-05 ***
plot(log2(MamGt$GenerationLength_d),log2(MamGt$TsTv))
abline(a, col = 'red', lwd = 2)
#### Generation length ~ T>C + A>G
cor.test(MamGt$GenerationLength_d,MamGt$A_T, method = 'spearman') # negative, - 0.22
cor.test(MamGt$GenerationLength_d,MamGt$A_G, method = 'spearman')
cor.test(MamGt$GenerationLength_d,MamGt$A_C, method = 'spearman') # negative, - 0.17
cor.test(MamGt$GenerationLength_d,MamGt$T_C, method = 'spearman') # positive, rhp = 0.25
cor.test(MamGt$GenerationLength_d,MamGt$T_A, method = 'spearman')
cor.test(MamGt$GenerationLength_d,MamGt$T_G, method = 'spearman')
cor.test(MamGt$GenerationLength_d,MamGt$G_A, method = 'spearman')
cor.test(MamGt$GenerationLength_d,MamGt$G_T, method = 'spearman') # negative, -0.27
cor.test(MamGt$GenerationLength_d,MamGt$G_C, method = 'spearman')
cor.test(MamGt$GenerationLength_d,MamGt$C_A, method = 'spearman') # negative, - 0.23
cor.test(MamGt$GenerationLength_d,MamGt$C_T, method = 'spearman')
cor.test(MamGt$GenerationLength_d,MamGt$C_G, method = 'spearman')
a<-lm(MamGt$GenerationLength_d ~ MamGt$A_T +  MamGt$A_G + MamGt$A_C + MamGt$T_C + MamGt$T_G + MamGt$G_T + MamGt$C_A); summary(a) # T>C is the most significant
a<-lm(MamGt$GenerationLength_d ~ MamGt$A_T +  MamGt$A_G + MamGt$A_C + MamGt$T_C + MamGt$G_T + MamGt$C_A); summary(a) # T>C is the most significant
a<-lm(MamGt$GenerationLength_d ~ MamGt$A_T +  MamGt$A_G + MamGt$T_C + MamGt$G_T + MamGt$C_A); summary(a) # T>C is the most significant
a<-lm(MamGt$GenerationLength_d ~ MamGt$A_T +  MamGt$T_C + MamGt$G_T + MamGt$C_A); summary(a) # T>C is the most significant
a<-lm(MamGt$GenerationLength_d ~ MamGt$A_T +  MamGt$T_C + MamGt$G_T); summary(a) # T>C is the most significant
a<-lm(log2(MamGt$GenerationLength_d) ~ scale(MamGt$A_T) +  scale(MamGt$T_C) + scale(MamGt$G_T)); summary(a) # T>C is the most significant#
# (Intercept)      10.39025    0.05584 186.064  < 2e-16 ***
#  scale(MamGt$A_T) -0.18037    0.05603  -3.219  0.00138 **
#  scale(MamGt$T_C)  0.26205    0.05734   4.570 6.42e-06 ***
#  scale(MamGt$G_T) -0.18386    0.05723  -3.213  0.00142 **
cor.test(MamGt$GenerationLength_d,MamGt$T_C, method = 'spearman') # positive, rho = 0.2536943, p = 1.188e-07
a<-lm(MamGt$T_C ~ log2(MamGt$GenerationLength_d))
summary(a)
# (Intercept)                    -0.030871   0.036446  -0.847    0.397
# log2(MamGt$GenerationLength_d)  0.019082   0.003484   5.477 7.44e-08 ***
plot(log2(MamGt$GenerationLength_d),MamGt$T_C)
abline(a, col = 'red', lwd = 2)
#### ADD NUMBER OF MUTATIONS USED TO ESTIMATE MUT SPEC
summary(MamGt$NumOfFourFoldMutInCytB) # 5.00   33.75   58.50   84.34  117.50  403.00
a<-lm(log2(MamGt$GenerationLength_d) ~ scale(MamGt$A_T) +  scale(MamGt$T_C) + scale(MamGt$G_T) + scale(MamGt$NumOfFourFoldMutInCytB)); summary(a)
### remove effect of ancestral nucleotide frequency (WORKS!!!!!)
MamGt$T_C.NoEffectOfTFreq = MamGt$T_C / (MamGt$T_C + MamGt$T_A + MamGt$T_G); summary(MamGt$T_C.NoEffectOfTFreq)
cor.test(MamGt$GenerationLength_d,MamGt$T_C.NoEffectOfTFreq, method = 'spearman') # positive and significant!!!! rho = 0.164, p = 0.0007114
#### ALINA, PICS - MamGt dataset:
#1)  MamGt$TsTv versus MamGt$GenerationLength_d
#2)  MamGt$T_C versus MamGt$GenerationLength_d
##########################################################################################
#################### PICs
library(ape)
tree <- read.tree("../../Body/1Raw/mtalign.aln.treefile.rooted")
data = MamGt[which(as.character(MamGt$Species) %in% tree$tip.label),]
df_vec <- as.character(MamGt$Species)
tree_vec <- tree$tip.label
a <- setdiff(df_vec, tree_vec)
b <- setdiff(tree_vec, df_vec)
row.names(data) = data$Species
tree2 <- drop.tip(tree, b)
TempData = data[, c('TsTv', 'GenerationLength_d', 'T_C')]
contrasts <- as.data.frame(apply(TempData, 2, pic, tree2))
names(contrasts) = names(TempData)
cor.test(MamGt$TsTv, MamGt$GenerationLength_d, method = 'spearman')
cor.test(contrasts$TsTv, log(contrasts$GenerationLength_d), method = 'spearman')
# rho = 0.09273606, pvalue = 0.2811
cor.test(MamGt$T_C, MamGt$GenerationLength_d, method = 'spearman')
cor.test(contrasts$T_C, log(contrasts$GenerationLength_d), method = 'spearman')
# rho = 0.08338287, pvalue = 0.3327
plot(contrasts$T_C, contrasts$GenerationLength_d)
plot(MamGt$T_C, MamGt$GenerationLength_d)
summary(contrasts)
##### take into account number of mutations
####### more than 20
TempData20 = data[data$NumOfFourFoldMutInCytB > 20, ]
df_vec <- as.character(TempData20$Species)
tree_vec <- tree$tip.label
a <- setdiff(df_vec, tree_vec)
b <- setdiff(tree_vec, df_vec)
row.names(data) = data$Species
tree2 <- drop.tip(tree, b)
TempData20 = TempData20[, c('TsTv', 'GenerationLength_d', 'T_C')]
contrasts <- as.data.frame(apply(TempData20, 2, pic, tree2))
names(contrasts) = names(TempData20)
cor.test(MamGt$TsTv, MamGt$GenerationLength_d, method = 'spearman')
cor.test(contrasts$TsTv, log(contrasts$GenerationLength_d), method = 'spearman')
# rho = 0.06804767, pvalue = 0.4699
cor.test(MamGt$T_C, MamGt$GenerationLength_d, method = 'spearman')
cor.test(contrasts$T_C, log(contrasts$GenerationLength_d), method = 'spearman')
# rho = 0.1806132, pvalue = 0.05341
########## more than 30
TempData30 = data[data$NumOfFourFoldMutInCytB > 30, ]
df_vec <- as.character(TempData30$Species)
tree_vec <- tree$tip.label
a <- setdiff(df_vec, tree_vec)
b <- setdiff(tree_vec, df_vec)
tree2 <- drop.tip(tree, b)
TempData30 = TempData30[, c('TsTv', 'GenerationLength_d', 'T_C')]
contrasts <- as.data.frame(apply(TempData30, 2, pic, tree2))
names(contrasts) = names(TempData20)
cor.test(contrasts$TsTv, log(contrasts$GenerationLength_d), method = 'spearman')
# rho = 0.09088164, pvalue = 0.371
cor.test(contrasts$T_C, log(contrasts$GenerationLength_d), method = 'spearman')
# rho = 0.1670086, pvalue = 0.09849
########## more than 60
TempData60 = data[data$NumOfFourFoldMutInCytB > 60, ]
df_vec <- as.character(TempData60$Species)
tree_vec <- tree$tip.label
a <- setdiff(df_vec, tree_vec)
b <- setdiff(tree_vec, df_vec)
tree2 <- drop.tip(tree, b)
TempData60 = TempData60[, c('TsTv', 'GenerationLength_d', 'T_C')]
contrasts <- as.data.frame(apply(TempData60, 2, pic, tree2))
names(contrasts) = names(TempData20)
cor.test(contrasts$TsTv, log(contrasts$GenerationLength_d), method = 'spearman')
# rho = 0.1502864, pvalue = 0.2437
cor.test(contrasts$T_C, log(contrasts$GenerationLength_d), method = 'spearman')
# rho = 0.1670086, pvalue = 0.2102
####################################################################################
##### Body Mass (N = 426)
cor.test(MamGt$AdultBodyMass_g,MamGt$A_T, method = 'spearman')
cor.test(MamGt$AdultBodyMass_g,MamGt$A_C, method = 'spearman') # negative
cor.test(MamGt$AdultBodyMass_g,MamGt$A_G, method = 'spearman')
cor.test(MamGt$AdultBodyMass_g,MamGt$T_A, method = 'spearman')
cor.test(MamGt$AdultBodyMass_g,MamGt$T_G, method = 'spearman')
cor.test(MamGt$AdultBodyMass_g,MamGt$T_C, method = 'spearman') # positive
cor.test(MamGt$AdultBodyMass_g,MamGt$G_A, method = 'spearman')
cor.test(MamGt$AdultBodyMass_g,MamGt$G_T, method = 'spearman') # negative
cor.test(MamGt$AdultBodyMass_g,MamGt$G_C, method = 'spearman')
cor.test(MamGt$AdultBodyMass_g,MamGt$C_A, method = 'spearman') # negative
cor.test(MamGt$AdultBodyMass_g,MamGt$C_T, method = 'spearman')
cor.test(MamGt$AdultBodyMass_g,MamGt$C_G, method = 'spearman')
a<-lm(log2(MamGt$AdultBodyMass_g) ~ MamGt$A_C + MamGt$T_C + MamGt$G_T + MamGt$C_A); summary(a)   # T>C is the most significant
a<-lm(log2(MamGt$AdultBodyMass_g) ~ MamGt$T_C + MamGt$G_T + MamGt$C_A); summary(a)   # T>C is the most significant
a<-lm(log2(MamGt$AdultBodyMass_g) ~ MamGt$T_C + MamGt$C_A); summary(a)   # T>C is the most significant
a<-lm(log2(MamGt$AdultBodyMass_g) ~ scale(MamGt$T_C) + scale(MamGt$C_A)); summary(a)   # T>C is the most significant
#########
#### MAMMALS: Body Temperature  (N = 84) - nothing
#########
table(Temper$Class)
Temper = Temper[Temper$Class == 'Mammalia',]
MamTemper = merge(Temper,MUT, by = 'Species') # 84 just
cor.test(MamTemper$Temp,MamTemper$A_T, method = 'spearman')
cor.test(MamTemper$Temp,MamTemper$A_G, method = 'spearman')
cor.test(MamTemper$Temp,MamTemper$A_C, method = 'spearman') #  a bit negative
cor.test(MamTemper$Temp,MamTemper$T_A, method = 'spearman')
cor.test(MamTemper$Temp,MamTemper$T_G, method = 'spearman')
cor.test(MamTemper$Temp,MamTemper$T_C, method = 'spearman')
cor.test(MamTemper$Temp,MamTemper$G_A, method = 'spearman')
cor.test(MamTemper$Temp,MamTemper$G_T, method = 'spearman')
cor.test(MamTemper$Temp,MamTemper$G_C, method = 'spearman')
cor.test(MamTemper$Temp,MamTemper$C_A, method = 'spearman')
cor.test(MamTemper$Temp,MamTemper$C_T, method = 'spearman')
cor.test(MamTemper$Temp,MamTemper$C_G, method = 'spearman')
#########
#### MAMMALS: HIBERNATION  ~ NOTHING
#########
Hib = read.table('../../Body/1Raw/HibernatingMammals.txt', sep = '\t')
names(Hib) = c('Species')
Hib$Species = gsub(' ','_',Hib$Species)
MamGt$G_A.NoEffectOfGFreq = MamGt$G_A / (MamGt$G_A + MamGt$G_T + MamGt$G_C); summary(MamGt$G_A.NoEffectOfGFreq)
nrow(MamGt[MamGt$Species %in% Hib$Species,]) # N = 35
MamGt = MamGt[MamGt$G_A.NoEffectOfGFreq < 1,]
wilcox.test(MamGt[MamGt$Species %in% Hib$Species,]$G_A.NoEffectOfGFreq,MamGt[!MamGt$Species %in% Hib$Species,]$G_A.NoEffectOfGFreq, alternative = 'less')
MamGtTemper = merge(MamGt,Temper) # 78
a<-lm(MamGtTemper$G_A ~ MamGtTemper$GenerationLength_d*MamGtTemper$Temp); summary(a)
#########
#### MAMMALS: BMR from AN AGE
#########
AnAge = read.table('../../Body/1Raw/anage_data.txt', sep = '\t', header = TRUE)
AnAge$Species = paste(AnAge$Genus,AnAge$Species,sep = '_')
AnAgeMammals = AnAge[AnAge$Class == 'Mammalia',]
AnAgeMammals = merge(MUT,AnAgeMammals)
cor.test(AnAgeMammals$G_A,AnAgeMammals$Temperature..K., method = 'spearman')
cor.test(AnAgeMammals$G_A,AnAgeMammals$Metabolic.rate..W., method = 'spearman') # a bit negative
cor.test(AnAgeMammals$A_G,AnAgeMammals$Metabolic.rate..W., method = 'spearman') #
cor.test(AnAgeMammals$T_C,AnAgeMammals$Metabolic.rate..W., method = 'spearman') # a bit positive
cor.test(AnAgeMammals$G_A,AnAgeMammals$Body.mass..g., method = 'spearman') # a bit negative!
#########
#### MAMMALS: PRCOMP
#########
MUT = read.table('../../Body/3Results/VertebratePolymorphisms.MutSpecData.OnlyFourFoldDegCytb.txt', header = TRUE) # OnlyFourFoldDegCytb
MUT$TsTv = (MUT$T_C + MUT$C_T + MUT$G_A + MUT$A_G) / (MUT$T_A + MUT$A_T + MUT$G_C + MUT$C_G + MUT$G_T + MUT$T_G + MUT$C_A + MUT$A_C)
MUT = MUT[MUT$TsTv < Inf,]
GT = read.table('../../Body/1Raw/GenerationLenghtforMammals.xlsx.txt', sep = '\t', header = TRUE)
GT$Species = gsub(' ','_',GT$Scientific_name)
MamGt = merge(GT,MUT, by = 'Species') # 426
Qual = data.frame(table(MamGt$Species))
UniqueSpecies = Qual[Qual$Freq == 1,]$Var1; length(UniqueSpecies);
MamGt = MamGt[MamGt$Species %in% UniqueSpecies,]
######## add the number of mutations per species
Number = read.table('../../Body/3Results/VertebratePolymorphisms.MutSpecData.txt')
Number = data.frame(Number$Species,Number$NumOfFourFoldMutInCytB); names(Number)=c('Species','NumOfFourFoldMutInCytB')
Number = unique(Number) # 2118
nrow(MamGt) # 424
MamGt = merge(MamGt,Number, by ='Species')
nrow(MamGt) # 424
###### PCA
names(MamGt)
MATRIX = MamGt[,c(14:25)]
row.names(MATRIX)=MamGt$Species
matrix = MATRIX
PCA = prcomp(matrix, center = TRUE, scale = TRUE) #FALSE) # I don't scale because we analyze the same units (fraction from MutSpec)
print(PCA)
summary(PCA)
MATRIX$Pca1 = PCA$x[,1]
MATRIX$Pca2 = PCA$x[,2]
MATRIX$Pca3 = PCA$x[,3]
MATRIX$Pca4 = PCA$x[,4]
MATRIX = cbind(MATRIX,MamGt[,c(1:14,26,27)])
###### ANALYSIS OF COMPONENTS
plot(log2(MATRIX$GenerationLength_d),MATRIX$Pca2)
cor.test(MATRIX$Pca1,MATRIX$GenerationLength_d, method = 'spearman') # rho = 0.004288973, p = 0.9298
cor.test(MATRIX$Pca2,MATRIX$GenerationLength_d, method = 'spearman') # rho = -0.3897472, p =  < 2.2e-16
cor.test(MATRIX$Pca3,MATRIX$GenerationLength_d, method = 'spearman') # rho = -0.1037697, p =  0.03266
cor.test(MATRIX$Pca1,MATRIX$NumOfFourFoldMutInCytB, method = 'spearman') # rho = -0.02800981, p = 0.5652
cor.test(MATRIX$Pca2,MATRIX$NumOfFourFoldMutInCytB, method = 'spearman') # rho = 0.2247093, p = 2.964e-06 PAPER
a<-lm(MATRIX$Pca2 ~ scale(MATRIX$GenerationLength_d) + scale(MATRIX$NumOfFourFoldMutInCytB)); summary(a)  # PAPER
a<-lm(MATRIX$Pca2 ~ scale(MATRIX$GenerationLength_d)*scale(MATRIX$NumOfFourFoldMutInCytB)); summary(a)    # PAPER
biplot(PCA, choices=c(1,2), col = c('white','black'), cex = 0.8) #  biplot(princomp(USArrests),choices=c(1,3))
MATRIX$SIZE = (log10(MATRIX$GenerationLength_d) - min(log10(MATRIX$GenerationLength_d))) / (max(log10(MATRIX$GenerationLength_d))   - min(log10(MATRIX$GenerationLength_d)))  #  normilaze data to 0-1 range
summary(MATRIX$SIZE)
plot(MATRIX$Pca1,MATRIX$Pca2, pch = 16, cex = 1.5, col = rgb(MATRIX$SIZE,0,0,1))
plot(MATRIX$Pca1,MATRIX$Pca2, pch = 16, cex = 1.5, col = rgb(0,MATRIX$SIZE,0,1), xlim = c(-11,3), ylim = c(-3,4.5));
biplot(PCA, choices=c(1,2), scale = 0.5, col = c('grey','black'), cex = 0.5) # , xlim = c(-11,3), ylim = c(-3,4.5))
summary(MATRIX$Pca1)
summary(PCA$x[,1])
# arrows(0,0,0.50722224,0.078411901, col = 'red', lwd = 2)
biplot(PCA, choices=c(1,2), scale = 1, col = c('grey','black'), cex = 0.5)
plot(MATRIX$Pca1,MATRIX$Pca2, pch = 16, cex = 1.5, col = rgb(0,0,MATRIX$SIZE,1))
plot(PCA$x[,1],PCA$x[,2])
PCA$x # PC's
PCA$sdev # the eigenvalues (res$sdev) giving information on the magnitude of each PC,
PCA$rotation # and the loadings (res$rotation).
dev.off()
library(gridExtra) # install.packages("gridExtra")
install.packages("gridExtra")
library(gridExtra) # install.packages("gridExtra")
library(grid)
############ Syn mut
unzip("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt.zip", exdir = "../../Body/3Results/")
SynNuc = read.table("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt", header = TRUE, sep = '\t')
if (file.exists("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt")) file.remove("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt")
names(SynNuc)
### make ND6 complementary:
NotND6 = SynNuc[SynNuc$Gene != 'ND6',]
ND6 = SynNuc[SynNuc$Gene == 'ND6',]
A = ND6$NeutralT
T = ND6$NeutralA
G = ND6$NeutralC
C = ND6$NeutralG
ND6$NeutralA = A
ND6$NeutralT = T
ND6$NeutralG = G
ND6$NeutralC = C
SynNuc = rbind(NotND6,ND6)
SynNuc$FrA = SynNuc$NeutralA / (SynNuc$NeutralA + SynNuc$NeutralT + SynNuc$NeutralG + SynNuc$NeutralC)
SynNuc$FrT = SynNuc$NeutralT / (SynNuc$NeutralA + SynNuc$NeutralT + SynNuc$NeutralG + SynNuc$NeutralC)
SynNuc$FrG = SynNuc$NeutralG / (SynNuc$NeutralA + SynNuc$NeutralT + SynNuc$NeutralG + SynNuc$NeutralC)
SynNuc$FrC = SynNuc$NeutralC / (SynNuc$NeutralA + SynNuc$NeutralT + SynNuc$NeutralG + SynNuc$NeutralC)
SynNuc$TAXON = SynNuc$Class
VecOfTaxa = unique(SynNuc$TAXON)
############# GENERATION LENGTH FOR ALL MAMMALS
GT = read.table("../../Body/1Raw/GenerationLenghtforMammals.xlsx.txt", header = TRUE, sep = '\t')
GT$Species = gsub(' ','_',GT$Scientific_name)
length(unique(GT$Species))
summary(GT$AdultBodyMass_g)     # 2        21        71    136058       614 154321304
summary(GT$GenerationLength_d)  # 129.0   624.4  1101.1  1578.8  2064.3 18980.0 # max = 18980 days => 52 years. ok
GT = GT[,c(11,13)]
summary(GT$GenerationLength_d)
############ merge (work only with mammals since GT is only for mammals)
SynNucGT = merge(GT,SynNuc)
length(unique(SynNucGT$Species))  # 649 species
table(SynNucGT$TAXON)
############ data for PICs
library(ape)
tree <- read.tree("../../Body/1Raw/mtalign.aln.treefile.rooted")
data = SynNucGT[which(as.character(SynNucGT$Species) %in% tree$tip.label),]
df_vec <- as.character(SynNucGT$Species)
tree_vec <- tree$tip.label
a <- setdiff(df_vec, tree_vec)
b <- setdiff(tree_vec, df_vec)
row.names(data) = data$Species
tree2 <- drop.tip(tree, b)
TempData = data[, -c(1, 5)]
View(TempData)
contrasts <- as.data.frame(apply(TempData, 2, pic, tree2))
########### question 1: which nucleotides better correlate with GT: log2(GT) = 11 - 0.29*scale(FrT) + 0.33*scale(FrC) (in line with our mutational spectrum result that T->C correlates with generation time)
AGG = aggregate(list(SynNucGT$FrA,SynNucGT$FrT,SynNucGT$FrG,SynNucGT$FrC), by = list(SynNucGT$Species,SynNucGT$GenerationLength_d), FUN = mean)
names(AGG) = c('Species','GenerationLength_d','FrA','FrT','FrG','FrC')
tree <- read.tree("../../Body/1Raw/mtalign.aln.treefile.rooted")
data = AGG[which(as.character(AGG$Species) %in% tree$tip.label),]
data$GenerationLength_d = log2(data$GenerationLength_d)  # I added log of generation length
df_vec <- as.character(AGG$Species)
tree_vec <- tree$tip.label
a <- setdiff(df_vec, tree_vec)
b <- setdiff(tree_vec, df_vec)
data = data[-597,] # is it duplicate!!!???
row.names(data) = data$Species
tree2 <- drop.tip(tree, b)
TempData = data[, -1]
View(data)
install.package(pacman)
install.packages(pacman)
install.packages("pacman")
library(pacman) # install.packages("pacman")
View(TempData)
p_load(tibble, dplyr, magrittr, purrr)
contrasts <- TempData %>%
#  select(generlen, TLOfADRRreal, TLOfADRR1) %>%
#  mutate_if(is.numeric, log2) %>%
map(pic, tree2)
View(contrasts)
cor.test(contrasts$GenerationLength_d, contrasts$FrT, method= 'spearman')  # p = 0.02491, rho = -0.08810244  # PAPER
cor.test(contrasts$GenerationLength_d, contrasts$FrC, method= 'spearman')  # p = 0.02121, rho =  0.09050626  # PAPER
cor.test(contrasts$GenerationLength_d, contrasts$FrA, method= 'spearman')  # p = 0.09415
cor.test(contrasts$GenerationLength_d, contrasts$FrG, method= 'spearman')  # p = 0.06404
View(contrasts)
contrasts2 <- as.data.frame(apply(TempData, 2, pic, tree2))
# contrasts2 <- as.data.frame(apply(TempData, 2, pic, tree2))
names(contrasts2) = names(TempData)
summary(contrasts2$GenerationLength_d)
summary(contrasts$GenerationLength_d)
sumary(pic(TempData$GenerationLength_d, tree2))
summary(pic(TempData$GenerationLength_d, tree2))
summary(pic(TempData$FrA, tree2))
summary(contrasts$FrA)
summary(pic(TempData$GenerationLength_d, tree2)) == summary(contrasts$GenerationLength_d)
cor.test(contrasts$GenerationLength_d, contrasts$FrT, method= 'spearman')  # p = 0.02491, rho = -0.08810244  # PAPER
cor.test(contrasts$GenerationLength_d, contrasts$FrC, method= 'spearman')  # p = 0.02121, rho =  0.09050626  # PAPER
cor.test(contrasts$GenerationLength_d, contrasts$FrA, method= 'spearman')  # p = 0.09415
cor.test(contrasts$GenerationLength_d, contrasts$FrG, method= 'spearman')  # p = 0.06404
### start from pairwise correlations and go to multiple linear model:
cor.test(log2(AGG$GenerationLength_d),AGG$FrA, method = 'spearman') # rho -0.2681362; p = 3.635e-12
cor.test(log2(AGG$GenerationLength_d),AGG$FrT, method = 'spearman') # rho -0.3066279; p = 1.287e-15
cor.test(log2(AGG$GenerationLength_d),AGG$FrG, method = 'spearman') # rho  0.1804395; p = 3.665e-06
cor.test(log2(AGG$GenerationLength_d),AGG$FrC, method = 'spearman') # rho  0.4717114;  p < 2.2e-16
A <- lm(log2(AGG$GenerationLength_d) ~ AGG$FrA + AGG$FrT + AGG$FrC); summary(A) # A is not significant - delete it
A <- lm(log2(AGG$GenerationLength_d) ~ AGG$FrT + AGG$FrC); summary(A)
A <- lm(log2(AGG$GenerationLength_d) ~ scale(AGG$FrT) + scale(AGG$FrC)); summary(A) # log2(GT) = 11.08294 - 0.12 scale(FrT) + 0.45 scale(FrC)
A <- lm(scale(contrasts$GenerationLength_d) ~ contrasts$FrA + contrasts$FrT + contrasts$FrC); summary(A) # A is not significant - delete it
A <- lm(scale(contrasts$GenerationLength_d) ~ contrasts$FrT + contrasts$FrC); summary(A) # only C is significant
A <- lm(scale(contrasts$GenerationLength_d) ~ contrasts$FrC); summary(A) # only C is significant: 0.00596 **
data = AGG[which(as.character(AGG$Species) %in% tree$tip.label),]
TempData = data[, -1]
contrasts <- TempData %>%
#  select(generlen, TLOfADRRreal, TLOfADRR1) %>%
#  mutate_if(is.numeric, log2) %>%
map(pic, tree2)
data = AGG[which(as.character(AGG$Species) %in% tree$tip.label),]
data$GenerationLength_d = log2(data$GenerationLength_d)  # I added log of generation length
data = data[-597,] # It is duplicate
row.names(data) = data$Species
tree2 <- drop.tip(tree, b)
TempData = data[, -1]
contrasts <- TempData %>%
#  select(generlen, TLOfADRRreal, TLOfADRR1) %>%
#  mutate_if(is.numeric, log2) %>%
map(pic, tree2)
summary(pic(TempData$GenerationLength_d, tree2)) == summary(contrasts$GenerationLength_d)
summary(contrasts$GenerationLength_d)
summary(TempData$GenerationLength_d)
summary(pic(TempData$GenerationLength_d, tree2))
A <- lm(scale(contrasts$GenerationLength_d) ~ contrasts$FrA + contrasts$FrT + contrasts$FrC); summary(A) # A is not significant - delete it
summary(pic(TempData$GenerationLength_d, tree2))
summary(contrasts$FrA)
?pic
summary(pic(TempData$GenerationLength_d, tree2, scaled = FALSE))
data = AGG[which(as.character(AGG$Species) %in% tree$tip.label),]
data = data[-597,] # It is duplicate
TempData = data[, -1]
summary(pic(TempData$GenerationLength_d, tree2))
Rep = read.table('../../../ComparativeGenomics/Body/3Results/ecoreps.csv', sep = ';', header = TRUE)
data = Rep[which(as.character(Rep$spece) %in% tree$tip.label),]
row.names(data) = data$spece
df_vec <- as.character(Rep$spece)
tree_vec <- tree$tip.label
a <- setdiff(df_vec, tree_vec)
b <- setdiff(tree_vec, df_vec)
tree2 <- drop.tip(tree, b)
contrasts <- data %>%
select(generlen, TLOfADRRreal, TLOfADRR1) %>%
mutate_if(is.numeric, log2) %>%
map(pic, tree2)
summary(contrasts$generlen)
summary(pic(log2(data$generlen), tree2))
summary(data$generlen)
summary(TempData)
summary(TempData$GenerationLength_d)
contrasts <- TempData %>%
#  select(generlen, TLOfADRRreal, TLOfADRR1) %>%
#  mutate_if(is.numeric, log2) %>%
map(pic, tree2)
data = AGG[which(as.character(AGG$Species) %in% tree$tip.label),]
data$GenerationLength_d = log2(data$GenerationLength_d)  # I added log of generation length
df_vec <- as.character(AGG$Species)
tree_vec <- tree$tip.label
a <- setdiff(df_vec, tree_vec)
b <- setdiff(tree_vec, df_vec)
data = data[-597,] # It is duplicate
row.names(data) = data$Species
tree2 <- drop.tip(tree, b)
TempData = data[, -1]
contrasts <- TempData %>%
#  select(generlen, TLOfADRRreal, TLOfADRR1) %>%
#  mutate_if(is.numeric, log2) %>%
map(pic, tree2)
summary(pic(TempData$GenerationLength_d, tree2))
data = AGG[which(as.character(AGG$Species) %in% tree$tip.label),]
df_vec <- as.character(AGG$Species)
tree_vec <- tree$tip.label
a <- setdiff(df_vec, tree_vec)
b <- setdiff(tree_vec, df_vec)
data = data[-597,] # It is duplicate
row.names(data) = data$Species
tree2 <- drop.tip(tree, b)
TempData = data[, -1]
contrasts <- TempData %>%
#  select(generlen, TLOfADRRreal, TLOfADRR1) %>%
mutate_if(is.numeric, log2) %>%
map(pic, tree2)
summary(contrasts$GenerationLength_d)
summary(pic(TempData$GenerationLength_d, tree2)) == summary(contrasts$GenerationLength_d)
summary(pic(TempData$GenerationLength_d, tree2))
View(contrasts)
summary(log2(pic(TempData$GenerationLength_d, tree2))) == summary(contrasts$GenerationLength_d)
cor.test(contrasts$GenerationLength_d, contrasts$FrT, method= 'spearman')  # p = 0.02491, rho = -0.08810244  # PAPER
View(TempData)
View(contrasts)
length(tree2$tip.label)
summary(log2(pic(TempData$GenerationLength_d, tree2))) == summary(contrasts$GenerationLength_d)
summary(pic(log2(TempData$GenerationLength_d), tree2)) == summary(contrasts$GenerationLength_d)
summary(pic(log2(TempData$GenerationLength_d), tree2))
data = Rep[which(as.character(Rep$spece) %in% tree$tip.label),]
row.names(data) = data$spece
df_vec <- as.character(Rep$spece)
tree_vec <- tree$tip.label
a <- setdiff(df_vec, tree_vec)
b <- setdiff(tree_vec, df_vec)
tree2 <- drop.tip(tree, b)
length(tree2$tip.label)
contrasts <- data %>%
select(generlen, TLOfADRRreal, TLOfADRR1) %>%
mutate_if(is.numeric, log2) %>%
map(pic, tree2)
summary(contrasts$generlen)
summary(pic(log2(data$generlen), tree2))
data = AGG[which(as.character(AGG$Species) %in% tree$tip.label),]
# data$GenerationLength_d = log2(data$GenerationLength_d)  # I added log of generation length
df_vec <- as.character(AGG$Species)
tree_vec <- tree$tip.label
a <- setdiff(df_vec, tree_vec)
b <- setdiff(tree_vec, df_vec)
data = data[-597,] # It is duplicate
row.names(data) = data$Species
tree2 <- drop.tip(tree, b)
TempData = data[, -1]
contrasts <- TempData %>%
#  select(generlen, TLOfADRRreal, TLOfADRR1) %>%
mutate_if(is.numeric, log2) %>%
map(pic, tree2)
summary(pic(log2(TempData$GenerationLength_d), tree2)) == summary(contrasts$GenerationLength_d)
summary(pic(log2(TempData$GenerationLength_d), tree2))
contrasts2 <- as.data.frame(apply(TempData, 2, pic, tree2))
names(contrasts2) = names(TempData)
View(contrasts)
View(contrasts2)
names(data)
contrasts <- data %>%
select(GenerationLength_d, FrA, FrT, FrG, FrC) %>%
mutate_if(is.numeric, log2) %>%
map(pic, tree2)
summary(pic(log2(TempData$GenerationLength_d), tree2)) == summary(contrasts$GenerationLength_d)
summary(pic(log2(TempData$GenerationLength_d), tree2))
summary(TempData$GenerationLength_d)
data = Rep[which(as.character(Rep$spece) %in% tree$tip.label),]
summary(data$generlen)
